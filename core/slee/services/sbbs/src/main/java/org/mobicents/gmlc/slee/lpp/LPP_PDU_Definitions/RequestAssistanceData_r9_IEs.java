/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.5.0, Date: 07-May-2021.
 */
package org.mobicents.gmlc.slee.lpp.LPP_PDU_Definitions;

import com.objsys.asn1j.runtime.*;

public class RequestAssistanceData_r9_IEs extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_LPP_PDU_DefinitionsRtkey._rtkey);
      Asn1Type._setLicLocation(_LPP_PDU_DefinitionsRtkey._licLocation);
   }

   public String getAsn1TypeName()  {
      return "RequestAssistanceData-r9-IEs";
   }

   protected CommonIEsRequestAssistanceData commonIEsRequestAssistanceData;  // optional
   protected A_GNSS_RequestAssistanceData a_gnss_RequestAssistanceData;  // optional
   protected OTDOA_RequestAssistanceData otdoa_RequestAssistanceData;  // optional
   protected EPDU_Sequence epdu_RequestAssistanceData;  // optional
   protected Sensor_RequestAssistanceData_r14 sensor_RequestAssistanceData_r14;  // optional
   protected TBS_RequestAssistanceData_r14 tbs_RequestAssistanceData_r14;  // optional
   protected WLAN_RequestAssistanceData_r14 wlan_RequestAssistanceData_r14;  // optional
   protected NR_Multi_RTT_RequestAssistanceData_r16 nr_Multi_RTT_RequestAssistanceData_r16;  // optional
   protected NR_DL_AoD_RequestAssistanceData_r16 nr_DL_AoD_RequestAssistanceData_r16;  // optional
   protected NR_DL_TDOA_RequestAssistanceData_r16 nr_DL_TDOA_RequestAssistanceData_r16;  // optional
   protected Asn1OpenExt extElem1;

   public RequestAssistanceData_r9_IEs () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public RequestAssistanceData_r9_IEs (
      CommonIEsRequestAssistanceData commonIEsRequestAssistanceData_,
      A_GNSS_RequestAssistanceData a_gnss_RequestAssistanceData_,
      OTDOA_RequestAssistanceData otdoa_RequestAssistanceData_,
      EPDU_Sequence epdu_RequestAssistanceData_,
      Sensor_RequestAssistanceData_r14 sensor_RequestAssistanceData_r14_,
      TBS_RequestAssistanceData_r14 tbs_RequestAssistanceData_r14_,
      WLAN_RequestAssistanceData_r14 wlan_RequestAssistanceData_r14_,
      NR_Multi_RTT_RequestAssistanceData_r16 nr_Multi_RTT_RequestAssistanceData_r16_,
      NR_DL_AoD_RequestAssistanceData_r16 nr_DL_AoD_RequestAssistanceData_r16_,
      NR_DL_TDOA_RequestAssistanceData_r16 nr_DL_TDOA_RequestAssistanceData_r16_
   ) throws Asn1Exception {
      super();
      setCommonIEsRequestAssistanceData (commonIEsRequestAssistanceData_);
      setA_gnss_RequestAssistanceData (a_gnss_RequestAssistanceData_);
      setOtdoa_RequestAssistanceData (otdoa_RequestAssistanceData_);
      setEpdu_RequestAssistanceData (epdu_RequestAssistanceData_);
      setSensor_RequestAssistanceData_r14 (sensor_RequestAssistanceData_r14_);
      setTbs_RequestAssistanceData_r14 (tbs_RequestAssistanceData_r14_);
      setWlan_RequestAssistanceData_r14 (wlan_RequestAssistanceData_r14_);
      setNr_Multi_RTT_RequestAssistanceData_r16 (nr_Multi_RTT_RequestAssistanceData_r16_);
      setNr_DL_AoD_RequestAssistanceData_r16 (nr_DL_AoD_RequestAssistanceData_r16_);
      setNr_DL_TDOA_RequestAssistanceData_r16 (nr_DL_TDOA_RequestAssistanceData_r16_);
   }

   public void init () {
      commonIEsRequestAssistanceData = null;
      a_gnss_RequestAssistanceData = null;
      otdoa_RequestAssistanceData = null;
      epdu_RequestAssistanceData = null;
      sensor_RequestAssistanceData_r14 = null;
      tbs_RequestAssistanceData_r14 = null;
      wlan_RequestAssistanceData_r14 = null;
      nr_Multi_RTT_RequestAssistanceData_r16 = null;
      nr_DL_AoD_RequestAssistanceData_r16 = null;
      nr_DL_TDOA_RequestAssistanceData_r16 = null;
      extElem1 = null;
   }

   public boolean equals( Object obj ) {
      if ( this == obj ) return true;
      if ( !(obj instanceof RequestAssistanceData_r9_IEs) ) return false;

      RequestAssistanceData_r9_IEs rhs = (RequestAssistanceData_r9_IEs) obj;

      if (commonIEsRequestAssistanceData == null) {
         if (rhs.commonIEsRequestAssistanceData != null) return false;
      }
      else {
         if (!commonIEsRequestAssistanceData.equals(rhs.commonIEsRequestAssistanceData)) {
            return false;
         }
      }

      if (a_gnss_RequestAssistanceData == null) {
         if (rhs.a_gnss_RequestAssistanceData != null) return false;
      }
      else {
         if (!a_gnss_RequestAssistanceData.equals(rhs.a_gnss_RequestAssistanceData)) {
            return false;
         }
      }

      if (otdoa_RequestAssistanceData == null) {
         if (rhs.otdoa_RequestAssistanceData != null) return false;
      }
      else {
         if (!otdoa_RequestAssistanceData.equals(rhs.otdoa_RequestAssistanceData)) {
            return false;
         }
      }

      if (epdu_RequestAssistanceData == null) {
         if (rhs.epdu_RequestAssistanceData != null) return false;
      }
      else {
         if (!epdu_RequestAssistanceData.equals(rhs.epdu_RequestAssistanceData)) {
            return false;
         }
      }

      if (sensor_RequestAssistanceData_r14 == null) {
         if (rhs.sensor_RequestAssistanceData_r14 != null) return false;
      }
      else {
         if (!sensor_RequestAssistanceData_r14.equals(rhs.sensor_RequestAssistanceData_r14)) {
            return false;
         }
      }

      if (tbs_RequestAssistanceData_r14 == null) {
         if (rhs.tbs_RequestAssistanceData_r14 != null) return false;
      }
      else {
         if (!tbs_RequestAssistanceData_r14.equals(rhs.tbs_RequestAssistanceData_r14)) {
            return false;
         }
      }

      if (wlan_RequestAssistanceData_r14 == null) {
         if (rhs.wlan_RequestAssistanceData_r14 != null) return false;
      }
      else {
         if (!wlan_RequestAssistanceData_r14.equals(rhs.wlan_RequestAssistanceData_r14)) {
            return false;
         }
      }

      if (nr_Multi_RTT_RequestAssistanceData_r16 == null) {
         if (rhs.nr_Multi_RTT_RequestAssistanceData_r16 != null) return false;
      }
      else {
         if (!nr_Multi_RTT_RequestAssistanceData_r16.equals(rhs.nr_Multi_RTT_RequestAssistanceData_r16)) {
            return false;
         }
      }

      if (nr_DL_AoD_RequestAssistanceData_r16 == null) {
         if (rhs.nr_DL_AoD_RequestAssistanceData_r16 != null) return false;
      }
      else {
         if (!nr_DL_AoD_RequestAssistanceData_r16.equals(rhs.nr_DL_AoD_RequestAssistanceData_r16)) {
            return false;
         }
      }

      if (nr_DL_TDOA_RequestAssistanceData_r16 == null) {
         if (rhs.nr_DL_TDOA_RequestAssistanceData_r16 != null) return false;
      }
      else {
         if (!nr_DL_TDOA_RequestAssistanceData_r16.equals(rhs.nr_DL_TDOA_RequestAssistanceData_r16)) {
            return false;
         }
      }

      if (extElem1 == null) {
         if (rhs.extElem1 != null) return false;
      }
      else {
         if (!extElem1.equals(rhs.extElem1)) {
            return false;
         }
      }

      return true;
   }

   public int hashCode() {
      int __code = 1;

      if (commonIEsRequestAssistanceData != null) __code = 31*__code + commonIEsRequestAssistanceData.hashCode();
      if (a_gnss_RequestAssistanceData != null) __code = 31*__code + a_gnss_RequestAssistanceData.hashCode();
      if (otdoa_RequestAssistanceData != null) __code = 31*__code + otdoa_RequestAssistanceData.hashCode();
      if (epdu_RequestAssistanceData != null) __code = 31*__code + epdu_RequestAssistanceData.hashCode();
      if (sensor_RequestAssistanceData_r14 != null) __code = 31*__code + sensor_RequestAssistanceData_r14.hashCode();
      if (tbs_RequestAssistanceData_r14 != null) __code = 31*__code + tbs_RequestAssistanceData_r14.hashCode();
      if (wlan_RequestAssistanceData_r14 != null) __code = 31*__code + wlan_RequestAssistanceData_r14.hashCode();
      if (nr_Multi_RTT_RequestAssistanceData_r16 != null) __code = 31*__code + nr_Multi_RTT_RequestAssistanceData_r16.hashCode();
      if (nr_DL_AoD_RequestAssistanceData_r16 != null) __code = 31*__code + nr_DL_AoD_RequestAssistanceData_r16.hashCode();
      if (nr_DL_TDOA_RequestAssistanceData_r16 != null) __code = 31*__code + nr_DL_TDOA_RequestAssistanceData_r16.hashCode();
      if (extElem1 != null) __code = 31*__code + extElem1.hashCode();

      return __code;
   }

   /**
    * Accessor/mutator methods for CommonIEsRequestAssistanceData
    */
   public CommonIEsRequestAssistanceData getCommonIEsRequestAssistanceData () {
      return commonIEsRequestAssistanceData;
   }

   public void setCommonIEsRequestAssistanceData (CommonIEsRequestAssistanceData value) {
      this.commonIEsRequestAssistanceData = value;
   }

   public boolean hasCommonIEsRequestAssistanceData () {
      return (commonIEsRequestAssistanceData != null);
   }

   /**
    * Accessor/mutator methods for A_gnss_RequestAssistanceData
    */
   public A_GNSS_RequestAssistanceData getA_gnss_RequestAssistanceData () {
      return a_gnss_RequestAssistanceData;
   }

   public void setA_gnss_RequestAssistanceData (A_GNSS_RequestAssistanceData value) {
      this.a_gnss_RequestAssistanceData = value;
   }

   public boolean hasA_gnss_RequestAssistanceData () {
      return (a_gnss_RequestAssistanceData != null);
   }

   /**
    * Accessor/mutator methods for Otdoa_RequestAssistanceData
    */
   public OTDOA_RequestAssistanceData getOtdoa_RequestAssistanceData () {
      return otdoa_RequestAssistanceData;
   }

   public void setOtdoa_RequestAssistanceData (OTDOA_RequestAssistanceData value) {
      this.otdoa_RequestAssistanceData = value;
   }

   public boolean hasOtdoa_RequestAssistanceData () {
      return (otdoa_RequestAssistanceData != null);
   }

   /**
    * Accessor/mutator methods for Epdu_RequestAssistanceData
    */
   public EPDU_Sequence getEpdu_RequestAssistanceData () {
      return epdu_RequestAssistanceData;
   }

   public void setEpdu_RequestAssistanceData (EPDU_Sequence value) 
      throws Asn1Exception
   {
      if (!((value.getElements().length >= 1 && value.getElements().length <= 16))) {
         throw new Asn1ConsVioException ("value.getElements().length", value.getElements().length);
      }

      this.epdu_RequestAssistanceData = value;
   }

   public boolean hasEpdu_RequestAssistanceData () {
      return (epdu_RequestAssistanceData != null);
   }

   /**
    * Accessor/mutator methods for Sensor_RequestAssistanceData_r14
    */
   public Sensor_RequestAssistanceData_r14 getSensor_RequestAssistanceData_r14 () {
      return sensor_RequestAssistanceData_r14;
   }

   public void setSensor_RequestAssistanceData_r14 (Sensor_RequestAssistanceData_r14 value) {
      this.sensor_RequestAssistanceData_r14 = value;
   }

   public boolean hasSensor_RequestAssistanceData_r14 () {
      return (sensor_RequestAssistanceData_r14 != null);
   }

   /**
    * Accessor/mutator methods for Tbs_RequestAssistanceData_r14
    */
   public TBS_RequestAssistanceData_r14 getTbs_RequestAssistanceData_r14 () {
      return tbs_RequestAssistanceData_r14;
   }

   public void setTbs_RequestAssistanceData_r14 (TBS_RequestAssistanceData_r14 value) {
      this.tbs_RequestAssistanceData_r14 = value;
   }

   public boolean hasTbs_RequestAssistanceData_r14 () {
      return (tbs_RequestAssistanceData_r14 != null);
   }

   /**
    * Accessor/mutator methods for Wlan_RequestAssistanceData_r14
    */
   public WLAN_RequestAssistanceData_r14 getWlan_RequestAssistanceData_r14 () {
      return wlan_RequestAssistanceData_r14;
   }

   public void setWlan_RequestAssistanceData_r14 (WLAN_RequestAssistanceData_r14 value) {
      this.wlan_RequestAssistanceData_r14 = value;
   }

   public boolean hasWlan_RequestAssistanceData_r14 () {
      return (wlan_RequestAssistanceData_r14 != null);
   }

   /**
    * Accessor/mutator methods for Nr_Multi_RTT_RequestAssistanceData_r16
    */
   public NR_Multi_RTT_RequestAssistanceData_r16 getNr_Multi_RTT_RequestAssistanceData_r16 () {
      return nr_Multi_RTT_RequestAssistanceData_r16;
   }

   public void setNr_Multi_RTT_RequestAssistanceData_r16 (NR_Multi_RTT_RequestAssistanceData_r16 value) {
      this.nr_Multi_RTT_RequestAssistanceData_r16 = value;
   }

   public boolean hasNr_Multi_RTT_RequestAssistanceData_r16 () {
      return (nr_Multi_RTT_RequestAssistanceData_r16 != null);
   }

   /**
    * Accessor/mutator methods for Nr_DL_AoD_RequestAssistanceData_r16
    */
   public NR_DL_AoD_RequestAssistanceData_r16 getNr_DL_AoD_RequestAssistanceData_r16 () {
      return nr_DL_AoD_RequestAssistanceData_r16;
   }

   public void setNr_DL_AoD_RequestAssistanceData_r16 (NR_DL_AoD_RequestAssistanceData_r16 value) {
      this.nr_DL_AoD_RequestAssistanceData_r16 = value;
   }

   public boolean hasNr_DL_AoD_RequestAssistanceData_r16 () {
      return (nr_DL_AoD_RequestAssistanceData_r16 != null);
   }

   /**
    * Accessor/mutator methods for Nr_DL_TDOA_RequestAssistanceData_r16
    */
   public NR_DL_TDOA_RequestAssistanceData_r16 getNr_DL_TDOA_RequestAssistanceData_r16 () {
      return nr_DL_TDOA_RequestAssistanceData_r16;
   }

   public void setNr_DL_TDOA_RequestAssistanceData_r16 (NR_DL_TDOA_RequestAssistanceData_r16 value) {
      this.nr_DL_TDOA_RequestAssistanceData_r16 = value;
   }

   public boolean hasNr_DL_TDOA_RequestAssistanceData_r16 () {
      return (nr_DL_TDOA_RequestAssistanceData_r16 != null);
   }

   /**
    * Accessor/mutator methods for ExtElem1
    */
   public Asn1OpenExt getExtElem1 () {
      return extElem1;
   }

   public void setExtElem1 (Asn1OpenExt value) {
      this.extElem1 = value;
   }

   public int getElementCount() { return 11; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return commonIEsRequestAssistanceData;
         case 1: return a_gnss_RequestAssistanceData;
         case 2: return otdoa_RequestAssistanceData;
         case 3: return epdu_RequestAssistanceData;
         case 4: return sensor_RequestAssistanceData_r14;
         case 5: return tbs_RequestAssistanceData_r14;
         case 6: return wlan_RequestAssistanceData_r14;
         case 7: return nr_Multi_RTT_RequestAssistanceData_r16;
         case 8: return nr_DL_AoD_RequestAssistanceData_r16;
         case 9: return nr_DL_TDOA_RequestAssistanceData_r16;
         case 10: return extElem1;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "commonIEsRequestAssistanceData";
         case 1: return "a-gnss-RequestAssistanceData";
         case 2: return "otdoa-RequestAssistanceData";
         case 3: return "epdu-RequestAssistanceData";
         case 4: return "sensor-RequestAssistanceData-r14";
         case 5: return "tbs-RequestAssistanceData-r14";
         case 6: return "wlan-RequestAssistanceData-r14";
         case 7: return "nr-Multi-RTT-RequestAssistanceData-r16";
         case 8: return "nr-DL-AoD-RequestAssistanceData-r16";
         case 9: return "nr-DL-TDOA-RequestAssistanceData-r16";
         case 10: return null;
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // extension bit

      boolean extbit = buffer.decodeBit ("extbit");

      // optional bits

      boolean commonIEsRequestAssistanceDataPresent = buffer.decodeBit ("commonIEsRequestAssistanceDataPresent");
      boolean a_gnss_RequestAssistanceDataPresent = buffer.decodeBit ("a_gnss_RequestAssistanceDataPresent");
      boolean otdoa_RequestAssistanceDataPresent = buffer.decodeBit ("otdoa_RequestAssistanceDataPresent");
      boolean epdu_RequestAssistanceDataPresent = buffer.decodeBit ("epdu_RequestAssistanceDataPresent");

      // decode commonIEsRequestAssistanceData

      if (commonIEsRequestAssistanceDataPresent) {
         buffer.getContext().eventDispatcher.startElement("commonIEsRequestAssistanceData", -1);

         commonIEsRequestAssistanceData = new CommonIEsRequestAssistanceData();
         commonIEsRequestAssistanceData.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("commonIEsRequestAssistanceData", -1);
      }
      else {
         commonIEsRequestAssistanceData = null;
      }

      // decode a_gnss_RequestAssistanceData

      if (a_gnss_RequestAssistanceDataPresent) {
         buffer.getContext().eventDispatcher.startElement("a_gnss_RequestAssistanceData", -1);

         a_gnss_RequestAssistanceData = new A_GNSS_RequestAssistanceData();
         a_gnss_RequestAssistanceData.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("a_gnss_RequestAssistanceData", -1);
      }
      else {
         a_gnss_RequestAssistanceData = null;
      }

      // decode otdoa_RequestAssistanceData

      if (otdoa_RequestAssistanceDataPresent) {
         buffer.getContext().eventDispatcher.startElement("otdoa_RequestAssistanceData", -1);

         otdoa_RequestAssistanceData = new OTDOA_RequestAssistanceData();
         otdoa_RequestAssistanceData.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("otdoa_RequestAssistanceData", -1);
      }
      else {
         otdoa_RequestAssistanceData = null;
      }

      // decode epdu_RequestAssistanceData

      if (epdu_RequestAssistanceDataPresent) {
         buffer.getContext().eventDispatcher.startElement("epdu_RequestAssistanceData", -1);

         epdu_RequestAssistanceData = new EPDU_Sequence();
         epdu_RequestAssistanceData.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("epdu_RequestAssistanceData", -1);
      }
      else {
         epdu_RequestAssistanceData = null;
      }

      if (extbit) {

         int bitcnt = buffer.decodeSmallLength(), i = 0;
         long bitidx = buffer.getBitOffset() + bitcnt;
         boolean[] bitmap = new boolean [bitcnt];

         if (i < bitcnt) bitmap[i++] = buffer.decodeBit ("sensor_RequestAssistanceData_r14Present");
         if (i < bitcnt) bitmap[i++] = buffer.decodeBit ("tbs_RequestAssistanceData_r14Present");
         if (i < bitcnt) bitmap[i++] = buffer.decodeBit ("wlan_RequestAssistanceData_r14Present");
         if (i < bitcnt) bitmap[i++] = buffer.decodeBit ("nr_Multi_RTT_RequestAssistanceData_r16Present");
         if (i < bitcnt) bitmap[i++] = buffer.decodeBit ("nr_DL_AoD_RequestAssistanceData_r16Present");
         if (i < bitcnt) bitmap[i++] = buffer.decodeBit ("nr_DL_TDOA_RequestAssistanceData_r16Present");

         while (i < bitcnt) {
            bitmap[i++] = buffer.decodeBit ("unknown");
         }

         i = 0;

         // decode sensor_RequestAssistanceData_r14

         if (i < bitcnt && bitmap[i++]) {
            buffer.getContext().eventDispatcher.startElement("sensor_RequestAssistanceData_r14", -1);

            long _curidx = buffer.getBitOffset();
            bitidx = buffer.decodeExtLength ();
            if (bitidx - _curidx >= 131088)  {
               throw new Asn1Exception ("PER fragmentation not enabled: add -perindef to decode");
            }

            sensor_RequestAssistanceData_r14 = new Sensor_RequestAssistanceData_r14();
            sensor_RequestAssistanceData_r14.decode (buffer);

            buffer.moveBitCursor (bitidx);
            buffer.getContext().eventDispatcher.endElement("sensor_RequestAssistanceData_r14", -1);

         }
         else {
            sensor_RequestAssistanceData_r14 = null;
         }

         // decode tbs_RequestAssistanceData_r14

         if (i < bitcnt && bitmap[i++]) {
            buffer.getContext().eventDispatcher.startElement("tbs_RequestAssistanceData_r14", -1);

            long _curidx = buffer.getBitOffset();
            bitidx = buffer.decodeExtLength ();
            if (bitidx - _curidx >= 131088)  {
               throw new Asn1Exception ("PER fragmentation not enabled: add -perindef to decode");
            }

            tbs_RequestAssistanceData_r14 = new TBS_RequestAssistanceData_r14();
            tbs_RequestAssistanceData_r14.decode (buffer);

            buffer.moveBitCursor (bitidx);
            buffer.getContext().eventDispatcher.endElement("tbs_RequestAssistanceData_r14", -1);

         }
         else {
            tbs_RequestAssistanceData_r14 = null;
         }

         // decode wlan_RequestAssistanceData_r14

         if (i < bitcnt && bitmap[i++]) {
            buffer.getContext().eventDispatcher.startElement("wlan_RequestAssistanceData_r14", -1);

            long _curidx = buffer.getBitOffset();
            bitidx = buffer.decodeExtLength ();
            if (bitidx - _curidx >= 131088)  {
               throw new Asn1Exception ("PER fragmentation not enabled: add -perindef to decode");
            }

            wlan_RequestAssistanceData_r14 = new WLAN_RequestAssistanceData_r14();
            wlan_RequestAssistanceData_r14.decode (buffer);

            buffer.moveBitCursor (bitidx);
            buffer.getContext().eventDispatcher.endElement("wlan_RequestAssistanceData_r14", -1);

         }
         else {
            wlan_RequestAssistanceData_r14 = null;
         }

         // decode nr_Multi_RTT_RequestAssistanceData_r16

         if (i < bitcnt && bitmap[i++]) {
            buffer.getContext().eventDispatcher.startElement("nr_Multi_RTT_RequestAssistanceData_r16", -1);

            long _curidx = buffer.getBitOffset();
            bitidx = buffer.decodeExtLength ();
            if (bitidx - _curidx >= 131088)  {
               throw new Asn1Exception ("PER fragmentation not enabled: add -perindef to decode");
            }

            nr_Multi_RTT_RequestAssistanceData_r16 = new NR_Multi_RTT_RequestAssistanceData_r16();
            nr_Multi_RTT_RequestAssistanceData_r16.decode (buffer);

            buffer.moveBitCursor (bitidx);
            buffer.getContext().eventDispatcher.endElement("nr_Multi_RTT_RequestAssistanceData_r16", -1);

         }
         else {
            nr_Multi_RTT_RequestAssistanceData_r16 = null;
         }

         // decode nr_DL_AoD_RequestAssistanceData_r16

         if (i < bitcnt && bitmap[i++]) {
            buffer.getContext().eventDispatcher.startElement("nr_DL_AoD_RequestAssistanceData_r16", -1);

            long _curidx = buffer.getBitOffset();
            bitidx = buffer.decodeExtLength ();
            if (bitidx - _curidx >= 131088)  {
               throw new Asn1Exception ("PER fragmentation not enabled: add -perindef to decode");
            }

            nr_DL_AoD_RequestAssistanceData_r16 = new NR_DL_AoD_RequestAssistanceData_r16();
            nr_DL_AoD_RequestAssistanceData_r16.decode (buffer);

            buffer.moveBitCursor (bitidx);
            buffer.getContext().eventDispatcher.endElement("nr_DL_AoD_RequestAssistanceData_r16", -1);

         }
         else {
            nr_DL_AoD_RequestAssistanceData_r16 = null;
         }

         // decode nr_DL_TDOA_RequestAssistanceData_r16

         if (i < bitcnt && bitmap[i++]) {
            buffer.getContext().eventDispatcher.startElement("nr_DL_TDOA_RequestAssistanceData_r16", -1);

            long _curidx = buffer.getBitOffset();
            bitidx = buffer.decodeExtLength ();
            if (bitidx - _curidx >= 131088)  {
               throw new Asn1Exception ("PER fragmentation not enabled: add -perindef to decode");
            }

            nr_DL_TDOA_RequestAssistanceData_r16 = new NR_DL_TDOA_RequestAssistanceData_r16();
            nr_DL_TDOA_RequestAssistanceData_r16.decode (buffer);

            buffer.moveBitCursor (bitidx);
            buffer.getContext().eventDispatcher.endElement("nr_DL_TDOA_RequestAssistanceData_r16", -1);

         }
         else {
            nr_DL_TDOA_RequestAssistanceData_r16 = null;
         }

         // decode unknown extension elements

         if (i < bitcnt) {
            Asn1OpenType openType = null;
            extElem1 = new Asn1OpenExt();
            int j = 0;
            while (i < bitcnt) {
               if (bitmap[i]) {
                  buffer.getContext().eventDispatcher.startElement("...", -1);

                  openType = extElem1.decodeOpenType (buffer, true, j++);
               }
               else {
                  extElem1.setOpenType (null, j++);
               }
               i++;
            }
         }
         buffer.byteAlign ();

      }

   }

   public void encode (Asn1PerEncodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      // extension bit

      boolean extbit = ((sensor_RequestAssistanceData_r14 != null) ||
      (tbs_RequestAssistanceData_r14 != null) ||
      (wlan_RequestAssistanceData_r14 != null) ||
      (nr_Multi_RTT_RequestAssistanceData_r16 != null) ||
      (nr_DL_AoD_RequestAssistanceData_r16 != null) ||
      (nr_DL_TDOA_RequestAssistanceData_r16 != null) ||
      ((extElem1 != null) && (!extElem1.value.isEmpty()))
      );

      buffer.encodeBit (extbit, "extbit");

      // encode optional elements bit mask

      buffer.encodeBit ((commonIEsRequestAssistanceData != null), null);
      buffer.encodeBit ((a_gnss_RequestAssistanceData != null), null);
      buffer.encodeBit ((otdoa_RequestAssistanceData != null), null);
      buffer.encodeBit ((epdu_RequestAssistanceData != null), null);

      // encode commonIEsRequestAssistanceData

      if (commonIEsRequestAssistanceData != null) {
         buffer.getContext().eventDispatcher.startElement("commonIEsRequestAssistanceData", -1);

         commonIEsRequestAssistanceData.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("commonIEsRequestAssistanceData", -1);
      }

      // encode a_gnss_RequestAssistanceData

      if (a_gnss_RequestAssistanceData != null) {
         buffer.getContext().eventDispatcher.startElement("a_gnss_RequestAssistanceData", -1);

         a_gnss_RequestAssistanceData.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("a_gnss_RequestAssistanceData", -1);
      }

      // encode otdoa_RequestAssistanceData

      if (otdoa_RequestAssistanceData != null) {
         buffer.getContext().eventDispatcher.startElement("otdoa_RequestAssistanceData", -1);

         otdoa_RequestAssistanceData.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("otdoa_RequestAssistanceData", -1);
      }

      // encode epdu_RequestAssistanceData

      if (epdu_RequestAssistanceData != null) {
         buffer.getContext().eventDispatcher.startElement("epdu_RequestAssistanceData", -1);

         epdu_RequestAssistanceData.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("epdu_RequestAssistanceData", -1);
      }

      if (extbit) {

         // encode extension optional bits length

         int bitcnt = 6;
         if (extElem1 != null) bitcnt += extElem1.value.size();
         buffer.encodeSmallLength (bitcnt);

         // encode optional bits

         buffer.encodeBit ((sensor_RequestAssistanceData_r14 != null), null);
         buffer.encodeBit ((tbs_RequestAssistanceData_r14 != null), null);
         buffer.encodeBit ((wlan_RequestAssistanceData_r14 != null), null);
         buffer.encodeBit ((nr_Multi_RTT_RequestAssistanceData_r16 != null), null);
         buffer.encodeBit ((nr_DL_AoD_RequestAssistanceData_r16 != null), null);
         buffer.encodeBit ((nr_DL_TDOA_RequestAssistanceData_r16 != null), null);

         if (extElem1 != null && extElem1.value.size() > 0) {
            extElem1.encodeExtBits (buffer);
         }

         // encode extension elements

         Asn1PerEncodeBuffer mainBuffer = buffer;
         buffer = new Asn1PerEncodeBuffer (buffer.isAligned());

         // sensor_RequestAssistanceData_r14

         if (sensor_RequestAssistanceData_r14 != null) {
            buffer.reset();
            sensor_RequestAssistanceData_r14.encode (buffer);
            buffer.getContext().eventDispatcher.startElement("sensor_RequestAssistanceData_r14", -1);

            mainBuffer.encodeOpenType (buffer, null);

            buffer.getContext().eventDispatcher.endElement("sensor_RequestAssistanceData_r14", -1);
         }

         // tbs_RequestAssistanceData_r14

         if (tbs_RequestAssistanceData_r14 != null) {
            buffer.reset();
            tbs_RequestAssistanceData_r14.encode (buffer);
            buffer.getContext().eventDispatcher.startElement("tbs_RequestAssistanceData_r14", -1);

            mainBuffer.encodeOpenType (buffer, null);

            buffer.getContext().eventDispatcher.endElement("tbs_RequestAssistanceData_r14", -1);
         }

         // wlan_RequestAssistanceData_r14

         if (wlan_RequestAssistanceData_r14 != null) {
            buffer.reset();
            wlan_RequestAssistanceData_r14.encode (buffer);
            buffer.getContext().eventDispatcher.startElement("wlan_RequestAssistanceData_r14", -1);

            mainBuffer.encodeOpenType (buffer, null);

            buffer.getContext().eventDispatcher.endElement("wlan_RequestAssistanceData_r14", -1);
         }

         // nr_Multi_RTT_RequestAssistanceData_r16

         if (nr_Multi_RTT_RequestAssistanceData_r16 != null) {
            buffer.reset();
            nr_Multi_RTT_RequestAssistanceData_r16.encode (buffer);
            buffer.getContext().eventDispatcher.startElement("nr_Multi_RTT_RequestAssistanceData_r16", -1);

            mainBuffer.encodeOpenType (buffer, null);

            buffer.getContext().eventDispatcher.endElement("nr_Multi_RTT_RequestAssistanceData_r16", -1);
         }

         // nr_DL_AoD_RequestAssistanceData_r16

         if (nr_DL_AoD_RequestAssistanceData_r16 != null) {
            buffer.reset();
            nr_DL_AoD_RequestAssistanceData_r16.encode (buffer);
            buffer.getContext().eventDispatcher.startElement("nr_DL_AoD_RequestAssistanceData_r16", -1);

            mainBuffer.encodeOpenType (buffer, null);

            buffer.getContext().eventDispatcher.endElement("nr_DL_AoD_RequestAssistanceData_r16", -1);
         }

         // nr_DL_TDOA_RequestAssistanceData_r16

         if (nr_DL_TDOA_RequestAssistanceData_r16 != null) {
            buffer.reset();
            nr_DL_TDOA_RequestAssistanceData_r16.encode (buffer);
            buffer.getContext().eventDispatcher.startElement("nr_DL_TDOA_RequestAssistanceData_r16", -1);

            mainBuffer.encodeOpenType (buffer, null);

            buffer.getContext().eventDispatcher.endElement("nr_DL_TDOA_RequestAssistanceData_r16", -1);
         }

         buffer = mainBuffer;

         if (extElem1 != null && extElem1.value.size() > 0) {
            extElem1.encode (buffer);
         }
      }
   }

}

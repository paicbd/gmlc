/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.5.0, Date: 07-May-2021.
 */
package org.mobicents.gmlc.slee.lpp.LPP_PDU_Definitions;

import com.objsys.asn1j.runtime.*;

public class SupportedBandEUTRA_v9a0 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_LPP_PDU_DefinitionsRtkey._rtkey);
      Asn1Type._setLicLocation(_LPP_PDU_DefinitionsRtkey._licLocation);
   }

   public String getAsn1TypeName()  {
      return "SupportedBandEUTRA-v9a0";
   }

   protected Asn1Integer bandEUTRA_v9a0;  // optional

   public SupportedBandEUTRA_v9a0 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public SupportedBandEUTRA_v9a0 (
      Asn1Integer bandEUTRA_v9a0_
   ) throws Asn1Exception {
      super();
      setBandEUTRA_v9a0 (bandEUTRA_v9a0_);
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public SupportedBandEUTRA_v9a0 (long bandEUTRA_v9a0_
   ) throws Asn1Exception {
      super();
      setBandEUTRA_v9a0 (bandEUTRA_v9a0_);
   }

   public void init () {
      bandEUTRA_v9a0 = null;
   }

   public boolean equals( Object obj ) {
      if ( this == obj ) return true;
      if ( !(obj instanceof SupportedBandEUTRA_v9a0) ) return false;

      SupportedBandEUTRA_v9a0 rhs = (SupportedBandEUTRA_v9a0) obj;

      if (bandEUTRA_v9a0 == null) {
         if (rhs.bandEUTRA_v9a0 != null) return false;
      }
      else {
         if (!bandEUTRA_v9a0.equals(rhs.bandEUTRA_v9a0)) {
            return false;
         }
      }

      return true;
   }

   public int hashCode() {
      int __code = 1;

      if (bandEUTRA_v9a0 != null) __code = 31*__code + bandEUTRA_v9a0.hashCode();

      return __code;
   }

   /**
    * Accessor/mutator methods for BandEUTRA_v9a0
    */
   public Asn1Integer getBandEUTRA_v9a0 () {
      return bandEUTRA_v9a0;
   }

   public void setBandEUTRA_v9a0 (Asn1Integer value) 
      throws Asn1Exception
   {
      if (!((value.value >= 65 && value.value <= 256))) {
         throw new Asn1ConsVioException ("value.value", value.value);
      }

      this.bandEUTRA_v9a0 = value;
   }

   public void setBandEUTRA_v9a0 (long value) 
      throws Asn1Exception
   {
      setBandEUTRA_v9a0 (new Asn1Integer(value));
   }
   public boolean hasBandEUTRA_v9a0 () {
      return (bandEUTRA_v9a0 != null);
   }

   public int getElementCount() { return 1; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return bandEUTRA_v9a0;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "bandEUTRA-v9a0";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // optional bits

      boolean bandEUTRA_v9a0Present = buffer.decodeBit ("bandEUTRA_v9a0Present");

      // decode bandEUTRA_v9a0

      if (bandEUTRA_v9a0Present) {
         buffer.getContext().eventDispatcher.startElement("bandEUTRA_v9a0", -1);

         bandEUTRA_v9a0 = new Asn1Integer();
         bandEUTRA_v9a0.decode (buffer, 65, 256);
         buffer.getContext().eventDispatcher.endElement("bandEUTRA_v9a0", -1);
      }
      else {
         bandEUTRA_v9a0 = null;
      }

   }

   public void encode (Asn1PerEncodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      // encode optional elements bit mask

      buffer.encodeBit ((bandEUTRA_v9a0 != null), null);

      // encode bandEUTRA_v9a0

      if (bandEUTRA_v9a0 != null) {
         buffer.getContext().eventDispatcher.startElement("bandEUTRA_v9a0", -1);

         bandEUTRA_v9a0.encode (buffer, 65, 256);

         buffer.getContext().eventDispatcher.endElement("bandEUTRA_v9a0", -1);
      }

   }

}

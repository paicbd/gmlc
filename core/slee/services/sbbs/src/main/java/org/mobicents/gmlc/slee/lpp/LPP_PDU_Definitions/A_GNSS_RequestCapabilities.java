/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.5.0, Date: 07-May-2021.
 */
package org.mobicents.gmlc.slee.lpp.LPP_PDU_Definitions;

import com.objsys.asn1j.runtime.*;

public class A_GNSS_RequestCapabilities extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_LPP_PDU_DefinitionsRtkey._rtkey);
      Asn1Type._setLicLocation(_LPP_PDU_DefinitionsRtkey._licLocation);
   }

   public String getAsn1TypeName()  {
      return "A-GNSS-RequestCapabilities";
   }

   protected Asn1Boolean gnss_SupportListReq;
   protected Asn1Boolean assistanceDataSupportListReq;
   protected Asn1Boolean locationVelocityTypesReq;
   protected Asn1OpenExt extElem1;

   public A_GNSS_RequestCapabilities () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public A_GNSS_RequestCapabilities (
      Asn1Boolean gnss_SupportListReq_,
      Asn1Boolean assistanceDataSupportListReq_,
      Asn1Boolean locationVelocityTypesReq_
   ) {
      super();
      setGnss_SupportListReq (gnss_SupportListReq_);
      setAssistanceDataSupportListReq (assistanceDataSupportListReq_);
      setLocationVelocityTypesReq (locationVelocityTypesReq_);
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public A_GNSS_RequestCapabilities (boolean gnss_SupportListReq_,
      boolean assistanceDataSupportListReq_,
      boolean locationVelocityTypesReq_
   ) {
      super();
      setGnss_SupportListReq (gnss_SupportListReq_);
      setAssistanceDataSupportListReq (assistanceDataSupportListReq_);
      setLocationVelocityTypesReq (locationVelocityTypesReq_);
   }

   public void init () {
      gnss_SupportListReq = null;
      assistanceDataSupportListReq = null;
      locationVelocityTypesReq = null;
      extElem1 = null;
   }

   public boolean equals( Object obj ) {
      if ( this == obj ) return true;
      if ( !(obj instanceof A_GNSS_RequestCapabilities) ) return false;

      A_GNSS_RequestCapabilities rhs = (A_GNSS_RequestCapabilities) obj;

      if (gnss_SupportListReq == null) {
         if (rhs.gnss_SupportListReq != null) return false;
      }
      else {
         if (!gnss_SupportListReq.equals(rhs.gnss_SupportListReq)) {
            return false;
         }
      }

      if (assistanceDataSupportListReq == null) {
         if (rhs.assistanceDataSupportListReq != null) return false;
      }
      else {
         if (!assistanceDataSupportListReq.equals(rhs.assistanceDataSupportListReq)) {
            return false;
         }
      }

      if (locationVelocityTypesReq == null) {
         if (rhs.locationVelocityTypesReq != null) return false;
      }
      else {
         if (!locationVelocityTypesReq.equals(rhs.locationVelocityTypesReq)) {
            return false;
         }
      }

      if (extElem1 == null) {
         if (rhs.extElem1 != null) return false;
      }
      else {
         if (!extElem1.equals(rhs.extElem1)) {
            return false;
         }
      }

      return true;
   }

   public int hashCode() {
      int __code = 1;

      if (gnss_SupportListReq != null) __code = 31*__code + gnss_SupportListReq.hashCode();
      if (assistanceDataSupportListReq != null) __code = 31*__code + assistanceDataSupportListReq.hashCode();
      if (locationVelocityTypesReq != null) __code = 31*__code + locationVelocityTypesReq.hashCode();
      if (extElem1 != null) __code = 31*__code + extElem1.hashCode();

      return __code;
   }

   /**
    * Accessor/mutator methods for Gnss_SupportListReq
    */
   public Asn1Boolean getGnss_SupportListReq () {
      return gnss_SupportListReq;
   }

   public void setGnss_SupportListReq (Asn1Boolean value) {
      this.gnss_SupportListReq = value;
   }

   public void setGnss_SupportListReq (boolean value) {
      setGnss_SupportListReq (new Asn1Boolean(value));
   }

   /**
    * Accessor/mutator methods for AssistanceDataSupportListReq
    */
   public Asn1Boolean getAssistanceDataSupportListReq () {
      return assistanceDataSupportListReq;
   }

   public void setAssistanceDataSupportListReq (Asn1Boolean value) {
      this.assistanceDataSupportListReq = value;
   }

   public void setAssistanceDataSupportListReq (boolean value) {
      setAssistanceDataSupportListReq (new Asn1Boolean(value));
   }

   /**
    * Accessor/mutator methods for LocationVelocityTypesReq
    */
   public Asn1Boolean getLocationVelocityTypesReq () {
      return locationVelocityTypesReq;
   }

   public void setLocationVelocityTypesReq (Asn1Boolean value) {
      this.locationVelocityTypesReq = value;
   }

   public void setLocationVelocityTypesReq (boolean value) {
      setLocationVelocityTypesReq (new Asn1Boolean(value));
   }

   /**
    * Accessor/mutator methods for ExtElem1
    */
   public Asn1OpenExt getExtElem1 () {
      return extElem1;
   }

   public void setExtElem1 (Asn1OpenExt value) {
      this.extElem1 = value;
   }

   public int getElementCount() { return 4; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return gnss_SupportListReq;
         case 1: return assistanceDataSupportListReq;
         case 2: return locationVelocityTypesReq;
         case 3: return extElem1;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "gnss-SupportListReq";
         case 1: return "assistanceDataSupportListReq";
         case 2: return "locationVelocityTypesReq";
         case 3: return null;
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // extension bit

      boolean extbit = buffer.decodeBit ("extbit");

      // decode gnss_SupportListReq

      buffer.getContext().eventDispatcher.startElement("gnss_SupportListReq", -1);

      gnss_SupportListReq = new Asn1Boolean();
      gnss_SupportListReq.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("gnss_SupportListReq", -1);

      // decode assistanceDataSupportListReq

      buffer.getContext().eventDispatcher.startElement("assistanceDataSupportListReq", -1);

      assistanceDataSupportListReq = new Asn1Boolean();
      assistanceDataSupportListReq.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("assistanceDataSupportListReq", -1);

      // decode locationVelocityTypesReq

      buffer.getContext().eventDispatcher.startElement("locationVelocityTypesReq", -1);

      locationVelocityTypesReq = new Asn1Boolean();
      locationVelocityTypesReq.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("locationVelocityTypesReq", -1);

      if (extbit) {

         int bitcnt = buffer.decodeSmallLength(), i = 0;
         long bitidx = buffer.getBitOffset() + bitcnt;
         boolean[] bitmap = new boolean [bitcnt];

         while (i < bitcnt) {
            bitmap[i++] = buffer.decodeBit ("unknown");
         }

         i = 0;

         // decode unknown extension elements

         if (i < bitcnt) {
            Asn1OpenType openType = null;
            extElem1 = new Asn1OpenExt();
            int j = 0;
            while (i < bitcnt) {
               if (bitmap[i]) {
                  buffer.getContext().eventDispatcher.startElement("...", -1);

                  openType = extElem1.decodeOpenType (buffer, true, j++);
               }
               else {
                  extElem1.setOpenType (null, j++);
               }
               i++;
            }
         }
         buffer.byteAlign ();

      }

   }

   public void encode (Asn1PerEncodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      // extension bit

      boolean extbit = (((extElem1 != null) && (!extElem1.value.isEmpty()))
      );

      buffer.encodeBit (extbit, "extbit");

      // encode gnss_SupportListReq

      if (gnss_SupportListReq != null) {
         buffer.getContext().eventDispatcher.startElement("gnss_SupportListReq", -1);

         gnss_SupportListReq.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("gnss_SupportListReq", -1);
      }
      else throw new Asn1MissingRequiredException ("gnss_SupportListReq");

      // encode assistanceDataSupportListReq

      if (assistanceDataSupportListReq != null) {
         buffer.getContext().eventDispatcher.startElement("assistanceDataSupportListReq", -1);

         assistanceDataSupportListReq.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("assistanceDataSupportListReq", -1);
      }
      else throw new Asn1MissingRequiredException ("assistanceDataSupportListReq");

      // encode locationVelocityTypesReq

      if (locationVelocityTypesReq != null) {
         buffer.getContext().eventDispatcher.startElement("locationVelocityTypesReq", -1);

         locationVelocityTypesReq.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("locationVelocityTypesReq", -1);
      }
      else throw new Asn1MissingRequiredException ("locationVelocityTypesReq");

      if (extbit) {

         // encode extension optional bits length

         int bitcnt = 0;
         if (extElem1 != null) bitcnt += extElem1.value.size();
         buffer.encodeSmallLength (bitcnt);

         // encode optional bits

         if (extElem1 != null && extElem1.value.size() > 0) {
            extElem1.encodeExtBits (buffer);
         }

         // encode extension elements

         if (extElem1 != null && extElem1.value.size() > 0) {
            extElem1.encode (buffer);
         }
      }
   }

}

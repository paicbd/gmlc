/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.5.0, Date: 07-May-2021.
 */
package org.mobicents.gmlc.slee.supl.Ver2_ULP_Components;

import com.objsys.asn1j.runtime.*;

public class CSI_RS_Index_Measurements extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_Ver2_ULP_ComponentsRtkey._rtkey);
      Asn1Type._setLicLocation(_Ver2_ULP_ComponentsRtkey._licLocation);
   }

   public String getAsn1TypeName()  {
      return "CSI-RS-Index-Measurements";
   }

   protected Asn1Integer csi_rs_Index;
   protected NR_Measurements csi_rs_Measurements;

   public CSI_RS_Index_Measurements () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public CSI_RS_Index_Measurements (
      Asn1Integer csi_rs_Index_,
      NR_Measurements csi_rs_Measurements_
   ) throws Asn1Exception {
      super();
      setCsi_rs_Index (csi_rs_Index_);
      setCsi_rs_Measurements (csi_rs_Measurements_);
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public CSI_RS_Index_Measurements (long csi_rs_Index_,
      NR_Measurements csi_rs_Measurements_
   ) throws Asn1Exception {
      super();
      setCsi_rs_Index (csi_rs_Index_);
      setCsi_rs_Measurements (csi_rs_Measurements_);
   }

   public void init () {
      csi_rs_Index = null;
      csi_rs_Measurements = null;
   }

   public boolean equals( Object obj ) {
      if ( this == obj ) return true;
      if ( !(obj instanceof CSI_RS_Index_Measurements) ) return false;

      CSI_RS_Index_Measurements rhs = (CSI_RS_Index_Measurements) obj;

      if (csi_rs_Index == null) {
         if (rhs.csi_rs_Index != null) return false;
      }
      else {
         if (!csi_rs_Index.equals(rhs.csi_rs_Index)) {
            return false;
         }
      }

      if (csi_rs_Measurements == null) {
         if (rhs.csi_rs_Measurements != null) return false;
      }
      else {
         if (!csi_rs_Measurements.equals(rhs.csi_rs_Measurements)) {
            return false;
         }
      }

      return true;
   }

   public int hashCode() {
      int __code = 1;

      if (csi_rs_Index != null) __code = 31*__code + csi_rs_Index.hashCode();
      if (csi_rs_Measurements != null) __code = 31*__code + csi_rs_Measurements.hashCode();

      return __code;
   }

   /**
    * Accessor/mutator methods for Csi_rs_Index
    */
   public Asn1Integer getCsi_rs_Index () {
      return csi_rs_Index;
   }

   public void setCsi_rs_Index (Asn1Integer value) 
      throws Asn1Exception
   {
      if (!((value.value >= 0 && value.value <= 95))) {
         throw new Asn1ConsVioException ("value.value", value.value);
      }

      this.csi_rs_Index = value;
   }

   public void setCsi_rs_Index (long value) 
      throws Asn1Exception
   {
      setCsi_rs_Index (new Asn1Integer(value));
   }

   /**
    * Accessor/mutator methods for Csi_rs_Measurements
    */
   public NR_Measurements getCsi_rs_Measurements () {
      return csi_rs_Measurements;
   }

   public void setCsi_rs_Measurements (NR_Measurements value) {
      this.csi_rs_Measurements = value;
   }

   public int getElementCount() { return 2; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return csi_rs_Index;
         case 1: return csi_rs_Measurements;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "csi-rs-Index";
         case 1: return "csi-rs-Measurements";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // decode csi_rs_Index

      buffer.getContext().eventDispatcher.startElement("csi_rs_Index", -1);

      csi_rs_Index = new Asn1Integer();
      csi_rs_Index.decode (buffer, 0, 95);
      buffer.getContext().eventDispatcher.endElement("csi_rs_Index", -1);

      // decode csi_rs_Measurements

      buffer.getContext().eventDispatcher.startElement("csi_rs_Measurements", -1);

      csi_rs_Measurements = new NR_Measurements();
      csi_rs_Measurements.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("csi_rs_Measurements", -1);

   }

   public void encode (Asn1PerEncodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      // encode csi_rs_Index

      if (csi_rs_Index != null) {
         buffer.getContext().eventDispatcher.startElement("csi_rs_Index", -1);

         csi_rs_Index.encode (buffer, 0, 95);

         buffer.getContext().eventDispatcher.endElement("csi_rs_Index", -1);
      }
      else throw new Asn1MissingRequiredException ("csi_rs_Index");

      // encode csi_rs_Measurements

      if (csi_rs_Measurements != null) {
         buffer.getContext().eventDispatcher.startElement("csi_rs_Measurements", -1);

         csi_rs_Measurements.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("csi_rs_Measurements", -1);
      }
      else throw new Asn1MissingRequiredException ("csi_rs_Measurements");

   }

}

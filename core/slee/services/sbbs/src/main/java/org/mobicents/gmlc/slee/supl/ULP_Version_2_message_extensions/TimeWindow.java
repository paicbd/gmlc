/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.5.0, Date: 07-May-2021.
 */
package org.mobicents.gmlc.slee.supl.ULP_Version_2_message_extensions;

import com.objsys.asn1j.runtime.*;

public class TimeWindow extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_ULP_Version_2_message_extensionsRtkey._rtkey);
      Asn1Type._setLicLocation(_ULP_Version_2_message_extensionsRtkey._licLocation);
   }

   public String getAsn1TypeName()  {
      return "TimeWindow";
   }

   protected Asn1Integer startTime;
   protected Asn1Integer stopTime;

   public TimeWindow () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public TimeWindow (
      Asn1Integer startTime_,
      Asn1Integer stopTime_
   ) throws Asn1Exception {
      super();
      setStartTime (startTime_);
      setStopTime (stopTime_);
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public TimeWindow (long startTime_,
      long stopTime_
   ) throws Asn1Exception {
      super();
      setStartTime (startTime_);
      setStopTime (stopTime_);
   }

   public void init () {
      startTime = null;
      stopTime = null;
   }

   public boolean equals( Object obj ) {
      if ( this == obj ) return true;
      if ( !(obj instanceof TimeWindow) ) return false;

      TimeWindow rhs = (TimeWindow) obj;

      if (startTime == null) {
         if (rhs.startTime != null) return false;
      }
      else {
         if (!startTime.equals(rhs.startTime)) {
            return false;
         }
      }

      if (stopTime == null) {
         if (rhs.stopTime != null) return false;
      }
      else {
         if (!stopTime.equals(rhs.stopTime)) {
            return false;
         }
      }

      return true;
   }

   public int hashCode() {
      int __code = 1;

      if (startTime != null) __code = 31*__code + startTime.hashCode();
      if (stopTime != null) __code = 31*__code + stopTime.hashCode();

      return __code;
   }

   /**
    * Accessor/mutator methods for StartTime
    */
   public Asn1Integer getStartTime () {
      return startTime;
   }

   public void setStartTime (Asn1Integer value) 
      throws Asn1Exception
   {
      if (!((value.value >= -525600 && value.value <= -1))) {
         throw new Asn1ConsVioException ("value.value", value.value);
      }

      this.startTime = value;
   }

   public void setStartTime (long value) 
      throws Asn1Exception
   {
      setStartTime (new Asn1Integer(value));
   }

   /**
    * Accessor/mutator methods for StopTime
    */
   public Asn1Integer getStopTime () {
      return stopTime;
   }

   public void setStopTime (Asn1Integer value) 
      throws Asn1Exception
   {
      if (!((value.value >= -525599 && value.value <= 0))) {
         throw new Asn1ConsVioException ("value.value", value.value);
      }

      this.stopTime = value;
   }

   public void setStopTime (long value) 
      throws Asn1Exception
   {
      setStopTime (new Asn1Integer(value));
   }

   public int getElementCount() { return 2; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return startTime;
         case 1: return stopTime;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "startTime";
         case 1: return "stopTime";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // decode startTime

      buffer.getContext().eventDispatcher.startElement("startTime", -1);

      startTime = new Asn1Integer();
      startTime.decode (buffer, -525600, -1);
      buffer.getContext().eventDispatcher.endElement("startTime", -1);

      // decode stopTime

      buffer.getContext().eventDispatcher.startElement("stopTime", -1);

      stopTime = new Asn1Integer();
      stopTime.decode (buffer, -525599, 0);
      buffer.getContext().eventDispatcher.endElement("stopTime", -1);

   }

   public void encode (Asn1PerEncodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      // encode startTime

      if (startTime != null) {
         buffer.getContext().eventDispatcher.startElement("startTime", -1);

         startTime.encode (buffer, -525600, -1);

         buffer.getContext().eventDispatcher.endElement("startTime", -1);
      }
      else throw new Asn1MissingRequiredException ("startTime");

      // encode stopTime

      if (stopTime != null) {
         buffer.getContext().eventDispatcher.startElement("stopTime", -1);

         stopTime.encode (buffer, -525599, 0);

         buffer.getContext().eventDispatcher.endElement("stopTime", -1);
      }
      else throw new Asn1MissingRequiredException ("stopTime");

   }

}

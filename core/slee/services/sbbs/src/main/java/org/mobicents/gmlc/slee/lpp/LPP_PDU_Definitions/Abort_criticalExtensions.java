/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.5.0, Date: 07-May-2021.
 */
package org.mobicents.gmlc.slee.lpp.LPP_PDU_Definitions;

import com.objsys.asn1j.runtime.*;

public class Abort_criticalExtensions extends Asn1Choice {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_LPP_PDU_DefinitionsRtkey._rtkey);
      Asn1Type._setLicLocation(_LPP_PDU_DefinitionsRtkey._licLocation);
   }

   public String getAsn1TypeName()  {
      return "CHOICE";
   }

   // Choice element identifier constants
   public final static byte _C1 = 1;
   public final static byte _CRITICALEXTENSIONSFUTURE = 2;

   public Abort_criticalExtensions () {
      super();
   }

   public Abort_criticalExtensions (byte choiceId_, Asn1Type element_) {
      super();
      setElement (choiceId_, element_);
   }

   public String getElemName () {
      switch (choiceID) {
      case _C1: return "c1";
      case _CRITICALEXTENSIONSFUTURE: return "criticalExtensionsFuture";
      default: return "UNDEFINED";
      }
   }

   /**
    * Accessor/mutator methods for c1
    */
   public Abort_criticalExtensions_c1 getC1 () {
      return (choiceID == _C1) ? (Abort_criticalExtensions_c1)element : null;
   }
   public void setC1 (Abort_criticalExtensions_c1 value) {
      setElement (_C1, value);
   }
   public boolean isC1 () {
      return (choiceID == _C1);
   }

   /**
    * Accessor/mutator methods for criticalExtensionsFuture
    */
   public Abort_criticalExtensions_criticalExtensionsFuture getCriticalExtensionsFuture () {
      return (choiceID == _CRITICALEXTENSIONSFUTURE) ? (Abort_criticalExtensions_criticalExtensionsFuture)element : null;
   }
   public void setCriticalExtensionsFuture (Abort_criticalExtensions_criticalExtensionsFuture value) {
      setElement (_CRITICALEXTENSIONSFUTURE, value);
   }
   public boolean isCriticalExtensionsFuture () {
      return (choiceID == _CRITICALEXTENSIONSFUTURE);
   }

   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      int idx = (int) buffer.decodeConsWholeNumber (2, "index");
      choiceID = idx + 1;
      buffer.getContext().eventDispatcher.startElement (getElemName(), -1);

      switch (idx) {
         // c1
         case 0: { 
            Abort_criticalExtensions_c1 c1;
            element = c1 = new Abort_criticalExtensions_c1();
            c1.decode (buffer);
            break;
         }

         // criticalExtensionsFuture
         case 1: { 
            Abort_criticalExtensions_criticalExtensionsFuture criticalExtensionsFuture;
            element = criticalExtensionsFuture = new Abort_criticalExtensions_criticalExtensionsFuture();
            criticalExtensionsFuture.decode (buffer);
            break;
         }

         default:
         throw new Asn1InvalidChoiceOptionException (buffer, idx);
      }

      buffer.getContext().eventDispatcher.endElement (getElemName(), -1);
   }

   public void encode (Asn1PerEncodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      // Encode choice index value

      buffer.encodeConsWholeNumber (choiceID - 1, 2, "index");

      buffer.getContext().eventDispatcher.startElement("getElemName()", -1);

      switch (choiceID) {
         // c1
         case _C1:
            Abort_criticalExtensions_c1 c1 = (Abort_criticalExtensions_c1) element;
            c1.encode (buffer);
            break;

         // criticalExtensionsFuture
         case _CRITICALEXTENSIONSFUTURE:
            Abort_criticalExtensions_criticalExtensionsFuture criticalExtensionsFuture = (Abort_criticalExtensions_criticalExtensionsFuture) element;
            criticalExtensionsFuture.encode (buffer);
            break;

         default:
         throw new Asn1InvalidChoiceOptionException();
      }

      buffer.getContext().eventDispatcher.endElement("getElemName()", -1);
   }

}

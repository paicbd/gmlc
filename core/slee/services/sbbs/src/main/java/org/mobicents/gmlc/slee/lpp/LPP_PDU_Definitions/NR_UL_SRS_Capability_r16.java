/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.5.0, Date: 07-May-2021.
 */
package org.mobicents.gmlc.slee.lpp.LPP_PDU_Definitions;

import com.objsys.asn1j.runtime.*;

public class NR_UL_SRS_Capability_r16 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_LPP_PDU_DefinitionsRtkey._rtkey);
      Asn1Type._setLicLocation(_LPP_PDU_DefinitionsRtkey._licLocation);
   }

   public String getAsn1TypeName()  {
      return "NR-UL-SRS-Capability-r16";
   }

   protected NR_UL_SRS_Capability_r16_srs_CapabilityBandList_r16 srs_CapabilityBandList_r16;
   protected NR_UL_SRS_Capability_r16_srs_PosResourceConfigCA_BandList_r16 srs_PosResourceConfigCA_BandList_r16;  // optional
   protected NR_UL_SRS_Capability_r16_maxNumberSRS_PosPathLossEstimateAllServingCells_r16 maxNumberSRS_PosPathLossEstimateAllServingCells_r16 = null;  // optional
   protected NR_UL_SRS_Capability_r16_maxNumberSRS_PosSpatialRelationsAllServingCells_r16 maxNumberSRS_PosSpatialRelationsAllServingCells_r16 = null;  // optional
   protected Asn1OpenExt extElem1;

   public NR_UL_SRS_Capability_r16 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public NR_UL_SRS_Capability_r16 (
      NR_UL_SRS_Capability_r16_srs_CapabilityBandList_r16 srs_CapabilityBandList_r16_,
      NR_UL_SRS_Capability_r16_srs_PosResourceConfigCA_BandList_r16 srs_PosResourceConfigCA_BandList_r16_,
      NR_UL_SRS_Capability_r16_maxNumberSRS_PosPathLossEstimateAllServingCells_r16 maxNumberSRS_PosPathLossEstimateAllServingCells_r16_,
      NR_UL_SRS_Capability_r16_maxNumberSRS_PosSpatialRelationsAllServingCells_r16 maxNumberSRS_PosSpatialRelationsAllServingCells_r16_
   ) throws Asn1Exception {
      super();
      setSrs_CapabilityBandList_r16 (srs_CapabilityBandList_r16_);
      setSrs_PosResourceConfigCA_BandList_r16 (srs_PosResourceConfigCA_BandList_r16_);
      setMaxNumberSRS_PosPathLossEstimateAllServingCells_r16 (maxNumberSRS_PosPathLossEstimateAllServingCells_r16_);
      setMaxNumberSRS_PosSpatialRelationsAllServingCells_r16 (maxNumberSRS_PosSpatialRelationsAllServingCells_r16_);
   }

   /**
    * This constructor is for required elements only.  It sets 
    * all elements to references to the given objects
    */
   public NR_UL_SRS_Capability_r16 (
      NR_UL_SRS_Capability_r16_srs_CapabilityBandList_r16 srs_CapabilityBandList_r16_
   ) throws Asn1Exception {
      super();
      setSrs_CapabilityBandList_r16 (srs_CapabilityBandList_r16_);
   }

   public void init () {
      srs_CapabilityBandList_r16 = null;
      srs_PosResourceConfigCA_BandList_r16 = null;
      maxNumberSRS_PosPathLossEstimateAllServingCells_r16 = null;
      maxNumberSRS_PosSpatialRelationsAllServingCells_r16 = null;
      extElem1 = null;
   }

   public boolean equals( Object obj ) {
      if ( this == obj ) return true;
      if ( !(obj instanceof NR_UL_SRS_Capability_r16) ) return false;

      NR_UL_SRS_Capability_r16 rhs = (NR_UL_SRS_Capability_r16) obj;

      if (srs_CapabilityBandList_r16 == null) {
         if (rhs.srs_CapabilityBandList_r16 != null) return false;
      }
      else {
         if (!srs_CapabilityBandList_r16.equals(rhs.srs_CapabilityBandList_r16)) {
            return false;
         }
      }

      if (srs_PosResourceConfigCA_BandList_r16 == null) {
         if (rhs.srs_PosResourceConfigCA_BandList_r16 != null) return false;
      }
      else {
         if (!srs_PosResourceConfigCA_BandList_r16.equals(rhs.srs_PosResourceConfigCA_BandList_r16)) {
            return false;
         }
      }

      if (maxNumberSRS_PosPathLossEstimateAllServingCells_r16 == null) {
         if (rhs.maxNumberSRS_PosPathLossEstimateAllServingCells_r16 != null) return false;
      }
      else {
         if (!maxNumberSRS_PosPathLossEstimateAllServingCells_r16.equals(rhs.maxNumberSRS_PosPathLossEstimateAllServingCells_r16)) {
            return false;
         }
      }

      if (maxNumberSRS_PosSpatialRelationsAllServingCells_r16 == null) {
         if (rhs.maxNumberSRS_PosSpatialRelationsAllServingCells_r16 != null) return false;
      }
      else {
         if (!maxNumberSRS_PosSpatialRelationsAllServingCells_r16.equals(rhs.maxNumberSRS_PosSpatialRelationsAllServingCells_r16)) {
            return false;
         }
      }

      if (extElem1 == null) {
         if (rhs.extElem1 != null) return false;
      }
      else {
         if (!extElem1.equals(rhs.extElem1)) {
            return false;
         }
      }

      return true;
   }

   public int hashCode() {
      int __code = 1;

      if (srs_CapabilityBandList_r16 != null) __code = 31*__code + srs_CapabilityBandList_r16.hashCode();
      if (srs_PosResourceConfigCA_BandList_r16 != null) __code = 31*__code + srs_PosResourceConfigCA_BandList_r16.hashCode();
      if (maxNumberSRS_PosPathLossEstimateAllServingCells_r16 != null) __code = 31*__code + maxNumberSRS_PosPathLossEstimateAllServingCells_r16.hashCode();
      if (maxNumberSRS_PosSpatialRelationsAllServingCells_r16 != null) __code = 31*__code + maxNumberSRS_PosSpatialRelationsAllServingCells_r16.hashCode();
      if (extElem1 != null) __code = 31*__code + extElem1.hashCode();

      return __code;
   }

   /**
    * Accessor/mutator methods for Srs_CapabilityBandList_r16
    */
   public NR_UL_SRS_Capability_r16_srs_CapabilityBandList_r16 getSrs_CapabilityBandList_r16 () {
      return srs_CapabilityBandList_r16;
   }

   public void setSrs_CapabilityBandList_r16 (NR_UL_SRS_Capability_r16_srs_CapabilityBandList_r16 value) 
      throws Asn1Exception
   {
      if (!((value.getElements().length >= 1 && value.getElements().length <= 1024))) {
         throw new Asn1ConsVioException ("value.getElements().length", value.getElements().length);
      }

      this.srs_CapabilityBandList_r16 = value;
   }

   /**
    * Accessor/mutator methods for Srs_PosResourceConfigCA_BandList_r16
    */
   public NR_UL_SRS_Capability_r16_srs_PosResourceConfigCA_BandList_r16 getSrs_PosResourceConfigCA_BandList_r16 () {
      return srs_PosResourceConfigCA_BandList_r16;
   }

   public void setSrs_PosResourceConfigCA_BandList_r16 (NR_UL_SRS_Capability_r16_srs_PosResourceConfigCA_BandList_r16 value) 
      throws Asn1Exception
   {
      if (!((value.getElements().length >= 1 && value.getElements().length <= 16))) {
         throw new Asn1ConsVioException ("value.getElements().length", value.getElements().length);
      }

      this.srs_PosResourceConfigCA_BandList_r16 = value;
   }

   public boolean hasSrs_PosResourceConfigCA_BandList_r16 () {
      return (srs_PosResourceConfigCA_BandList_r16 != null);
   }

   /**
    * Accessor/mutator methods for MaxNumberSRS_PosPathLossEstimateAllServingCells_r16
    */
   public NR_UL_SRS_Capability_r16_maxNumberSRS_PosPathLossEstimateAllServingCells_r16 getMaxNumberSRS_PosPathLossEstimateAllServingCells_r16 () {
      return maxNumberSRS_PosPathLossEstimateAllServingCells_r16;
   }

   public void setMaxNumberSRS_PosPathLossEstimateAllServingCells_r16 (NR_UL_SRS_Capability_r16_maxNumberSRS_PosPathLossEstimateAllServingCells_r16 value) {
      this.maxNumberSRS_PosPathLossEstimateAllServingCells_r16 = value;
   }

   public boolean hasMaxNumberSRS_PosPathLossEstimateAllServingCells_r16 () {
      return (maxNumberSRS_PosPathLossEstimateAllServingCells_r16 != null);
   }

   /**
    * Accessor/mutator methods for MaxNumberSRS_PosSpatialRelationsAllServingCells_r16
    */
   public NR_UL_SRS_Capability_r16_maxNumberSRS_PosSpatialRelationsAllServingCells_r16 getMaxNumberSRS_PosSpatialRelationsAllServingCells_r16 () {
      return maxNumberSRS_PosSpatialRelationsAllServingCells_r16;
   }

   public void setMaxNumberSRS_PosSpatialRelationsAllServingCells_r16 (NR_UL_SRS_Capability_r16_maxNumberSRS_PosSpatialRelationsAllServingCells_r16 value) {
      this.maxNumberSRS_PosSpatialRelationsAllServingCells_r16 = value;
   }

   public boolean hasMaxNumberSRS_PosSpatialRelationsAllServingCells_r16 () {
      return (maxNumberSRS_PosSpatialRelationsAllServingCells_r16 != null);
   }

   /**
    * Accessor/mutator methods for ExtElem1
    */
   public Asn1OpenExt getExtElem1 () {
      return extElem1;
   }

   public void setExtElem1 (Asn1OpenExt value) {
      this.extElem1 = value;
   }

   public int getElementCount() { return 5; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return srs_CapabilityBandList_r16;
         case 1: return srs_PosResourceConfigCA_BandList_r16;
         case 2: return maxNumberSRS_PosPathLossEstimateAllServingCells_r16;
         case 3: return maxNumberSRS_PosSpatialRelationsAllServingCells_r16;
         case 4: return extElem1;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "srs-CapabilityBandList-r16";
         case 1: return "srs-PosResourceConfigCA-BandList-r16";
         case 2: return "maxNumberSRS-PosPathLossEstimateAllServingCells-r16";
         case 3: return "maxNumberSRS-PosSpatialRelationsAllServingCells-r16";
         case 4: return null;
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // extension bit

      boolean extbit = buffer.decodeBit ("extbit");

      // optional bits

      boolean srs_PosResourceConfigCA_BandList_r16Present = buffer.decodeBit ("srs_PosResourceConfigCA_BandList_r16Present");
      boolean maxNumberSRS_PosPathLossEstimateAllServingCells_r16Present = buffer.decodeBit ("maxNumberSRS_PosPathLossEstimateAllServingCells_r16Present");
      boolean maxNumberSRS_PosSpatialRelationsAllServingCells_r16Present = buffer.decodeBit ("maxNumberSRS_PosSpatialRelationsAllServingCells_r16Present");

      // decode srs_CapabilityBandList_r16

      buffer.getContext().eventDispatcher.startElement("srs_CapabilityBandList_r16", -1);

      srs_CapabilityBandList_r16 = new NR_UL_SRS_Capability_r16_srs_CapabilityBandList_r16();
      srs_CapabilityBandList_r16.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("srs_CapabilityBandList_r16", -1);

      // decode srs_PosResourceConfigCA_BandList_r16

      if (srs_PosResourceConfigCA_BandList_r16Present) {
         buffer.getContext().eventDispatcher.startElement("srs_PosResourceConfigCA_BandList_r16", -1);

         srs_PosResourceConfigCA_BandList_r16 = new NR_UL_SRS_Capability_r16_srs_PosResourceConfigCA_BandList_r16();
         srs_PosResourceConfigCA_BandList_r16.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("srs_PosResourceConfigCA_BandList_r16", -1);
      }
      else {
         srs_PosResourceConfigCA_BandList_r16 = null;
      }

      // decode maxNumberSRS_PosPathLossEstimateAllServingCells_r16

      if (maxNumberSRS_PosPathLossEstimateAllServingCells_r16Present) {
         buffer.getContext().eventDispatcher.startElement("maxNumberSRS_PosPathLossEstimateAllServingCells_r16", -1);

         int tval = NR_UL_SRS_Capability_r16_maxNumberSRS_PosPathLossEstimateAllServingCells_r16.decodeEnumValue (buffer);
         maxNumberSRS_PosPathLossEstimateAllServingCells_r16 = NR_UL_SRS_Capability_r16_maxNumberSRS_PosPathLossEstimateAllServingCells_r16.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("maxNumberSRS_PosPathLossEstimateAllServingCells_r16", -1);
      }
      else {
         maxNumberSRS_PosPathLossEstimateAllServingCells_r16 = null;
      }

      // decode maxNumberSRS_PosSpatialRelationsAllServingCells_r16

      if (maxNumberSRS_PosSpatialRelationsAllServingCells_r16Present) {
         buffer.getContext().eventDispatcher.startElement("maxNumberSRS_PosSpatialRelationsAllServingCells_r16", -1);

         int tval = NR_UL_SRS_Capability_r16_maxNumberSRS_PosSpatialRelationsAllServingCells_r16.decodeEnumValue (buffer);
         maxNumberSRS_PosSpatialRelationsAllServingCells_r16 = NR_UL_SRS_Capability_r16_maxNumberSRS_PosSpatialRelationsAllServingCells_r16.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("maxNumberSRS_PosSpatialRelationsAllServingCells_r16", -1);
      }
      else {
         maxNumberSRS_PosSpatialRelationsAllServingCells_r16 = null;
      }

      if (extbit) {

         int bitcnt = buffer.decodeSmallLength(), i = 0;
         long bitidx = buffer.getBitOffset() + bitcnt;
         boolean[] bitmap = new boolean [bitcnt];

         while (i < bitcnt) {
            bitmap[i++] = buffer.decodeBit ("unknown");
         }

         i = 0;

         // decode unknown extension elements

         if (i < bitcnt) {
            Asn1OpenType openType = null;
            extElem1 = new Asn1OpenExt();
            int j = 0;
            while (i < bitcnt) {
               if (bitmap[i]) {
                  buffer.getContext().eventDispatcher.startElement("...", -1);

                  openType = extElem1.decodeOpenType (buffer, true, j++);
               }
               else {
                  extElem1.setOpenType (null, j++);
               }
               i++;
            }
         }
         buffer.byteAlign ();

      }

   }

   public void encode (Asn1PerEncodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      // extension bit

      boolean extbit = (((extElem1 != null) && (!extElem1.value.isEmpty()))
      );

      buffer.encodeBit (extbit, "extbit");

      // encode optional elements bit mask

      buffer.encodeBit ((srs_PosResourceConfigCA_BandList_r16 != null), null);
      buffer.encodeBit ((maxNumberSRS_PosPathLossEstimateAllServingCells_r16 != null), null);
      buffer.encodeBit ((maxNumberSRS_PosSpatialRelationsAllServingCells_r16 != null), null);

      // encode srs_CapabilityBandList_r16

      if (srs_CapabilityBandList_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("srs_CapabilityBandList_r16", -1);

         srs_CapabilityBandList_r16.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("srs_CapabilityBandList_r16", -1);
      }
      else throw new Asn1MissingRequiredException ("srs_CapabilityBandList_r16");

      // encode srs_PosResourceConfigCA_BandList_r16

      if (srs_PosResourceConfigCA_BandList_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("srs_PosResourceConfigCA_BandList_r16", -1);

         srs_PosResourceConfigCA_BandList_r16.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("srs_PosResourceConfigCA_BandList_r16", -1);
      }

      // encode maxNumberSRS_PosPathLossEstimateAllServingCells_r16

      if (maxNumberSRS_PosPathLossEstimateAllServingCells_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("maxNumberSRS_PosPathLossEstimateAllServingCells_r16", -1);

         maxNumberSRS_PosPathLossEstimateAllServingCells_r16.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("maxNumberSRS_PosPathLossEstimateAllServingCells_r16", -1);
      }

      // encode maxNumberSRS_PosSpatialRelationsAllServingCells_r16

      if (maxNumberSRS_PosSpatialRelationsAllServingCells_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("maxNumberSRS_PosSpatialRelationsAllServingCells_r16", -1);

         maxNumberSRS_PosSpatialRelationsAllServingCells_r16.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("maxNumberSRS_PosSpatialRelationsAllServingCells_r16", -1);
      }

      if (extbit) {

         // encode extension optional bits length

         int bitcnt = 0;
         if (extElem1 != null) bitcnt += extElem1.value.size();
         buffer.encodeSmallLength (bitcnt);

         // encode optional bits

         if (extElem1 != null && extElem1.value.size() > 0) {
            extElem1.encodeExtBits (buffer);
         }

         // encode extension elements

         if (extElem1 != null && extElem1.value.size() > 0) {
            extElem1.encode (buffer);
         }
      }
   }

}

/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.5.0, Date: 07-May-2021.
 */
package org.mobicents.gmlc.slee.lpp.LPP_PDU_Definitions;

import com.objsys.asn1j.runtime.*;

public class NavModelNAV_KeplerianSet_addNAVparam extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_LPP_PDU_DefinitionsRtkey._rtkey);
      Asn1Type._setLicLocation(_LPP_PDU_DefinitionsRtkey._licLocation);
   }

   public String getAsn1TypeName()  {
      return "SEQUENCE";
   }

   protected Asn1Integer ephemCodeOnL2;
   protected Asn1Integer ephemL2Pflag;
   protected NavModelNAV_KeplerianSet_addNAVparam_ephemSF1Rsvd ephemSF1Rsvd;
   protected Asn1Integer ephemAODA;

   public NavModelNAV_KeplerianSet_addNAVparam () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public NavModelNAV_KeplerianSet_addNAVparam (
      Asn1Integer ephemCodeOnL2_,
      Asn1Integer ephemL2Pflag_,
      NavModelNAV_KeplerianSet_addNAVparam_ephemSF1Rsvd ephemSF1Rsvd_,
      Asn1Integer ephemAODA_
   ) throws Asn1Exception {
      super();
      setEphemCodeOnL2 (ephemCodeOnL2_);
      setEphemL2Pflag (ephemL2Pflag_);
      setEphemSF1Rsvd (ephemSF1Rsvd_);
      setEphemAODA (ephemAODA_);
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public NavModelNAV_KeplerianSet_addNAVparam (long ephemCodeOnL2_,
      long ephemL2Pflag_,
      NavModelNAV_KeplerianSet_addNAVparam_ephemSF1Rsvd ephemSF1Rsvd_,
      long ephemAODA_
   ) throws Asn1Exception {
      super();
      setEphemCodeOnL2 (ephemCodeOnL2_);
      setEphemL2Pflag (ephemL2Pflag_);
      setEphemSF1Rsvd (ephemSF1Rsvd_);
      setEphemAODA (ephemAODA_);
   }

   public void init () {
      ephemCodeOnL2 = null;
      ephemL2Pflag = null;
      ephemSF1Rsvd = null;
      ephemAODA = null;
   }

   public boolean equals( Object obj ) {
      if ( this == obj ) return true;
      if ( !(obj instanceof NavModelNAV_KeplerianSet_addNAVparam) ) return false;

      NavModelNAV_KeplerianSet_addNAVparam rhs = (NavModelNAV_KeplerianSet_addNAVparam) obj;

      if (ephemCodeOnL2 == null) {
         if (rhs.ephemCodeOnL2 != null) return false;
      }
      else {
         if (!ephemCodeOnL2.equals(rhs.ephemCodeOnL2)) {
            return false;
         }
      }

      if (ephemL2Pflag == null) {
         if (rhs.ephemL2Pflag != null) return false;
      }
      else {
         if (!ephemL2Pflag.equals(rhs.ephemL2Pflag)) {
            return false;
         }
      }

      if (ephemSF1Rsvd == null) {
         if (rhs.ephemSF1Rsvd != null) return false;
      }
      else {
         if (!ephemSF1Rsvd.equals(rhs.ephemSF1Rsvd)) {
            return false;
         }
      }

      if (ephemAODA == null) {
         if (rhs.ephemAODA != null) return false;
      }
      else {
         if (!ephemAODA.equals(rhs.ephemAODA)) {
            return false;
         }
      }

      return true;
   }

   public int hashCode() {
      int __code = 1;

      if (ephemCodeOnL2 != null) __code = 31*__code + ephemCodeOnL2.hashCode();
      if (ephemL2Pflag != null) __code = 31*__code + ephemL2Pflag.hashCode();
      if (ephemSF1Rsvd != null) __code = 31*__code + ephemSF1Rsvd.hashCode();
      if (ephemAODA != null) __code = 31*__code + ephemAODA.hashCode();

      return __code;
   }

   /**
    * Accessor/mutator methods for EphemCodeOnL2
    */
   public Asn1Integer getEphemCodeOnL2 () {
      return ephemCodeOnL2;
   }

   public void setEphemCodeOnL2 (Asn1Integer value) 
      throws Asn1Exception
   {
      if (!((value.value >= 0 && value.value <= 3))) {
         throw new Asn1ConsVioException ("value.value", value.value);
      }

      this.ephemCodeOnL2 = value;
   }

   public void setEphemCodeOnL2 (long value) 
      throws Asn1Exception
   {
      setEphemCodeOnL2 (new Asn1Integer(value));
   }

   /**
    * Accessor/mutator methods for EphemL2Pflag
    */
   public Asn1Integer getEphemL2Pflag () {
      return ephemL2Pflag;
   }

   public void setEphemL2Pflag (Asn1Integer value) 
      throws Asn1Exception
   {
      if (!((value.value >= 0 && value.value <= 1))) {
         throw new Asn1ConsVioException ("value.value", value.value);
      }

      this.ephemL2Pflag = value;
   }

   public void setEphemL2Pflag (long value) 
      throws Asn1Exception
   {
      setEphemL2Pflag (new Asn1Integer(value));
   }

   /**
    * Accessor/mutator methods for EphemSF1Rsvd
    */
   public NavModelNAV_KeplerianSet_addNAVparam_ephemSF1Rsvd getEphemSF1Rsvd () {
      return ephemSF1Rsvd;
   }

   public void setEphemSF1Rsvd (NavModelNAV_KeplerianSet_addNAVparam_ephemSF1Rsvd value) {
      this.ephemSF1Rsvd = value;
   }

   /**
    * Accessor/mutator methods for EphemAODA
    */
   public Asn1Integer getEphemAODA () {
      return ephemAODA;
   }

   public void setEphemAODA (Asn1Integer value) 
      throws Asn1Exception
   {
      if (!((value.value >= 0 && value.value <= 31))) {
         throw new Asn1ConsVioException ("value.value", value.value);
      }

      this.ephemAODA = value;
   }

   public void setEphemAODA (long value) 
      throws Asn1Exception
   {
      setEphemAODA (new Asn1Integer(value));
   }

   public int getElementCount() { return 4; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return ephemCodeOnL2;
         case 1: return ephemL2Pflag;
         case 2: return ephemSF1Rsvd;
         case 3: return ephemAODA;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "ephemCodeOnL2";
         case 1: return "ephemL2Pflag";
         case 2: return "ephemSF1Rsvd";
         case 3: return "ephemAODA";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // decode ephemCodeOnL2

      buffer.getContext().eventDispatcher.startElement("ephemCodeOnL2", -1);

      ephemCodeOnL2 = new Asn1Integer();
      ephemCodeOnL2.decode (buffer, 0, 3);
      buffer.getContext().eventDispatcher.endElement("ephemCodeOnL2", -1);

      // decode ephemL2Pflag

      buffer.getContext().eventDispatcher.startElement("ephemL2Pflag", -1);

      ephemL2Pflag = new Asn1Integer();
      ephemL2Pflag.decode (buffer, 0, 1);
      buffer.getContext().eventDispatcher.endElement("ephemL2Pflag", -1);

      // decode ephemSF1Rsvd

      buffer.getContext().eventDispatcher.startElement("ephemSF1Rsvd", -1);

      ephemSF1Rsvd = new NavModelNAV_KeplerianSet_addNAVparam_ephemSF1Rsvd();
      ephemSF1Rsvd.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("ephemSF1Rsvd", -1);

      // decode ephemAODA

      buffer.getContext().eventDispatcher.startElement("ephemAODA", -1);

      ephemAODA = new Asn1Integer();
      ephemAODA.decode (buffer, 0, 31);
      buffer.getContext().eventDispatcher.endElement("ephemAODA", -1);

   }

   public void encode (Asn1PerEncodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      // encode ephemCodeOnL2

      if (ephemCodeOnL2 != null) {
         buffer.getContext().eventDispatcher.startElement("ephemCodeOnL2", -1);

         ephemCodeOnL2.encode (buffer, 0, 3);

         buffer.getContext().eventDispatcher.endElement("ephemCodeOnL2", -1);
      }
      else throw new Asn1MissingRequiredException ("ephemCodeOnL2");

      // encode ephemL2Pflag

      if (ephemL2Pflag != null) {
         buffer.getContext().eventDispatcher.startElement("ephemL2Pflag", -1);

         ephemL2Pflag.encode (buffer, 0, 1);

         buffer.getContext().eventDispatcher.endElement("ephemL2Pflag", -1);
      }
      else throw new Asn1MissingRequiredException ("ephemL2Pflag");

      // encode ephemSF1Rsvd

      if (ephemSF1Rsvd != null) {
         buffer.getContext().eventDispatcher.startElement("ephemSF1Rsvd", -1);

         ephemSF1Rsvd.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("ephemSF1Rsvd", -1);
      }
      else throw new Asn1MissingRequiredException ("ephemSF1Rsvd");

      // encode ephemAODA

      if (ephemAODA != null) {
         buffer.getContext().eventDispatcher.startElement("ephemAODA", -1);

         ephemAODA.encode (buffer, 0, 31);

         buffer.getContext().eventDispatcher.endElement("ephemAODA", -1);
      }
      else throw new Asn1MissingRequiredException ("ephemAODA");

   }

}

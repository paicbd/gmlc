/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.5.0, Date: 07-May-2021.
 */
package org.mobicents.gmlc.slee.lpp.LPP_PDU_Definitions;

import com.objsys.asn1j.runtime.*;

public class HighAccuracyEllipsoidPointWithAltitudeAndUncertaintyEllipsoid_r15 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_LPP_PDU_DefinitionsRtkey._rtkey);
      Asn1Type._setLicLocation(_LPP_PDU_DefinitionsRtkey._licLocation);
   }

   public String getAsn1TypeName()  {
      return "HighAccuracyEllipsoidPointWithAltitudeAndUncertaintyEllipsoid-r15";
   }

   protected Asn1Integer degreesLatitude_r15;
   protected Asn1Integer degreesLongitude_r15;
   protected Asn1Integer altitude_r15;
   protected Asn1Integer uncertaintySemiMajor_r15;
   protected Asn1Integer uncertaintySemiMinor_r15;
   protected Asn1Integer orientationMajorAxis_r15;
   protected Asn1Integer horizontalConfidence_r15;
   protected Asn1Integer uncertaintyAltitude_r15;
   protected Asn1Integer verticalConfidence_r15;

   public HighAccuracyEllipsoidPointWithAltitudeAndUncertaintyEllipsoid_r15 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public HighAccuracyEllipsoidPointWithAltitudeAndUncertaintyEllipsoid_r15 (
      Asn1Integer degreesLatitude_r15_,
      Asn1Integer degreesLongitude_r15_,
      Asn1Integer altitude_r15_,
      Asn1Integer uncertaintySemiMajor_r15_,
      Asn1Integer uncertaintySemiMinor_r15_,
      Asn1Integer orientationMajorAxis_r15_,
      Asn1Integer horizontalConfidence_r15_,
      Asn1Integer uncertaintyAltitude_r15_,
      Asn1Integer verticalConfidence_r15_
   ) throws Asn1Exception {
      super();
      setDegreesLatitude_r15 (degreesLatitude_r15_);
      setDegreesLongitude_r15 (degreesLongitude_r15_);
      setAltitude_r15 (altitude_r15_);
      setUncertaintySemiMajor_r15 (uncertaintySemiMajor_r15_);
      setUncertaintySemiMinor_r15 (uncertaintySemiMinor_r15_);
      setOrientationMajorAxis_r15 (orientationMajorAxis_r15_);
      setHorizontalConfidence_r15 (horizontalConfidence_r15_);
      setUncertaintyAltitude_r15 (uncertaintyAltitude_r15_);
      setVerticalConfidence_r15 (verticalConfidence_r15_);
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public HighAccuracyEllipsoidPointWithAltitudeAndUncertaintyEllipsoid_r15 (long degreesLatitude_r15_,
      long degreesLongitude_r15_,
      long altitude_r15_,
      long uncertaintySemiMajor_r15_,
      long uncertaintySemiMinor_r15_,
      long orientationMajorAxis_r15_,
      long horizontalConfidence_r15_,
      long uncertaintyAltitude_r15_,
      long verticalConfidence_r15_
   ) throws Asn1Exception {
      super();
      setDegreesLatitude_r15 (degreesLatitude_r15_);
      setDegreesLongitude_r15 (degreesLongitude_r15_);
      setAltitude_r15 (altitude_r15_);
      setUncertaintySemiMajor_r15 (uncertaintySemiMajor_r15_);
      setUncertaintySemiMinor_r15 (uncertaintySemiMinor_r15_);
      setOrientationMajorAxis_r15 (orientationMajorAxis_r15_);
      setHorizontalConfidence_r15 (horizontalConfidence_r15_);
      setUncertaintyAltitude_r15 (uncertaintyAltitude_r15_);
      setVerticalConfidence_r15 (verticalConfidence_r15_);
   }

   public void init () {
      degreesLatitude_r15 = null;
      degreesLongitude_r15 = null;
      altitude_r15 = null;
      uncertaintySemiMajor_r15 = null;
      uncertaintySemiMinor_r15 = null;
      orientationMajorAxis_r15 = null;
      horizontalConfidence_r15 = null;
      uncertaintyAltitude_r15 = null;
      verticalConfidence_r15 = null;
   }

   public boolean equals( Object obj ) {
      if ( this == obj ) return true;
      if ( !(obj instanceof HighAccuracyEllipsoidPointWithAltitudeAndUncertaintyEllipsoid_r15) ) return false;

      HighAccuracyEllipsoidPointWithAltitudeAndUncertaintyEllipsoid_r15 rhs = (HighAccuracyEllipsoidPointWithAltitudeAndUncertaintyEllipsoid_r15) obj;

      if (degreesLatitude_r15 == null) {
         if (rhs.degreesLatitude_r15 != null) return false;
      }
      else {
         if (!degreesLatitude_r15.equals(rhs.degreesLatitude_r15)) {
            return false;
         }
      }

      if (degreesLongitude_r15 == null) {
         if (rhs.degreesLongitude_r15 != null) return false;
      }
      else {
         if (!degreesLongitude_r15.equals(rhs.degreesLongitude_r15)) {
            return false;
         }
      }

      if (altitude_r15 == null) {
         if (rhs.altitude_r15 != null) return false;
      }
      else {
         if (!altitude_r15.equals(rhs.altitude_r15)) {
            return false;
         }
      }

      if (uncertaintySemiMajor_r15 == null) {
         if (rhs.uncertaintySemiMajor_r15 != null) return false;
      }
      else {
         if (!uncertaintySemiMajor_r15.equals(rhs.uncertaintySemiMajor_r15)) {
            return false;
         }
      }

      if (uncertaintySemiMinor_r15 == null) {
         if (rhs.uncertaintySemiMinor_r15 != null) return false;
      }
      else {
         if (!uncertaintySemiMinor_r15.equals(rhs.uncertaintySemiMinor_r15)) {
            return false;
         }
      }

      if (orientationMajorAxis_r15 == null) {
         if (rhs.orientationMajorAxis_r15 != null) return false;
      }
      else {
         if (!orientationMajorAxis_r15.equals(rhs.orientationMajorAxis_r15)) {
            return false;
         }
      }

      if (horizontalConfidence_r15 == null) {
         if (rhs.horizontalConfidence_r15 != null) return false;
      }
      else {
         if (!horizontalConfidence_r15.equals(rhs.horizontalConfidence_r15)) {
            return false;
         }
      }

      if (uncertaintyAltitude_r15 == null) {
         if (rhs.uncertaintyAltitude_r15 != null) return false;
      }
      else {
         if (!uncertaintyAltitude_r15.equals(rhs.uncertaintyAltitude_r15)) {
            return false;
         }
      }

      if (verticalConfidence_r15 == null) {
         if (rhs.verticalConfidence_r15 != null) return false;
      }
      else {
         if (!verticalConfidence_r15.equals(rhs.verticalConfidence_r15)) {
            return false;
         }
      }

      return true;
   }

   public int hashCode() {
      int __code = 1;

      if (degreesLatitude_r15 != null) __code = 31*__code + degreesLatitude_r15.hashCode();
      if (degreesLongitude_r15 != null) __code = 31*__code + degreesLongitude_r15.hashCode();
      if (altitude_r15 != null) __code = 31*__code + altitude_r15.hashCode();
      if (uncertaintySemiMajor_r15 != null) __code = 31*__code + uncertaintySemiMajor_r15.hashCode();
      if (uncertaintySemiMinor_r15 != null) __code = 31*__code + uncertaintySemiMinor_r15.hashCode();
      if (orientationMajorAxis_r15 != null) __code = 31*__code + orientationMajorAxis_r15.hashCode();
      if (horizontalConfidence_r15 != null) __code = 31*__code + horizontalConfidence_r15.hashCode();
      if (uncertaintyAltitude_r15 != null) __code = 31*__code + uncertaintyAltitude_r15.hashCode();
      if (verticalConfidence_r15 != null) __code = 31*__code + verticalConfidence_r15.hashCode();

      return __code;
   }

   /**
    * Accessor/mutator methods for DegreesLatitude_r15
    */
   public Asn1Integer getDegreesLatitude_r15 () {
      return degreesLatitude_r15;
   }

   public void setDegreesLatitude_r15 (Asn1Integer value) 
      throws Asn1Exception
   {
      this.degreesLatitude_r15 = value;
   }

   public void setDegreesLatitude_r15 (long value) 
      throws Asn1Exception
   {
      setDegreesLatitude_r15 (new Asn1Integer(value));
   }

   /**
    * Accessor/mutator methods for DegreesLongitude_r15
    */
   public Asn1Integer getDegreesLongitude_r15 () {
      return degreesLongitude_r15;
   }

   public void setDegreesLongitude_r15 (Asn1Integer value) 
      throws Asn1Exception
   {
      this.degreesLongitude_r15 = value;
   }

   public void setDegreesLongitude_r15 (long value) 
      throws Asn1Exception
   {
      setDegreesLongitude_r15 (new Asn1Integer(value));
   }

   /**
    * Accessor/mutator methods for Altitude_r15
    */
   public Asn1Integer getAltitude_r15 () {
      return altitude_r15;
   }

   public void setAltitude_r15 (Asn1Integer value) 
      throws Asn1Exception
   {
      if (!((value.value >= -64000 && value.value <= 1280000))) {
         throw new Asn1ConsVioException ("value.value", value.value);
      }

      this.altitude_r15 = value;
   }

   public void setAltitude_r15 (long value) 
      throws Asn1Exception
   {
      setAltitude_r15 (new Asn1Integer(value));
   }

   /**
    * Accessor/mutator methods for UncertaintySemiMajor_r15
    */
   public Asn1Integer getUncertaintySemiMajor_r15 () {
      return uncertaintySemiMajor_r15;
   }

   public void setUncertaintySemiMajor_r15 (Asn1Integer value) 
      throws Asn1Exception
   {
      if (!((value.value >= 0 && value.value <= 255))) {
         throw new Asn1ConsVioException ("value.value", value.value);
      }

      this.uncertaintySemiMajor_r15 = value;
   }

   public void setUncertaintySemiMajor_r15 (long value) 
      throws Asn1Exception
   {
      setUncertaintySemiMajor_r15 (new Asn1Integer(value));
   }

   /**
    * Accessor/mutator methods for UncertaintySemiMinor_r15
    */
   public Asn1Integer getUncertaintySemiMinor_r15 () {
      return uncertaintySemiMinor_r15;
   }

   public void setUncertaintySemiMinor_r15 (Asn1Integer value) 
      throws Asn1Exception
   {
      if (!((value.value >= 0 && value.value <= 255))) {
         throw new Asn1ConsVioException ("value.value", value.value);
      }

      this.uncertaintySemiMinor_r15 = value;
   }

   public void setUncertaintySemiMinor_r15 (long value) 
      throws Asn1Exception
   {
      setUncertaintySemiMinor_r15 (new Asn1Integer(value));
   }

   /**
    * Accessor/mutator methods for OrientationMajorAxis_r15
    */
   public Asn1Integer getOrientationMajorAxis_r15 () {
      return orientationMajorAxis_r15;
   }

   public void setOrientationMajorAxis_r15 (Asn1Integer value) 
      throws Asn1Exception
   {
      if (!((value.value >= 0 && value.value <= 179))) {
         throw new Asn1ConsVioException ("value.value", value.value);
      }

      this.orientationMajorAxis_r15 = value;
   }

   public void setOrientationMajorAxis_r15 (long value) 
      throws Asn1Exception
   {
      setOrientationMajorAxis_r15 (new Asn1Integer(value));
   }

   /**
    * Accessor/mutator methods for HorizontalConfidence_r15
    */
   public Asn1Integer getHorizontalConfidence_r15 () {
      return horizontalConfidence_r15;
   }

   public void setHorizontalConfidence_r15 (Asn1Integer value) 
      throws Asn1Exception
   {
      if (!((value.value >= 0 && value.value <= 100))) {
         throw new Asn1ConsVioException ("value.value", value.value);
      }

      this.horizontalConfidence_r15 = value;
   }

   public void setHorizontalConfidence_r15 (long value) 
      throws Asn1Exception
   {
      setHorizontalConfidence_r15 (new Asn1Integer(value));
   }

   /**
    * Accessor/mutator methods for UncertaintyAltitude_r15
    */
   public Asn1Integer getUncertaintyAltitude_r15 () {
      return uncertaintyAltitude_r15;
   }

   public void setUncertaintyAltitude_r15 (Asn1Integer value) 
      throws Asn1Exception
   {
      if (!((value.value >= 0 && value.value <= 255))) {
         throw new Asn1ConsVioException ("value.value", value.value);
      }

      this.uncertaintyAltitude_r15 = value;
   }

   public void setUncertaintyAltitude_r15 (long value) 
      throws Asn1Exception
   {
      setUncertaintyAltitude_r15 (new Asn1Integer(value));
   }

   /**
    * Accessor/mutator methods for VerticalConfidence_r15
    */
   public Asn1Integer getVerticalConfidence_r15 () {
      return verticalConfidence_r15;
   }

   public void setVerticalConfidence_r15 (Asn1Integer value) 
      throws Asn1Exception
   {
      if (!((value.value >= 0 && value.value <= 100))) {
         throw new Asn1ConsVioException ("value.value", value.value);
      }

      this.verticalConfidence_r15 = value;
   }

   public void setVerticalConfidence_r15 (long value) 
      throws Asn1Exception
   {
      setVerticalConfidence_r15 (new Asn1Integer(value));
   }

   public int getElementCount() { return 9; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return degreesLatitude_r15;
         case 1: return degreesLongitude_r15;
         case 2: return altitude_r15;
         case 3: return uncertaintySemiMajor_r15;
         case 4: return uncertaintySemiMinor_r15;
         case 5: return orientationMajorAxis_r15;
         case 6: return horizontalConfidence_r15;
         case 7: return uncertaintyAltitude_r15;
         case 8: return verticalConfidence_r15;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "degreesLatitude-r15";
         case 1: return "degreesLongitude-r15";
         case 2: return "altitude-r15";
         case 3: return "uncertaintySemiMajor-r15";
         case 4: return "uncertaintySemiMinor-r15";
         case 5: return "orientationMajorAxis-r15";
         case 6: return "horizontalConfidence-r15";
         case 7: return "uncertaintyAltitude-r15";
         case 8: return "verticalConfidence-r15";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // decode degreesLatitude_r15

      buffer.getContext().eventDispatcher.startElement("degreesLatitude_r15", -1);

      degreesLatitude_r15 = new Asn1Integer();
      degreesLatitude_r15.decode (buffer, -2147483648, 2147483647);
      buffer.getContext().eventDispatcher.endElement("degreesLatitude_r15", -1);

      // decode degreesLongitude_r15

      buffer.getContext().eventDispatcher.startElement("degreesLongitude_r15", -1);

      degreesLongitude_r15 = new Asn1Integer();
      degreesLongitude_r15.decode (buffer, -2147483648, 2147483647);
      buffer.getContext().eventDispatcher.endElement("degreesLongitude_r15", -1);

      // decode altitude_r15

      buffer.getContext().eventDispatcher.startElement("altitude_r15", -1);

      altitude_r15 = new Asn1Integer();
      altitude_r15.decode (buffer, -64000, 1280000);
      buffer.getContext().eventDispatcher.endElement("altitude_r15", -1);

      // decode uncertaintySemiMajor_r15

      buffer.getContext().eventDispatcher.startElement("uncertaintySemiMajor_r15", -1);

      uncertaintySemiMajor_r15 = new Asn1Integer();
      uncertaintySemiMajor_r15.decode (buffer, 0, 255);
      buffer.getContext().eventDispatcher.endElement("uncertaintySemiMajor_r15", -1);

      // decode uncertaintySemiMinor_r15

      buffer.getContext().eventDispatcher.startElement("uncertaintySemiMinor_r15", -1);

      uncertaintySemiMinor_r15 = new Asn1Integer();
      uncertaintySemiMinor_r15.decode (buffer, 0, 255);
      buffer.getContext().eventDispatcher.endElement("uncertaintySemiMinor_r15", -1);

      // decode orientationMajorAxis_r15

      buffer.getContext().eventDispatcher.startElement("orientationMajorAxis_r15", -1);

      orientationMajorAxis_r15 = new Asn1Integer();
      orientationMajorAxis_r15.decode (buffer, 0, 179);
      buffer.getContext().eventDispatcher.endElement("orientationMajorAxis_r15", -1);

      // decode horizontalConfidence_r15

      buffer.getContext().eventDispatcher.startElement("horizontalConfidence_r15", -1);

      horizontalConfidence_r15 = new Asn1Integer();
      horizontalConfidence_r15.decode (buffer, 0, 100);
      buffer.getContext().eventDispatcher.endElement("horizontalConfidence_r15", -1);

      // decode uncertaintyAltitude_r15

      buffer.getContext().eventDispatcher.startElement("uncertaintyAltitude_r15", -1);

      uncertaintyAltitude_r15 = new Asn1Integer();
      uncertaintyAltitude_r15.decode (buffer, 0, 255);
      buffer.getContext().eventDispatcher.endElement("uncertaintyAltitude_r15", -1);

      // decode verticalConfidence_r15

      buffer.getContext().eventDispatcher.startElement("verticalConfidence_r15", -1);

      verticalConfidence_r15 = new Asn1Integer();
      verticalConfidence_r15.decode (buffer, 0, 100);
      buffer.getContext().eventDispatcher.endElement("verticalConfidence_r15", -1);

   }

   public void encode (Asn1PerEncodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      // encode degreesLatitude_r15

      if (degreesLatitude_r15 != null) {
         buffer.getContext().eventDispatcher.startElement("degreesLatitude_r15", -1);

         degreesLatitude_r15.encode (buffer, -2147483648, 2147483647);

         buffer.getContext().eventDispatcher.endElement("degreesLatitude_r15", -1);
      }
      else throw new Asn1MissingRequiredException ("degreesLatitude_r15");

      // encode degreesLongitude_r15

      if (degreesLongitude_r15 != null) {
         buffer.getContext().eventDispatcher.startElement("degreesLongitude_r15", -1);

         degreesLongitude_r15.encode (buffer, -2147483648, 2147483647);

         buffer.getContext().eventDispatcher.endElement("degreesLongitude_r15", -1);
      }
      else throw new Asn1MissingRequiredException ("degreesLongitude_r15");

      // encode altitude_r15

      if (altitude_r15 != null) {
         buffer.getContext().eventDispatcher.startElement("altitude_r15", -1);

         altitude_r15.encode (buffer, -64000, 1280000);

         buffer.getContext().eventDispatcher.endElement("altitude_r15", -1);
      }
      else throw new Asn1MissingRequiredException ("altitude_r15");

      // encode uncertaintySemiMajor_r15

      if (uncertaintySemiMajor_r15 != null) {
         buffer.getContext().eventDispatcher.startElement("uncertaintySemiMajor_r15", -1);

         uncertaintySemiMajor_r15.encode (buffer, 0, 255);

         buffer.getContext().eventDispatcher.endElement("uncertaintySemiMajor_r15", -1);
      }
      else throw new Asn1MissingRequiredException ("uncertaintySemiMajor_r15");

      // encode uncertaintySemiMinor_r15

      if (uncertaintySemiMinor_r15 != null) {
         buffer.getContext().eventDispatcher.startElement("uncertaintySemiMinor_r15", -1);

         uncertaintySemiMinor_r15.encode (buffer, 0, 255);

         buffer.getContext().eventDispatcher.endElement("uncertaintySemiMinor_r15", -1);
      }
      else throw new Asn1MissingRequiredException ("uncertaintySemiMinor_r15");

      // encode orientationMajorAxis_r15

      if (orientationMajorAxis_r15 != null) {
         buffer.getContext().eventDispatcher.startElement("orientationMajorAxis_r15", -1);

         orientationMajorAxis_r15.encode (buffer, 0, 179);

         buffer.getContext().eventDispatcher.endElement("orientationMajorAxis_r15", -1);
      }
      else throw new Asn1MissingRequiredException ("orientationMajorAxis_r15");

      // encode horizontalConfidence_r15

      if (horizontalConfidence_r15 != null) {
         buffer.getContext().eventDispatcher.startElement("horizontalConfidence_r15", -1);

         horizontalConfidence_r15.encode (buffer, 0, 100);

         buffer.getContext().eventDispatcher.endElement("horizontalConfidence_r15", -1);
      }
      else throw new Asn1MissingRequiredException ("horizontalConfidence_r15");

      // encode uncertaintyAltitude_r15

      if (uncertaintyAltitude_r15 != null) {
         buffer.getContext().eventDispatcher.startElement("uncertaintyAltitude_r15", -1);

         uncertaintyAltitude_r15.encode (buffer, 0, 255);

         buffer.getContext().eventDispatcher.endElement("uncertaintyAltitude_r15", -1);
      }
      else throw new Asn1MissingRequiredException ("uncertaintyAltitude_r15");

      // encode verticalConfidence_r15

      if (verticalConfidence_r15 != null) {
         buffer.getContext().eventDispatcher.startElement("verticalConfidence_r15", -1);

         verticalConfidence_r15.encode (buffer, 0, 100);

         buffer.getContext().eventDispatcher.endElement("verticalConfidence_r15", -1);
      }
      else throw new Asn1MissingRequiredException ("verticalConfidence_r15");

   }

}

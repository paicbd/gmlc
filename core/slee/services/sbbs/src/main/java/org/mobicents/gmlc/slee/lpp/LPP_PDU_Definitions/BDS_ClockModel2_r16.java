/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.5.0, Date: 07-May-2021.
 */
package org.mobicents.gmlc.slee.lpp.LPP_PDU_Definitions;

import com.objsys.asn1j.runtime.*;

public class BDS_ClockModel2_r16 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_LPP_PDU_DefinitionsRtkey._rtkey);
      Asn1Type._setLicLocation(_LPP_PDU_DefinitionsRtkey._licLocation);
   }

   public String getAsn1TypeName()  {
      return "BDS-ClockModel2-r16";
   }

   protected Asn1Integer bdsToc_r16;
   protected Asn1Integer bdsA0_r16;
   protected Asn1Integer bdsA1_r16;
   protected Asn1Integer bdsA2_r16;
   protected Asn1Integer bdsTgdB1Cp_r16;
   protected Asn1Integer bdsIscB1Cd_r16;
   protected Asn1OpenExt extElem1;

   public BDS_ClockModel2_r16 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public BDS_ClockModel2_r16 (
      Asn1Integer bdsToc_r16_,
      Asn1Integer bdsA0_r16_,
      Asn1Integer bdsA1_r16_,
      Asn1Integer bdsA2_r16_,
      Asn1Integer bdsTgdB1Cp_r16_,
      Asn1Integer bdsIscB1Cd_r16_
   ) throws Asn1Exception {
      super();
      setBdsToc_r16 (bdsToc_r16_);
      setBdsA0_r16 (bdsA0_r16_);
      setBdsA1_r16 (bdsA1_r16_);
      setBdsA2_r16 (bdsA2_r16_);
      setBdsTgdB1Cp_r16 (bdsTgdB1Cp_r16_);
      setBdsIscB1Cd_r16 (bdsIscB1Cd_r16_);
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public BDS_ClockModel2_r16 (long bdsToc_r16_,
      long bdsA0_r16_,
      long bdsA1_r16_,
      long bdsA2_r16_,
      long bdsTgdB1Cp_r16_,
      long bdsIscB1Cd_r16_
   ) throws Asn1Exception {
      super();
      setBdsToc_r16 (bdsToc_r16_);
      setBdsA0_r16 (bdsA0_r16_);
      setBdsA1_r16 (bdsA1_r16_);
      setBdsA2_r16 (bdsA2_r16_);
      setBdsTgdB1Cp_r16 (bdsTgdB1Cp_r16_);
      setBdsIscB1Cd_r16 (bdsIscB1Cd_r16_);
   }

   public void init () {
      bdsToc_r16 = null;
      bdsA0_r16 = null;
      bdsA1_r16 = null;
      bdsA2_r16 = null;
      bdsTgdB1Cp_r16 = null;
      bdsIscB1Cd_r16 = null;
      extElem1 = null;
   }

   public boolean equals( Object obj ) {
      if ( this == obj ) return true;
      if ( !(obj instanceof BDS_ClockModel2_r16) ) return false;

      BDS_ClockModel2_r16 rhs = (BDS_ClockModel2_r16) obj;

      if (bdsToc_r16 == null) {
         if (rhs.bdsToc_r16 != null) return false;
      }
      else {
         if (!bdsToc_r16.equals(rhs.bdsToc_r16)) {
            return false;
         }
      }

      if (bdsA0_r16 == null) {
         if (rhs.bdsA0_r16 != null) return false;
      }
      else {
         if (!bdsA0_r16.equals(rhs.bdsA0_r16)) {
            return false;
         }
      }

      if (bdsA1_r16 == null) {
         if (rhs.bdsA1_r16 != null) return false;
      }
      else {
         if (!bdsA1_r16.equals(rhs.bdsA1_r16)) {
            return false;
         }
      }

      if (bdsA2_r16 == null) {
         if (rhs.bdsA2_r16 != null) return false;
      }
      else {
         if (!bdsA2_r16.equals(rhs.bdsA2_r16)) {
            return false;
         }
      }

      if (bdsTgdB1Cp_r16 == null) {
         if (rhs.bdsTgdB1Cp_r16 != null) return false;
      }
      else {
         if (!bdsTgdB1Cp_r16.equals(rhs.bdsTgdB1Cp_r16)) {
            return false;
         }
      }

      if (bdsIscB1Cd_r16 == null) {
         if (rhs.bdsIscB1Cd_r16 != null) return false;
      }
      else {
         if (!bdsIscB1Cd_r16.equals(rhs.bdsIscB1Cd_r16)) {
            return false;
         }
      }

      if (extElem1 == null) {
         if (rhs.extElem1 != null) return false;
      }
      else {
         if (!extElem1.equals(rhs.extElem1)) {
            return false;
         }
      }

      return true;
   }

   public int hashCode() {
      int __code = 1;

      if (bdsToc_r16 != null) __code = 31*__code + bdsToc_r16.hashCode();
      if (bdsA0_r16 != null) __code = 31*__code + bdsA0_r16.hashCode();
      if (bdsA1_r16 != null) __code = 31*__code + bdsA1_r16.hashCode();
      if (bdsA2_r16 != null) __code = 31*__code + bdsA2_r16.hashCode();
      if (bdsTgdB1Cp_r16 != null) __code = 31*__code + bdsTgdB1Cp_r16.hashCode();
      if (bdsIscB1Cd_r16 != null) __code = 31*__code + bdsIscB1Cd_r16.hashCode();
      if (extElem1 != null) __code = 31*__code + extElem1.hashCode();

      return __code;
   }

   /**
    * Accessor/mutator methods for BdsToc_r16
    */
   public Asn1Integer getBdsToc_r16 () {
      return bdsToc_r16;
   }

   public void setBdsToc_r16 (Asn1Integer value) 
      throws Asn1Exception
   {
      if (!((value.value >= 0 && value.value <= 2047))) {
         throw new Asn1ConsVioException ("value.value", value.value);
      }

      this.bdsToc_r16 = value;
   }

   public void setBdsToc_r16 (long value) 
      throws Asn1Exception
   {
      setBdsToc_r16 (new Asn1Integer(value));
   }

   /**
    * Accessor/mutator methods for BdsA0_r16
    */
   public Asn1Integer getBdsA0_r16 () {
      return bdsA0_r16;
   }

   public void setBdsA0_r16 (Asn1Integer value) 
      throws Asn1Exception
   {
      if (!((value.value >= -16777216 && value.value <= 16777215))) {
         throw new Asn1ConsVioException ("value.value", value.value);
      }

      this.bdsA0_r16 = value;
   }

   public void setBdsA0_r16 (long value) 
      throws Asn1Exception
   {
      setBdsA0_r16 (new Asn1Integer(value));
   }

   /**
    * Accessor/mutator methods for BdsA1_r16
    */
   public Asn1Integer getBdsA1_r16 () {
      return bdsA1_r16;
   }

   public void setBdsA1_r16 (Asn1Integer value) 
      throws Asn1Exception
   {
      if (!((value.value >= -2097152 && value.value <= 2097151))) {
         throw new Asn1ConsVioException ("value.value", value.value);
      }

      this.bdsA1_r16 = value;
   }

   public void setBdsA1_r16 (long value) 
      throws Asn1Exception
   {
      setBdsA1_r16 (new Asn1Integer(value));
   }

   /**
    * Accessor/mutator methods for BdsA2_r16
    */
   public Asn1Integer getBdsA2_r16 () {
      return bdsA2_r16;
   }

   public void setBdsA2_r16 (Asn1Integer value) 
      throws Asn1Exception
   {
      if (!((value.value >= -1024 && value.value <= 1023))) {
         throw new Asn1ConsVioException ("value.value", value.value);
      }

      this.bdsA2_r16 = value;
   }

   public void setBdsA2_r16 (long value) 
      throws Asn1Exception
   {
      setBdsA2_r16 (new Asn1Integer(value));
   }

   /**
    * Accessor/mutator methods for BdsTgdB1Cp_r16
    */
   public Asn1Integer getBdsTgdB1Cp_r16 () {
      return bdsTgdB1Cp_r16;
   }

   public void setBdsTgdB1Cp_r16 (Asn1Integer value) 
      throws Asn1Exception
   {
      if (!((value.value >= -2048 && value.value <= 2047))) {
         throw new Asn1ConsVioException ("value.value", value.value);
      }

      this.bdsTgdB1Cp_r16 = value;
   }

   public void setBdsTgdB1Cp_r16 (long value) 
      throws Asn1Exception
   {
      setBdsTgdB1Cp_r16 (new Asn1Integer(value));
   }

   /**
    * Accessor/mutator methods for BdsIscB1Cd_r16
    */
   public Asn1Integer getBdsIscB1Cd_r16 () {
      return bdsIscB1Cd_r16;
   }

   public void setBdsIscB1Cd_r16 (Asn1Integer value) 
      throws Asn1Exception
   {
      if (!((value.value >= -2048 && value.value <= 2047))) {
         throw new Asn1ConsVioException ("value.value", value.value);
      }

      this.bdsIscB1Cd_r16 = value;
   }

   public void setBdsIscB1Cd_r16 (long value) 
      throws Asn1Exception
   {
      setBdsIscB1Cd_r16 (new Asn1Integer(value));
   }

   /**
    * Accessor/mutator methods for ExtElem1
    */
   public Asn1OpenExt getExtElem1 () {
      return extElem1;
   }

   public void setExtElem1 (Asn1OpenExt value) {
      this.extElem1 = value;
   }

   public int getElementCount() { return 7; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return bdsToc_r16;
         case 1: return bdsA0_r16;
         case 2: return bdsA1_r16;
         case 3: return bdsA2_r16;
         case 4: return bdsTgdB1Cp_r16;
         case 5: return bdsIscB1Cd_r16;
         case 6: return extElem1;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "bdsToc-r16";
         case 1: return "bdsA0-r16";
         case 2: return "bdsA1-r16";
         case 3: return "bdsA2-r16";
         case 4: return "bdsTgdB1Cp-r16";
         case 5: return "bdsIscB1Cd-r16";
         case 6: return null;
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // extension bit

      boolean extbit = buffer.decodeBit ("extbit");

      // decode bdsToc_r16

      buffer.getContext().eventDispatcher.startElement("bdsToc_r16", -1);

      bdsToc_r16 = new Asn1Integer();
      bdsToc_r16.decode (buffer, 0, 2047);
      buffer.getContext().eventDispatcher.endElement("bdsToc_r16", -1);

      // decode bdsA0_r16

      buffer.getContext().eventDispatcher.startElement("bdsA0_r16", -1);

      bdsA0_r16 = new Asn1Integer();
      bdsA0_r16.decode (buffer, -16777216, 16777215);
      buffer.getContext().eventDispatcher.endElement("bdsA0_r16", -1);

      // decode bdsA1_r16

      buffer.getContext().eventDispatcher.startElement("bdsA1_r16", -1);

      bdsA1_r16 = new Asn1Integer();
      bdsA1_r16.decode (buffer, -2097152, 2097151);
      buffer.getContext().eventDispatcher.endElement("bdsA1_r16", -1);

      // decode bdsA2_r16

      buffer.getContext().eventDispatcher.startElement("bdsA2_r16", -1);

      bdsA2_r16 = new Asn1Integer();
      bdsA2_r16.decode (buffer, -1024, 1023);
      buffer.getContext().eventDispatcher.endElement("bdsA2_r16", -1);

      // decode bdsTgdB1Cp_r16

      buffer.getContext().eventDispatcher.startElement("bdsTgdB1Cp_r16", -1);

      bdsTgdB1Cp_r16 = new Asn1Integer();
      bdsTgdB1Cp_r16.decode (buffer, -2048, 2047);
      buffer.getContext().eventDispatcher.endElement("bdsTgdB1Cp_r16", -1);

      // decode bdsIscB1Cd_r16

      buffer.getContext().eventDispatcher.startElement("bdsIscB1Cd_r16", -1);

      bdsIscB1Cd_r16 = new Asn1Integer();
      bdsIscB1Cd_r16.decode (buffer, -2048, 2047);
      buffer.getContext().eventDispatcher.endElement("bdsIscB1Cd_r16", -1);

      if (extbit) {

         int bitcnt = buffer.decodeSmallLength(), i = 0;
         long bitidx = buffer.getBitOffset() + bitcnt;
         boolean[] bitmap = new boolean [bitcnt];

         while (i < bitcnt) {
            bitmap[i++] = buffer.decodeBit ("unknown");
         }

         i = 0;

         // decode unknown extension elements

         if (i < bitcnt) {
            Asn1OpenType openType = null;
            extElem1 = new Asn1OpenExt();
            int j = 0;
            while (i < bitcnt) {
               if (bitmap[i]) {
                  buffer.getContext().eventDispatcher.startElement("...", -1);

                  openType = extElem1.decodeOpenType (buffer, true, j++);
               }
               else {
                  extElem1.setOpenType (null, j++);
               }
               i++;
            }
         }
         buffer.byteAlign ();

      }

   }

   public void encode (Asn1PerEncodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      // extension bit

      boolean extbit = (((extElem1 != null) && (!extElem1.value.isEmpty()))
      );

      buffer.encodeBit (extbit, "extbit");

      // encode bdsToc_r16

      if (bdsToc_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("bdsToc_r16", -1);

         bdsToc_r16.encode (buffer, 0, 2047);

         buffer.getContext().eventDispatcher.endElement("bdsToc_r16", -1);
      }
      else throw new Asn1MissingRequiredException ("bdsToc_r16");

      // encode bdsA0_r16

      if (bdsA0_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("bdsA0_r16", -1);

         bdsA0_r16.encode (buffer, -16777216, 16777215);

         buffer.getContext().eventDispatcher.endElement("bdsA0_r16", -1);
      }
      else throw new Asn1MissingRequiredException ("bdsA0_r16");

      // encode bdsA1_r16

      if (bdsA1_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("bdsA1_r16", -1);

         bdsA1_r16.encode (buffer, -2097152, 2097151);

         buffer.getContext().eventDispatcher.endElement("bdsA1_r16", -1);
      }
      else throw new Asn1MissingRequiredException ("bdsA1_r16");

      // encode bdsA2_r16

      if (bdsA2_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("bdsA2_r16", -1);

         bdsA2_r16.encode (buffer, -1024, 1023);

         buffer.getContext().eventDispatcher.endElement("bdsA2_r16", -1);
      }
      else throw new Asn1MissingRequiredException ("bdsA2_r16");

      // encode bdsTgdB1Cp_r16

      if (bdsTgdB1Cp_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("bdsTgdB1Cp_r16", -1);

         bdsTgdB1Cp_r16.encode (buffer, -2048, 2047);

         buffer.getContext().eventDispatcher.endElement("bdsTgdB1Cp_r16", -1);
      }
      else throw new Asn1MissingRequiredException ("bdsTgdB1Cp_r16");

      // encode bdsIscB1Cd_r16

      if (bdsIscB1Cd_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("bdsIscB1Cd_r16", -1);

         bdsIscB1Cd_r16.encode (buffer, -2048, 2047);

         buffer.getContext().eventDispatcher.endElement("bdsIscB1Cd_r16", -1);
      }
      else throw new Asn1MissingRequiredException ("bdsIscB1Cd_r16");

      if (extbit) {

         // encode extension optional bits length

         int bitcnt = 0;
         if (extElem1 != null) bitcnt += extElem1.value.size();
         buffer.encodeSmallLength (bitcnt);

         // encode optional bits

         if (extElem1 != null && extElem1.value.size() > 0) {
            extElem1.encodeExtBits (buffer);
         }

         // encode extension elements

         if (extElem1 != null && extElem1.value.size() > 0) {
            extElem1.encode (buffer);
         }
      }
   }

}

/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.5.0, Date: 07-May-2021.
 */
package org.mobicents.gmlc.slee.lpp.LPP_PDU_Definitions;

import com.objsys.asn1j.runtime.*;

public class PRS_ProcessingCapabilityPerBand_r16_maxNumOfDL_PRS_ResProcessedPerSlot_r16_scs30_r16 extends Asn1Enumerated {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_LPP_PDU_DefinitionsRtkey._rtkey);
      Asn1Type._setLicLocation(_LPP_PDU_DefinitionsRtkey._licLocation);
   }

   public String getAsn1TypeName()  {
      return "ENUMERATED";
   }

   // Integer constants for switch-case
   public static final int _N1 = 0;
   public static final int _N2 = 1;
   public static final int _N4 = 2;
   public static final int _N8 = 3;
   public static final int _N16 = 4;
   public static final int _N24 = 5;
   public static final int _N32 = 6;
   public static final int _N48 = 7;
   public static final int _N64 = 8;

   // Singleton instances of PRS_ProcessingCapabilityPerBand_r16_maxNumOfDL_PRS_ResProcessedPerSlot_r16_scs30_r16
   protected static final PRS_ProcessingCapabilityPerBand_r16_maxNumOfDL_PRS_ResProcessedPerSlot_r16_scs30_r16 _n1 = new PRS_ProcessingCapabilityPerBand_r16_maxNumOfDL_PRS_ResProcessedPerSlot_r16_scs30_r16(0);
   protected static final PRS_ProcessingCapabilityPerBand_r16_maxNumOfDL_PRS_ResProcessedPerSlot_r16_scs30_r16 _n2 = new PRS_ProcessingCapabilityPerBand_r16_maxNumOfDL_PRS_ResProcessedPerSlot_r16_scs30_r16(1);
   protected static final PRS_ProcessingCapabilityPerBand_r16_maxNumOfDL_PRS_ResProcessedPerSlot_r16_scs30_r16 _n4 = new PRS_ProcessingCapabilityPerBand_r16_maxNumOfDL_PRS_ResProcessedPerSlot_r16_scs30_r16(2);
   protected static final PRS_ProcessingCapabilityPerBand_r16_maxNumOfDL_PRS_ResProcessedPerSlot_r16_scs30_r16 _n8 = new PRS_ProcessingCapabilityPerBand_r16_maxNumOfDL_PRS_ResProcessedPerSlot_r16_scs30_r16(3);
   protected static final PRS_ProcessingCapabilityPerBand_r16_maxNumOfDL_PRS_ResProcessedPerSlot_r16_scs30_r16 _n16 = new PRS_ProcessingCapabilityPerBand_r16_maxNumOfDL_PRS_ResProcessedPerSlot_r16_scs30_r16(4);
   protected static final PRS_ProcessingCapabilityPerBand_r16_maxNumOfDL_PRS_ResProcessedPerSlot_r16_scs30_r16 _n24 = new PRS_ProcessingCapabilityPerBand_r16_maxNumOfDL_PRS_ResProcessedPerSlot_r16_scs30_r16(5);
   protected static final PRS_ProcessingCapabilityPerBand_r16_maxNumOfDL_PRS_ResProcessedPerSlot_r16_scs30_r16 _n32 = new PRS_ProcessingCapabilityPerBand_r16_maxNumOfDL_PRS_ResProcessedPerSlot_r16_scs30_r16(6);
   protected static final PRS_ProcessingCapabilityPerBand_r16_maxNumOfDL_PRS_ResProcessedPerSlot_r16_scs30_r16 _n48 = new PRS_ProcessingCapabilityPerBand_r16_maxNumOfDL_PRS_ResProcessedPerSlot_r16_scs30_r16(7);
   protected static final PRS_ProcessingCapabilityPerBand_r16_maxNumOfDL_PRS_ResProcessedPerSlot_r16_scs30_r16 _n64 = new PRS_ProcessingCapabilityPerBand_r16_maxNumOfDL_PRS_ResProcessedPerSlot_r16_scs30_r16(8);

   /**
    * Enumerated constructor: this object must be initialized with one 
    * of the following values:
    *   0
    *   1
    *   2
    *   3
    *   4
    *   5
    *   6
    *   7
    *   8
    */
   protected PRS_ProcessingCapabilityPerBand_r16_maxNumOfDL_PRS_ResProcessedPerSlot_r16_scs30_r16 (int value_) {
      super (value_);
   }

   /**
    * Singleton accessor method for n1.
    */
   public static PRS_ProcessingCapabilityPerBand_r16_maxNumOfDL_PRS_ResProcessedPerSlot_r16_scs30_r16 n1() {
      return _n1;
   }

   /**
    * Singleton accessor method for n2.
    */
   public static PRS_ProcessingCapabilityPerBand_r16_maxNumOfDL_PRS_ResProcessedPerSlot_r16_scs30_r16 n2() {
      return _n2;
   }

   /**
    * Singleton accessor method for n4.
    */
   public static PRS_ProcessingCapabilityPerBand_r16_maxNumOfDL_PRS_ResProcessedPerSlot_r16_scs30_r16 n4() {
      return _n4;
   }

   /**
    * Singleton accessor method for n8.
    */
   public static PRS_ProcessingCapabilityPerBand_r16_maxNumOfDL_PRS_ResProcessedPerSlot_r16_scs30_r16 n8() {
      return _n8;
   }

   /**
    * Singleton accessor method for n16.
    */
   public static PRS_ProcessingCapabilityPerBand_r16_maxNumOfDL_PRS_ResProcessedPerSlot_r16_scs30_r16 n16() {
      return _n16;
   }

   /**
    * Singleton accessor method for n24.
    */
   public static PRS_ProcessingCapabilityPerBand_r16_maxNumOfDL_PRS_ResProcessedPerSlot_r16_scs30_r16 n24() {
      return _n24;
   }

   /**
    * Singleton accessor method for n32.
    */
   public static PRS_ProcessingCapabilityPerBand_r16_maxNumOfDL_PRS_ResProcessedPerSlot_r16_scs30_r16 n32() {
      return _n32;
   }

   /**
    * Singleton accessor method for n48.
    */
   public static PRS_ProcessingCapabilityPerBand_r16_maxNumOfDL_PRS_ResProcessedPerSlot_r16_scs30_r16 n48() {
      return _n48;
   }

   /**
    * Singleton accessor method for n64.
    */
   public static PRS_ProcessingCapabilityPerBand_r16_maxNumOfDL_PRS_ResProcessedPerSlot_r16_scs30_r16 n64() {
      return _n64;
   }

   public static final Decoder DECODER = new Decoder();

   public static class Decoder implements Asn1PerDecoder{

      public Asn1Type decode(Asn1PerDecodeBuffer buffer) throws Asn1Exception, java.io.IOException
      {
         return PRS_ProcessingCapabilityPerBand_r16_maxNumOfDL_PRS_ResProcessedPerSlot_r16_scs30_r16.valueOf( PRS_ProcessingCapabilityPerBand_r16_maxNumOfDL_PRS_ResProcessedPerSlot_r16_scs30_r16.decodeEnumValue( buffer ) );
      }
   }

   /**
    * Returns the instance associated with the value passed.
    * If the value passed is invalid, an exception is thrown.
    */
   public static PRS_ProcessingCapabilityPerBand_r16_maxNumOfDL_PRS_ResProcessedPerSlot_r16_scs30_r16 valueOf (int _value)
      throws Asn1InvalidEnumException
   {
      switch ((int)_value) {
         case 0: return n1();
         case 1: return n2();
         case 2: return n4();
         case 3: return n8();
         case 4: return n16();
         case 5: return n24();
         case 6: return n32();
         case 7: return n48();
         case 8: return n64();
         default: throw new Asn1InvalidEnumException (_value);
      }
   }

   public static int decodeEnumValue (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      int ui;  // enum index
      int ret; // return value
      ui = (int) buffer.decodeConsWholeNumber (9);

      switch (ui) {
         case 0: ret =  0; break;
         case 1: ret =  1; break;
         case 2: ret =  2; break;
         case 3: ret =  3; break;
         case 4: ret =  4; break;
         case 5: ret =  5; break;
         case 6: ret =  6; break;
         case 7: ret =  7; break;
         case 8: ret =  8; break;
         default: throw new Asn1InvalidEnumException (ui);
      }

      buffer.setTypeCode (Asn1Type.ENUMERATED);
      return ret;
   }

   public void encode (Asn1PerEncodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      int ui;  // enum index
      switch ((int)value) {
         case 0: ui = 0; /* n1 */break;
         case 1: ui = 1; /* n2 */break;
         case 2: ui = 2; /* n4 */break;
         case 3: ui = 3; /* n8 */break;
         case 4: ui = 4; /* n16 */break;
         case 5: ui = 5; /* n24 */break;
         case 6: ui = 6; /* n32 */break;
         case 7: ui = 7; /* n48 */break;
         case 8: ui = 8; /* n64 */break;
         default:
            throw new Asn1InvalidEnumException (value);
      }

      buffer.encodeConsWholeNumber (ui, 9);
   }

}

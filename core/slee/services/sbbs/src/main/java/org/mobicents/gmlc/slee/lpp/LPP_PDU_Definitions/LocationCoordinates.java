/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.5.0, Date: 07-May-2021.
 */
package org.mobicents.gmlc.slee.lpp.LPP_PDU_Definitions;

import com.objsys.asn1j.runtime.*;

public class LocationCoordinates extends Asn1Choice {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_LPP_PDU_DefinitionsRtkey._rtkey);
      Asn1Type._setLicLocation(_LPP_PDU_DefinitionsRtkey._licLocation);
   }

   public String getAsn1TypeName()  {
      return "LocationCoordinates";
   }

   // Choice element identifier constants
   public final static byte _ELLIPSOIDPOINT = 1;
   public final static byte _ELLIPSOIDPOINTWITHUNCERTAINTYCIRCLE = 2;
   public final static byte _ELLIPSOIDPOINTWITHUNCERTAINTYELLIPSE = 3;
   public final static byte _POLYGON = 4;
   public final static byte _ELLIPSOIDPOINTWITHALTITUDE = 5;
   public final static byte _ELLIPSOIDPOINTWITHALTITUDEANDUNCERTAINTYELLIPSOID = 6;
   public final static byte _ELLIPSOIDARC = 7;
   public final static byte _HIGHACCURACYELLIPSOIDPOINTWITHUNCERTAINTYELLIPSE_V1510 = 8;
   public final static byte _HIGHACCURACYELLIPSOIDPOINTWITHALTITUDEANDUNCERTAINTYELLIPSOID_V1510 = 9;
   public final static byte _EXTELEM1 = 10;

   public LocationCoordinates () {
      super();
   }

   public LocationCoordinates (byte choiceId_, Asn1Type element_) {
      super();
      setElement (choiceId_, element_);
   }

   public String getElemName () {
      switch (choiceID) {
      case _ELLIPSOIDPOINT: return "ellipsoidPoint";
      case _ELLIPSOIDPOINTWITHUNCERTAINTYCIRCLE: return "ellipsoidPointWithUncertaintyCircle";
      case _ELLIPSOIDPOINTWITHUNCERTAINTYELLIPSE: return "ellipsoidPointWithUncertaintyEllipse";
      case _POLYGON: return "polygon";
      case _ELLIPSOIDPOINTWITHALTITUDE: return "ellipsoidPointWithAltitude";
      case _ELLIPSOIDPOINTWITHALTITUDEANDUNCERTAINTYELLIPSOID: return "ellipsoidPointWithAltitudeAndUncertaintyEllipsoid";
      case _ELLIPSOIDARC: return "ellipsoidArc";
      case _HIGHACCURACYELLIPSOIDPOINTWITHUNCERTAINTYELLIPSE_V1510: return "highAccuracyEllipsoidPointWithUncertaintyEllipse_v1510";
      case _HIGHACCURACYELLIPSOIDPOINTWITHALTITUDEANDUNCERTAINTYELLIPSOID_V1510: return "highAccuracyEllipsoidPointWithAltitudeAndUncertaintyEllipsoid_v1510";
      case _EXTELEM1: return "...";
      default: return "UNDEFINED";
      }
   }

   /**
    * Accessor/mutator methods for ellipsoidPoint
    */
   public Ellipsoid_Point getEllipsoidPoint () {
      return (choiceID == _ELLIPSOIDPOINT) ? (Ellipsoid_Point)element : null;
   }
   public void setEllipsoidPoint (Ellipsoid_Point value) {
      setElement (_ELLIPSOIDPOINT, value);
   }
   public boolean isEllipsoidPoint () {
      return (choiceID == _ELLIPSOIDPOINT);
   }

   /**
    * Accessor/mutator methods for ellipsoidPointWithUncertaintyCircle
    */
   public Ellipsoid_PointWithUncertaintyCircle getEllipsoidPointWithUncertaintyCircle () {
      return (choiceID == _ELLIPSOIDPOINTWITHUNCERTAINTYCIRCLE) ? (Ellipsoid_PointWithUncertaintyCircle)element : null;
   }
   public void setEllipsoidPointWithUncertaintyCircle (Ellipsoid_PointWithUncertaintyCircle value) {
      setElement (_ELLIPSOIDPOINTWITHUNCERTAINTYCIRCLE, value);
   }
   public boolean isEllipsoidPointWithUncertaintyCircle () {
      return (choiceID == _ELLIPSOIDPOINTWITHUNCERTAINTYCIRCLE);
   }

   /**
    * Accessor/mutator methods for ellipsoidPointWithUncertaintyEllipse
    */
   public EllipsoidPointWithUncertaintyEllipse getEllipsoidPointWithUncertaintyEllipse () {
      return (choiceID == _ELLIPSOIDPOINTWITHUNCERTAINTYELLIPSE) ? (EllipsoidPointWithUncertaintyEllipse)element : null;
   }
   public void setEllipsoidPointWithUncertaintyEllipse (EllipsoidPointWithUncertaintyEllipse value) {
      setElement (_ELLIPSOIDPOINTWITHUNCERTAINTYELLIPSE, value);
   }
   public boolean isEllipsoidPointWithUncertaintyEllipse () {
      return (choiceID == _ELLIPSOIDPOINTWITHUNCERTAINTYELLIPSE);
   }

   /**
    * Accessor/mutator methods for polygon
    */
   public Polygon getPolygon () {
      return (choiceID == _POLYGON) ? (Polygon)element : null;
   }
   public void setPolygon (Polygon value) {
      setElement (_POLYGON, value);
   }
   public boolean isPolygon () {
      return (choiceID == _POLYGON);
   }

   /**
    * Accessor/mutator methods for ellipsoidPointWithAltitude
    */
   public EllipsoidPointWithAltitude getEllipsoidPointWithAltitude () {
      return (choiceID == _ELLIPSOIDPOINTWITHALTITUDE) ? (EllipsoidPointWithAltitude)element : null;
   }
   public void setEllipsoidPointWithAltitude (EllipsoidPointWithAltitude value) {
      setElement (_ELLIPSOIDPOINTWITHALTITUDE, value);
   }
   public boolean isEllipsoidPointWithAltitude () {
      return (choiceID == _ELLIPSOIDPOINTWITHALTITUDE);
   }

   /**
    * Accessor/mutator methods for ellipsoidPointWithAltitudeAndUncertaintyEllipsoid
    */
   public EllipsoidPointWithAltitudeAndUncertaintyEllipsoid getEllipsoidPointWithAltitudeAndUncertaintyEllipsoid () {
      return (choiceID == _ELLIPSOIDPOINTWITHALTITUDEANDUNCERTAINTYELLIPSOID) ? (EllipsoidPointWithAltitudeAndUncertaintyEllipsoid)element : null;
   }
   public void setEllipsoidPointWithAltitudeAndUncertaintyEllipsoid (EllipsoidPointWithAltitudeAndUncertaintyEllipsoid value) {
      setElement (_ELLIPSOIDPOINTWITHALTITUDEANDUNCERTAINTYELLIPSOID, value);
   }
   public boolean isEllipsoidPointWithAltitudeAndUncertaintyEllipsoid () {
      return (choiceID == _ELLIPSOIDPOINTWITHALTITUDEANDUNCERTAINTYELLIPSOID);
   }

   /**
    * Accessor/mutator methods for ellipsoidArc
    */
   public EllipsoidArc getEllipsoidArc () {
      return (choiceID == _ELLIPSOIDARC) ? (EllipsoidArc)element : null;
   }
   public void setEllipsoidArc (EllipsoidArc value) {
      setElement (_ELLIPSOIDARC, value);
   }
   public boolean isEllipsoidArc () {
      return (choiceID == _ELLIPSOIDARC);
   }

   /**
    * Accessor/mutator methods for highAccuracyEllipsoidPointWithUncertaintyEllipse_v1510
    */
   public HighAccuracyEllipsoidPointWithUncertaintyEllipse_r15 getHighAccuracyEllipsoidPointWithUncertaintyEllipse_v1510 () {
      return (choiceID == _HIGHACCURACYELLIPSOIDPOINTWITHUNCERTAINTYELLIPSE_V1510) ? (HighAccuracyEllipsoidPointWithUncertaintyEllipse_r15)element : null;
   }
   public void setHighAccuracyEllipsoidPointWithUncertaintyEllipse_v1510 (HighAccuracyEllipsoidPointWithUncertaintyEllipse_r15 value) {
      setElement (_HIGHACCURACYELLIPSOIDPOINTWITHUNCERTAINTYELLIPSE_V1510, value);
   }
   public boolean isHighAccuracyEllipsoidPointWithUncertaintyEllipse_v1510 () {
      return (choiceID == _HIGHACCURACYELLIPSOIDPOINTWITHUNCERTAINTYELLIPSE_V1510);
   }

   /**
    * Accessor/mutator methods for highAccuracyEllipsoidPointWithAltitudeAndUncertaintyEllipsoid_v1510
    */
   public HighAccuracyEllipsoidPointWithAltitudeAndUncertaintyEllipsoid_r15 getHighAccuracyEllipsoidPointWithAltitudeAndUncertaintyEllipsoid_v1510 () {
      return (choiceID == _HIGHACCURACYELLIPSOIDPOINTWITHALTITUDEANDUNCERTAINTYELLIPSOID_V1510) ? (HighAccuracyEllipsoidPointWithAltitudeAndUncertaintyEllipsoid_r15)element : null;
   }
   public void setHighAccuracyEllipsoidPointWithAltitudeAndUncertaintyEllipsoid_v1510 (HighAccuracyEllipsoidPointWithAltitudeAndUncertaintyEllipsoid_r15 value) {
      setElement (_HIGHACCURACYELLIPSOIDPOINTWITHALTITUDEANDUNCERTAINTYELLIPSOID_V1510, value);
   }
   public boolean isHighAccuracyEllipsoidPointWithAltitudeAndUncertaintyEllipsoid_v1510 () {
      return (choiceID == _HIGHACCURACYELLIPSOIDPOINTWITHALTITUDEANDUNCERTAINTYELLIPSOID_V1510);
   }

   /**
    * Accessor/mutator methods for extElem1
    */
   public Asn1OpenType getExtElem1 () {
      return (choiceID == _EXTELEM1) ? (Asn1OpenType)element : null;
   }
   public void setExtElem1 (Asn1OpenType value) {
      setElement (_EXTELEM1, value);
   }
   public boolean isExtElem1 () {
      return (choiceID == _EXTELEM1);
   }

   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      // extension bit

      Asn1PerDecodeBuffer savedBuffer = null;
      boolean extbit = buffer.decodeBit ("extbit");

      if (!extbit) {
         int idx = (int) buffer.decodeConsWholeNumber (7, "index");
         choiceID = idx + 1;
         buffer.getContext().eventDispatcher.startElement (getElemName(), -1);

         switch (idx) {
            // ellipsoidPoint
            case 0: { 
               Ellipsoid_Point ellipsoidPoint;
               element = ellipsoidPoint = new Ellipsoid_Point();
               ellipsoidPoint.decode (buffer);
               break;
            }

            // ellipsoidPointWithUncertaintyCircle
            case 1: { 
               Ellipsoid_PointWithUncertaintyCircle ellipsoidPointWithUncertaintyCircle;
               element = ellipsoidPointWithUncertaintyCircle = new Ellipsoid_PointWithUncertaintyCircle();
               ellipsoidPointWithUncertaintyCircle.decode (buffer);
               break;
            }

            // ellipsoidPointWithUncertaintyEllipse
            case 2: { 
               EllipsoidPointWithUncertaintyEllipse ellipsoidPointWithUncertaintyEllipse;
               element = ellipsoidPointWithUncertaintyEllipse = new EllipsoidPointWithUncertaintyEllipse();
               ellipsoidPointWithUncertaintyEllipse.decode (buffer);
               break;
            }

            // polygon
            case 3: { 
               Polygon polygon;
               element = polygon = new Polygon();
               polygon.decode (buffer);
               break;
            }

            // ellipsoidPointWithAltitude
            case 4: { 
               EllipsoidPointWithAltitude ellipsoidPointWithAltitude;
               element = ellipsoidPointWithAltitude = new EllipsoidPointWithAltitude();
               ellipsoidPointWithAltitude.decode (buffer);
               break;
            }

            // ellipsoidPointWithAltitudeAndUncertaintyEllipsoid
            case 5: { 
               EllipsoidPointWithAltitudeAndUncertaintyEllipsoid ellipsoidPointWithAltitudeAndUncertaintyEllipsoid;
               element = ellipsoidPointWithAltitudeAndUncertaintyEllipsoid = new EllipsoidPointWithAltitudeAndUncertaintyEllipsoid();
               ellipsoidPointWithAltitudeAndUncertaintyEllipsoid.decode (buffer);
               break;
            }

            // ellipsoidArc
            case 6: { 
               EllipsoidArc ellipsoidArc;
               element = ellipsoidArc = new EllipsoidArc();
               ellipsoidArc.decode (buffer);
               break;
            }

            default:
            throw new Asn1InvalidChoiceOptionException (buffer, idx);
         }
      }
      else {
         int idx = (int) buffer.decodeSmallNonNegWholeNumber ();
         choiceID = idx + 8;
         buffer.getContext().eventDispatcher.startElement (getElemName(), -1);

         buffer.byteAlign();

         Asn1OpenType openType = new Asn1OpenType ();
         openType.decode (buffer);

         savedBuffer = buffer;
         buffer = new Asn1PerDecodeBuffer (openType.value, savedBuffer.isAligned());
         buffer.setEventHandlerList (savedBuffer);

         switch (idx) {
            // highAccuracyEllipsoidPointWithUncertaintyEllipse_v1510
            case 0: { 
               HighAccuracyEllipsoidPointWithUncertaintyEllipse_r15 highAccuracyEllipsoidPointWithUncertaintyEllipse_v1510;
               element = highAccuracyEllipsoidPointWithUncertaintyEllipse_v1510 = new HighAccuracyEllipsoidPointWithUncertaintyEllipse_r15();
               highAccuracyEllipsoidPointWithUncertaintyEllipse_v1510.decode (buffer);
               break;
            }

            // highAccuracyEllipsoidPointWithAltitudeAndUncertaintyEllipsoid_v1510
            case 1: { 
               HighAccuracyEllipsoidPointWithAltitudeAndUncertaintyEllipsoid_r15 highAccuracyEllipsoidPointWithAltitudeAndUncertaintyEllipsoid_v1510;
               element = highAccuracyEllipsoidPointWithAltitudeAndUncertaintyEllipsoid_v1510 = new HighAccuracyEllipsoidPointWithAltitudeAndUncertaintyEllipsoid_r15();
               highAccuracyEllipsoidPointWithAltitudeAndUncertaintyEllipsoid_v1510.decode (buffer);
               break;
            }

            // extElem1
            case 2: { 
               Asn1OpenType extElem1;
               element = extElem1 = new Asn1OpenType();
               extElem1.decode (buffer);
               break;
            }

            default:
               setElement (_EXTELEM1, openType);
         }

      }

      buffer.getContext().eventDispatcher.endElement (getElemName(), -1);

      if (savedBuffer != null) {
         buffer = savedBuffer;
      }
   }

   public void encode (Asn1PerEncodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      // extension bit

      boolean extbit = (choiceID > 7);
      buffer.encodeBit (extbit, "extbit");

      if (!extbit) {

         // Encode choice index value

         buffer.encodeConsWholeNumber (choiceID - 1, 7, "index");

         buffer.getContext().eventDispatcher.startElement("getElemName()", -1);

         switch (choiceID) {
            // ellipsoidPoint
            case _ELLIPSOIDPOINT:
               Ellipsoid_Point ellipsoidPoint = (Ellipsoid_Point) element;
               ellipsoidPoint.encode (buffer);
               break;

            // ellipsoidPointWithUncertaintyCircle
            case _ELLIPSOIDPOINTWITHUNCERTAINTYCIRCLE:
               Ellipsoid_PointWithUncertaintyCircle ellipsoidPointWithUncertaintyCircle = (Ellipsoid_PointWithUncertaintyCircle) element;
               ellipsoidPointWithUncertaintyCircle.encode (buffer);
               break;

            // ellipsoidPointWithUncertaintyEllipse
            case _ELLIPSOIDPOINTWITHUNCERTAINTYELLIPSE:
               EllipsoidPointWithUncertaintyEllipse ellipsoidPointWithUncertaintyEllipse = (EllipsoidPointWithUncertaintyEllipse) element;
               ellipsoidPointWithUncertaintyEllipse.encode (buffer);
               break;

            // polygon
            case _POLYGON:
               Polygon polygon = (Polygon) element;
               polygon.encode (buffer);
               break;

            // ellipsoidPointWithAltitude
            case _ELLIPSOIDPOINTWITHALTITUDE:
               EllipsoidPointWithAltitude ellipsoidPointWithAltitude = (EllipsoidPointWithAltitude) element;
               ellipsoidPointWithAltitude.encode (buffer);
               break;

            // ellipsoidPointWithAltitudeAndUncertaintyEllipsoid
            case _ELLIPSOIDPOINTWITHALTITUDEANDUNCERTAINTYELLIPSOID:
               EllipsoidPointWithAltitudeAndUncertaintyEllipsoid ellipsoidPointWithAltitudeAndUncertaintyEllipsoid = (EllipsoidPointWithAltitudeAndUncertaintyEllipsoid) element;
               ellipsoidPointWithAltitudeAndUncertaintyEllipsoid.encode (buffer);
               break;

            // ellipsoidArc
            case _ELLIPSOIDARC:
               EllipsoidArc ellipsoidArc = (EllipsoidArc) element;
               ellipsoidArc.encode (buffer);
               break;

            default:
            throw new Asn1InvalidChoiceOptionException();
         }
      }
      else {
         // Encode extension choice index value

         buffer.encodeSmallNonNegWholeNumber (choiceID - 8);

         // Encode extension element data value

         buffer.getContext().eventDispatcher.startElement("getElemName()", -1);

         Asn1PerEncodeBuffer savedBuffer = buffer;
         buffer = new Asn1PerEncodeBuffer (buffer.isAligned());
         Asn1OpenType openType;

         switch (choiceID) {
            // highAccuracyEllipsoidPointWithUncertaintyEllipse_v1510
            case _HIGHACCURACYELLIPSOIDPOINTWITHUNCERTAINTYELLIPSE_V1510:
               HighAccuracyEllipsoidPointWithUncertaintyEllipse_r15 highAccuracyEllipsoidPointWithUncertaintyEllipse_v1510 = (HighAccuracyEllipsoidPointWithUncertaintyEllipse_r15) element;
               highAccuracyEllipsoidPointWithUncertaintyEllipse_v1510.encode (buffer);
               openType = new Asn1OpenType 
                  (buffer.getBuffer(), 0, buffer.getMsgByteCnt());
               break;

            // highAccuracyEllipsoidPointWithAltitudeAndUncertaintyEllipsoid_v1510
            case _HIGHACCURACYELLIPSOIDPOINTWITHALTITUDEANDUNCERTAINTYELLIPSOID_V1510:
               HighAccuracyEllipsoidPointWithAltitudeAndUncertaintyEllipsoid_r15 highAccuracyEllipsoidPointWithAltitudeAndUncertaintyEllipsoid_v1510 = (HighAccuracyEllipsoidPointWithAltitudeAndUncertaintyEllipsoid_r15) element;
               highAccuracyEllipsoidPointWithAltitudeAndUncertaintyEllipsoid_v1510.encode (buffer);
               openType = new Asn1OpenType 
                  (buffer.getBuffer(), 0, buffer.getMsgByteCnt());
               break;

            default:
               openType = (Asn1OpenType)getElement();
         }

         buffer = savedBuffer;
         if (openType != null) {
            buffer.byteAlign();
            openType.encode (buffer);
         }
      }

      buffer.getContext().eventDispatcher.endElement("getElemName()", -1);
   }

}

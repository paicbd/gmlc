/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.5.0, Date: 07-May-2021.
 */
package org.mobicents.gmlc.slee.supl.Ver2_ULP_Components;

import com.objsys.asn1j.runtime.*;

public class MeasResultEUTRA_cgi_Info extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_Ver2_ULP_ComponentsRtkey._rtkey);
      Asn1Type._setLicLocation(_Ver2_ULP_ComponentsRtkey._licLocation);
   }

   public String getAsn1TypeName()  {
      return "SEQUENCE";
   }

   protected CellGlobalIdEUTRA cellGlobalId;
   protected TrackingAreaCode trackingAreaCode;

   public MeasResultEUTRA_cgi_Info () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public MeasResultEUTRA_cgi_Info (
      CellGlobalIdEUTRA cellGlobalId_,
      TrackingAreaCode trackingAreaCode_
   ) throws Asn1Exception {
      super();
      setCellGlobalId (cellGlobalId_);
      setTrackingAreaCode (trackingAreaCode_);
   }

   public void init () {
      cellGlobalId = null;
      trackingAreaCode = null;
   }

   public boolean equals( Object obj ) {
      if ( this == obj ) return true;
      if ( !(obj instanceof MeasResultEUTRA_cgi_Info) ) return false;

      MeasResultEUTRA_cgi_Info rhs = (MeasResultEUTRA_cgi_Info) obj;

      if (cellGlobalId == null) {
         if (rhs.cellGlobalId != null) return false;
      }
      else {
         if (!cellGlobalId.equals(rhs.cellGlobalId)) {
            return false;
         }
      }

      if (trackingAreaCode == null) {
         if (rhs.trackingAreaCode != null) return false;
      }
      else {
         if (!trackingAreaCode.equals(rhs.trackingAreaCode)) {
            return false;
         }
      }

      return true;
   }

   public int hashCode() {
      int __code = 1;

      if (cellGlobalId != null) __code = 31*__code + cellGlobalId.hashCode();
      if (trackingAreaCode != null) __code = 31*__code + trackingAreaCode.hashCode();

      return __code;
   }

   /**
    * Accessor/mutator methods for CellGlobalId
    */
   public CellGlobalIdEUTRA getCellGlobalId () {
      return cellGlobalId;
   }

   public void setCellGlobalId (CellGlobalIdEUTRA value) {
      this.cellGlobalId = value;
   }

   /**
    * Accessor/mutator methods for TrackingAreaCode
    */
   public TrackingAreaCode getTrackingAreaCode () {
      return trackingAreaCode;
   }

   public void setTrackingAreaCode (TrackingAreaCode value) 
      throws Asn1Exception
   {
      if (!(value.getLength() == 16)) {
         throw new Asn1ConsVioException ("value.getLength()", value.getLength());
      }

      this.trackingAreaCode = value;
   }

   public int getElementCount() { return 2; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return cellGlobalId;
         case 1: return trackingAreaCode;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "cellGlobalId";
         case 1: return "trackingAreaCode";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // decode cellGlobalId

      buffer.getContext().eventDispatcher.startElement("cellGlobalId", -1);

      cellGlobalId = new CellGlobalIdEUTRA();
      cellGlobalId.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("cellGlobalId", -1);

      // decode trackingAreaCode

      buffer.getContext().eventDispatcher.startElement("trackingAreaCode", -1);

      trackingAreaCode = new TrackingAreaCode();
      trackingAreaCode.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("trackingAreaCode", -1);

   }

   public void encode (Asn1PerEncodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      // encode cellGlobalId

      if (cellGlobalId != null) {
         buffer.getContext().eventDispatcher.startElement("cellGlobalId", -1);

         cellGlobalId.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("cellGlobalId", -1);
      }
      else throw new Asn1MissingRequiredException ("cellGlobalId");

      // encode trackingAreaCode

      if (trackingAreaCode != null) {
         buffer.getContext().eventDispatcher.startElement("trackingAreaCode", -1);

         trackingAreaCode.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("trackingAreaCode", -1);
      }
      else throw new Asn1MissingRequiredException ("trackingAreaCode");

   }

}

/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.5.0, Date: 07-May-2021.
 */
package org.mobicents.gmlc.slee.supl.Ver2_ULP_Components;

import com.objsys.asn1j.runtime.*;

public class UTRAN_GPSReferenceTimeResult_set_GPSTimingOfCell extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_Ver2_ULP_ComponentsRtkey._rtkey);
      Asn1Type._setLicLocation(_Ver2_ULP_ComponentsRtkey._licLocation);
   }

   public String getAsn1TypeName()  {
      return "SEQUENCE";
   }

   protected Asn1Integer ms_part;
   protected Asn1Integer ls_part;

   public UTRAN_GPSReferenceTimeResult_set_GPSTimingOfCell () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public UTRAN_GPSReferenceTimeResult_set_GPSTimingOfCell (
      Asn1Integer ms_part_,
      Asn1Integer ls_part_
   ) throws Asn1Exception {
      super();
      setMs_part (ms_part_);
      setLs_part (ls_part_);
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public UTRAN_GPSReferenceTimeResult_set_GPSTimingOfCell (long ms_part_,
      long ls_part_
   ) throws Asn1Exception {
      super();
      setMs_part (ms_part_);
      setLs_part (ls_part_);
   }

   public void init () {
      ms_part = null;
      ls_part = null;
   }

   public boolean equals( Object obj ) {
      if ( this == obj ) return true;
      if ( !(obj instanceof UTRAN_GPSReferenceTimeResult_set_GPSTimingOfCell) ) return false;

      UTRAN_GPSReferenceTimeResult_set_GPSTimingOfCell rhs = (UTRAN_GPSReferenceTimeResult_set_GPSTimingOfCell) obj;

      if (ms_part == null) {
         if (rhs.ms_part != null) return false;
      }
      else {
         if (!ms_part.equals(rhs.ms_part)) {
            return false;
         }
      }

      if (ls_part == null) {
         if (rhs.ls_part != null) return false;
      }
      else {
         if (!ls_part.equals(rhs.ls_part)) {
            return false;
         }
      }

      return true;
   }

   public int hashCode() {
      int __code = 1;

      if (ms_part != null) __code = 31*__code + ms_part.hashCode();
      if (ls_part != null) __code = 31*__code + ls_part.hashCode();

      return __code;
   }

   /**
    * Accessor/mutator methods for Ms_part
    */
   public Asn1Integer getMs_part () {
      return ms_part;
   }

   public void setMs_part (Asn1Integer value) 
      throws Asn1Exception
   {
      if (!((value.value >= 0 && value.value <= 16383))) {
         throw new Asn1ConsVioException ("value.value", value.value);
      }

      this.ms_part = value;
   }

   public void setMs_part (long value) 
      throws Asn1Exception
   {
      setMs_part (new Asn1Integer(value));
   }

   /**
    * Accessor/mutator methods for Ls_part
    */
   public Asn1Integer getLs_part () {
      return ls_part;
   }

   public void setLs_part (Asn1Integer value) 
      throws Asn1Exception
   {
      this.ls_part = value;
   }

   public void setLs_part (long value) 
      throws Asn1Exception
   {
      setLs_part (new Asn1Integer(value));
   }

   public int getElementCount() { return 2; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return ms_part;
         case 1: return ls_part;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "ms-part";
         case 1: return "ls-part";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // decode ms_part

      buffer.getContext().eventDispatcher.startElement("ms_part", -1);

      ms_part = new Asn1Integer();
      ms_part.decode (buffer, 0, 16383);
      buffer.getContext().eventDispatcher.endElement("ms_part", -1);

      // decode ls_part

      buffer.getContext().eventDispatcher.startElement("ls_part", -1);

      ls_part = new Asn1Integer();
      ls_part.decode (buffer, 0, 4294967295L);
      buffer.getContext().eventDispatcher.endElement("ls_part", -1);

   }

   public void encode (Asn1PerEncodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      // encode ms_part

      if (ms_part != null) {
         buffer.getContext().eventDispatcher.startElement("ms_part", -1);

         ms_part.encode (buffer, 0, 16383);

         buffer.getContext().eventDispatcher.endElement("ms_part", -1);
      }
      else throw new Asn1MissingRequiredException ("ms_part");

      // encode ls_part

      if (ls_part != null) {
         buffer.getContext().eventDispatcher.startElement("ls_part", -1);

         ls_part.encode (buffer, 0, 4294967295L);

         buffer.getContext().eventDispatcher.endElement("ls_part", -1);
      }
      else throw new Asn1MissingRequiredException ("ls_part");

   }

}

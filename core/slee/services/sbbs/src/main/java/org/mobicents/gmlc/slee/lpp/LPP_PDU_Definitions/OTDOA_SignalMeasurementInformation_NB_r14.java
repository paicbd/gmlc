/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.5.0, Date: 07-May-2021.
 */
package org.mobicents.gmlc.slee.lpp.LPP_PDU_Definitions;

import com.objsys.asn1j.runtime.*;

public class OTDOA_SignalMeasurementInformation_NB_r14 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_LPP_PDU_DefinitionsRtkey._rtkey);
      Asn1Type._setLicLocation(_LPP_PDU_DefinitionsRtkey._licLocation);
   }

   public String getAsn1TypeName()  {
      return "OTDOA-SignalMeasurementInformation-NB-r14";
   }

   protected Asn1BitString systemFrameNumber_r14;
   protected Asn1Integer physCellIdRef_r14;
   protected ECGI cellGlobalIdRef_r14;  // optional
   protected ARFCN_ValueEUTRA_r14 earfcnRef_r14;  // optional
   protected OTDOA_MeasQuality referenceQuality_r14;  // optional
   protected NeighbourMeasurementList_NB_r14 neighbourMeasurementList_r14;
   protected Asn1Integer tpIdRef_r14;  // optional
   protected Asn1Integer prsIdRef_r14;  // optional
   protected AdditionalPathList_r14 additionalPathsRef_r14;  // optional
   protected Asn1Integer nprsIdRef_r14;  // optional
   protected CarrierFreqOffsetNB_r14 carrierFreqOffsetNB_Ref_r14 = null;  // optional
   protected Asn1BitString hyperSFN_r14;  // optional
   protected Asn1OpenExt extElem1;

   public OTDOA_SignalMeasurementInformation_NB_r14 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public OTDOA_SignalMeasurementInformation_NB_r14 (
      Asn1BitString systemFrameNumber_r14_,
      Asn1Integer physCellIdRef_r14_,
      ECGI cellGlobalIdRef_r14_,
      ARFCN_ValueEUTRA_r14 earfcnRef_r14_,
      OTDOA_MeasQuality referenceQuality_r14_,
      NeighbourMeasurementList_NB_r14 neighbourMeasurementList_r14_,
      Asn1Integer tpIdRef_r14_,
      Asn1Integer prsIdRef_r14_,
      AdditionalPathList_r14 additionalPathsRef_r14_,
      Asn1Integer nprsIdRef_r14_,
      CarrierFreqOffsetNB_r14 carrierFreqOffsetNB_Ref_r14_,
      Asn1BitString hyperSFN_r14_
   ) throws Asn1Exception {
      super();
      setSystemFrameNumber_r14 (systemFrameNumber_r14_);
      setPhysCellIdRef_r14 (physCellIdRef_r14_);
      setCellGlobalIdRef_r14 (cellGlobalIdRef_r14_);
      setEarfcnRef_r14 (earfcnRef_r14_);
      setReferenceQuality_r14 (referenceQuality_r14_);
      setNeighbourMeasurementList_r14 (neighbourMeasurementList_r14_);
      setTpIdRef_r14 (tpIdRef_r14_);
      setPrsIdRef_r14 (prsIdRef_r14_);
      setAdditionalPathsRef_r14 (additionalPathsRef_r14_);
      setNprsIdRef_r14 (nprsIdRef_r14_);
      setCarrierFreqOffsetNB_Ref_r14 (carrierFreqOffsetNB_Ref_r14_);
      setHyperSFN_r14 (hyperSFN_r14_);
   }

   /**
    * This constructor is for required elements only.  It sets 
    * all elements to references to the given objects
    */
   public OTDOA_SignalMeasurementInformation_NB_r14 (
      Asn1BitString systemFrameNumber_r14_,
      Asn1Integer physCellIdRef_r14_,
      NeighbourMeasurementList_NB_r14 neighbourMeasurementList_r14_
   ) throws Asn1Exception {
      super();
      setSystemFrameNumber_r14 (systemFrameNumber_r14_);
      setPhysCellIdRef_r14 (physCellIdRef_r14_);
      setNeighbourMeasurementList_r14 (neighbourMeasurementList_r14_);
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public OTDOA_SignalMeasurementInformation_NB_r14 (Asn1BitString systemFrameNumber_r14_,
      long physCellIdRef_r14_,
      ECGI cellGlobalIdRef_r14_,
      long earfcnRef_r14_,
      OTDOA_MeasQuality referenceQuality_r14_,
      NeighbourMeasurementList_NB_r14 neighbourMeasurementList_r14_,
      long tpIdRef_r14_,
      long prsIdRef_r14_,
      AdditionalPathList_r14 additionalPathsRef_r14_,
      long nprsIdRef_r14_,
      CarrierFreqOffsetNB_r14 carrierFreqOffsetNB_Ref_r14_,
      Asn1BitString hyperSFN_r14_
   ) throws Asn1Exception {
      super();
      setSystemFrameNumber_r14 (systemFrameNumber_r14_);
      setPhysCellIdRef_r14 (physCellIdRef_r14_);
      setCellGlobalIdRef_r14 (cellGlobalIdRef_r14_);
      setEarfcnRef_r14 (earfcnRef_r14_);
      setReferenceQuality_r14 (referenceQuality_r14_);
      setNeighbourMeasurementList_r14 (neighbourMeasurementList_r14_);
      setTpIdRef_r14 (tpIdRef_r14_);
      setPrsIdRef_r14 (prsIdRef_r14_);
      setAdditionalPathsRef_r14 (additionalPathsRef_r14_);
      setNprsIdRef_r14 (nprsIdRef_r14_);
      setCarrierFreqOffsetNB_Ref_r14 (carrierFreqOffsetNB_Ref_r14_);
      setHyperSFN_r14 (hyperSFN_r14_);
   }

   /**
    * This constructor is for required elements only.  It allows 
    * primitive data to be passed for all primitive elements.  
    * It will create new object wrappers for the primitive data 
    * and set other elements to references to the given objects. 
    */
   public OTDOA_SignalMeasurementInformation_NB_r14 (
      Asn1BitString systemFrameNumber_r14_,
      long physCellIdRef_r14_,
      NeighbourMeasurementList_NB_r14 neighbourMeasurementList_r14_
   ) throws Asn1Exception {
      super();
      setSystemFrameNumber_r14 (systemFrameNumber_r14_);
      setPhysCellIdRef_r14 (physCellIdRef_r14_);
      setNeighbourMeasurementList_r14 (neighbourMeasurementList_r14_);
   }

   public void init () {
      systemFrameNumber_r14 = null;
      physCellIdRef_r14 = null;
      cellGlobalIdRef_r14 = null;
      earfcnRef_r14 = null;
      referenceQuality_r14 = null;
      neighbourMeasurementList_r14 = null;
      tpIdRef_r14 = null;
      prsIdRef_r14 = null;
      additionalPathsRef_r14 = null;
      nprsIdRef_r14 = null;
      carrierFreqOffsetNB_Ref_r14 = null;
      hyperSFN_r14 = null;
      extElem1 = null;
   }

   public boolean equals( Object obj ) {
      if ( this == obj ) return true;
      if ( !(obj instanceof OTDOA_SignalMeasurementInformation_NB_r14) ) return false;

      OTDOA_SignalMeasurementInformation_NB_r14 rhs = (OTDOA_SignalMeasurementInformation_NB_r14) obj;

      if (systemFrameNumber_r14 == null) {
         if (rhs.systemFrameNumber_r14 != null) return false;
      }
      else {
         if (!systemFrameNumber_r14.equals(rhs.systemFrameNumber_r14)) {
            return false;
         }
      }

      if (physCellIdRef_r14 == null) {
         if (rhs.physCellIdRef_r14 != null) return false;
      }
      else {
         if (!physCellIdRef_r14.equals(rhs.physCellIdRef_r14)) {
            return false;
         }
      }

      if (cellGlobalIdRef_r14 == null) {
         if (rhs.cellGlobalIdRef_r14 != null) return false;
      }
      else {
         if (!cellGlobalIdRef_r14.equals(rhs.cellGlobalIdRef_r14)) {
            return false;
         }
      }

      if (earfcnRef_r14 == null) {
         if (rhs.earfcnRef_r14 != null) return false;
      }
      else {
         if (!earfcnRef_r14.equals(rhs.earfcnRef_r14)) {
            return false;
         }
      }

      if (referenceQuality_r14 == null) {
         if (rhs.referenceQuality_r14 != null) return false;
      }
      else {
         if (!referenceQuality_r14.equals(rhs.referenceQuality_r14)) {
            return false;
         }
      }

      if (neighbourMeasurementList_r14 == null) {
         if (rhs.neighbourMeasurementList_r14 != null) return false;
      }
      else {
         if (!neighbourMeasurementList_r14.equals(rhs.neighbourMeasurementList_r14)) {
            return false;
         }
      }

      if (tpIdRef_r14 == null) {
         if (rhs.tpIdRef_r14 != null) return false;
      }
      else {
         if (!tpIdRef_r14.equals(rhs.tpIdRef_r14)) {
            return false;
         }
      }

      if (prsIdRef_r14 == null) {
         if (rhs.prsIdRef_r14 != null) return false;
      }
      else {
         if (!prsIdRef_r14.equals(rhs.prsIdRef_r14)) {
            return false;
         }
      }

      if (additionalPathsRef_r14 == null) {
         if (rhs.additionalPathsRef_r14 != null) return false;
      }
      else {
         if (!additionalPathsRef_r14.equals(rhs.additionalPathsRef_r14)) {
            return false;
         }
      }

      if (nprsIdRef_r14 == null) {
         if (rhs.nprsIdRef_r14 != null) return false;
      }
      else {
         if (!nprsIdRef_r14.equals(rhs.nprsIdRef_r14)) {
            return false;
         }
      }

      if (carrierFreqOffsetNB_Ref_r14 == null) {
         if (rhs.carrierFreqOffsetNB_Ref_r14 != null) return false;
      }
      else {
         if (!carrierFreqOffsetNB_Ref_r14.equals(rhs.carrierFreqOffsetNB_Ref_r14)) {
            return false;
         }
      }

      if (hyperSFN_r14 == null) {
         if (rhs.hyperSFN_r14 != null) return false;
      }
      else {
         if (!hyperSFN_r14.equals(rhs.hyperSFN_r14)) {
            return false;
         }
      }

      if (extElem1 == null) {
         if (rhs.extElem1 != null) return false;
      }
      else {
         if (!extElem1.equals(rhs.extElem1)) {
            return false;
         }
      }

      return true;
   }

   public int hashCode() {
      int __code = 1;

      if (systemFrameNumber_r14 != null) __code = 31*__code + systemFrameNumber_r14.hashCode();
      if (physCellIdRef_r14 != null) __code = 31*__code + physCellIdRef_r14.hashCode();
      if (cellGlobalIdRef_r14 != null) __code = 31*__code + cellGlobalIdRef_r14.hashCode();
      if (earfcnRef_r14 != null) __code = 31*__code + earfcnRef_r14.hashCode();
      if (referenceQuality_r14 != null) __code = 31*__code + referenceQuality_r14.hashCode();
      if (neighbourMeasurementList_r14 != null) __code = 31*__code + neighbourMeasurementList_r14.hashCode();
      if (tpIdRef_r14 != null) __code = 31*__code + tpIdRef_r14.hashCode();
      if (prsIdRef_r14 != null) __code = 31*__code + prsIdRef_r14.hashCode();
      if (additionalPathsRef_r14 != null) __code = 31*__code + additionalPathsRef_r14.hashCode();
      if (nprsIdRef_r14 != null) __code = 31*__code + nprsIdRef_r14.hashCode();
      if (carrierFreqOffsetNB_Ref_r14 != null) __code = 31*__code + carrierFreqOffsetNB_Ref_r14.hashCode();
      if (hyperSFN_r14 != null) __code = 31*__code + hyperSFN_r14.hashCode();
      if (extElem1 != null) __code = 31*__code + extElem1.hashCode();

      return __code;
   }

   /**
    * Accessor/mutator methods for SystemFrameNumber_r14
    */
   public Asn1BitString getSystemFrameNumber_r14 () {
      return systemFrameNumber_r14;
   }

   public void setSystemFrameNumber_r14 (Asn1BitString value) 
      throws Asn1Exception
   {
      if (!(value.getLength() == 10)) {
         throw new Asn1ConsVioException ("value.getLength()", value.getLength());
      }

      this.systemFrameNumber_r14 = value;
   }

   /**
    * Accessor/mutator methods for PhysCellIdRef_r14
    */
   public Asn1Integer getPhysCellIdRef_r14 () {
      return physCellIdRef_r14;
   }

   public void setPhysCellIdRef_r14 (Asn1Integer value) 
      throws Asn1Exception
   {
      if (!((value.value >= 0 && value.value <= 503))) {
         throw new Asn1ConsVioException ("value.value", value.value);
      }

      this.physCellIdRef_r14 = value;
   }

   public void setPhysCellIdRef_r14 (long value) 
      throws Asn1Exception
   {
      setPhysCellIdRef_r14 (new Asn1Integer(value));
   }

   /**
    * Accessor/mutator methods for CellGlobalIdRef_r14
    */
   public ECGI getCellGlobalIdRef_r14 () {
      return cellGlobalIdRef_r14;
   }

   public void setCellGlobalIdRef_r14 (ECGI value) {
      this.cellGlobalIdRef_r14 = value;
   }

   public boolean hasCellGlobalIdRef_r14 () {
      return (cellGlobalIdRef_r14 != null);
   }

   /**
    * Accessor/mutator methods for EarfcnRef_r14
    */
   public ARFCN_ValueEUTRA_r14 getEarfcnRef_r14 () {
      return earfcnRef_r14;
   }

   public void setEarfcnRef_r14 (ARFCN_ValueEUTRA_r14 value) 
      throws Asn1Exception
   {
      if (!((value.value >= 0 && value.value <= 262143))) {
         throw new Asn1ConsVioException ("value.value", value.value);
      }

      this.earfcnRef_r14 = value;
   }

   public void setEarfcnRef_r14 (long value) 
      throws Asn1Exception
   {
      setEarfcnRef_r14 (new ARFCN_ValueEUTRA_r14(value));
   }
   public boolean hasEarfcnRef_r14 () {
      return (earfcnRef_r14 != null);
   }

   /**
    * Accessor/mutator methods for ReferenceQuality_r14
    */
   public OTDOA_MeasQuality getReferenceQuality_r14 () {
      return referenceQuality_r14;
   }

   public void setReferenceQuality_r14 (OTDOA_MeasQuality value) {
      this.referenceQuality_r14 = value;
   }

   public boolean hasReferenceQuality_r14 () {
      return (referenceQuality_r14 != null);
   }

   /**
    * Accessor/mutator methods for NeighbourMeasurementList_r14
    */
   public NeighbourMeasurementList_NB_r14 getNeighbourMeasurementList_r14 () {
      return neighbourMeasurementList_r14;
   }

   public void setNeighbourMeasurementList_r14 (NeighbourMeasurementList_NB_r14 value) 
      throws Asn1Exception
   {
      if (!((value.getElements().length >= 1 && value.getElements().length <= 24))) {
         throw new Asn1ConsVioException ("value.getElements().length", value.getElements().length);
      }

      this.neighbourMeasurementList_r14 = value;
   }

   /**
    * Accessor/mutator methods for TpIdRef_r14
    */
   public Asn1Integer getTpIdRef_r14 () {
      return tpIdRef_r14;
   }

   public void setTpIdRef_r14 (Asn1Integer value) 
      throws Asn1Exception
   {
      if (!((value.value >= 0 && value.value <= 4095))) {
         throw new Asn1ConsVioException ("value.value", value.value);
      }

      this.tpIdRef_r14 = value;
   }

   public void setTpIdRef_r14 (long value) 
      throws Asn1Exception
   {
      setTpIdRef_r14 (new Asn1Integer(value));
   }
   public boolean hasTpIdRef_r14 () {
      return (tpIdRef_r14 != null);
   }

   /**
    * Accessor/mutator methods for PrsIdRef_r14
    */
   public Asn1Integer getPrsIdRef_r14 () {
      return prsIdRef_r14;
   }

   public void setPrsIdRef_r14 (Asn1Integer value) 
      throws Asn1Exception
   {
      if (!((value.value >= 0 && value.value <= 4095))) {
         throw new Asn1ConsVioException ("value.value", value.value);
      }

      this.prsIdRef_r14 = value;
   }

   public void setPrsIdRef_r14 (long value) 
      throws Asn1Exception
   {
      setPrsIdRef_r14 (new Asn1Integer(value));
   }
   public boolean hasPrsIdRef_r14 () {
      return (prsIdRef_r14 != null);
   }

   /**
    * Accessor/mutator methods for AdditionalPathsRef_r14
    */
   public AdditionalPathList_r14 getAdditionalPathsRef_r14 () {
      return additionalPathsRef_r14;
   }

   public void setAdditionalPathsRef_r14 (AdditionalPathList_r14 value) 
      throws Asn1Exception
   {
      if (!((value.getElements().length >= 1 && value.getElements().length <= 2))) {
         throw new Asn1ConsVioException ("value.getElements().length", value.getElements().length);
      }

      this.additionalPathsRef_r14 = value;
   }

   public boolean hasAdditionalPathsRef_r14 () {
      return (additionalPathsRef_r14 != null);
   }

   /**
    * Accessor/mutator methods for NprsIdRef_r14
    */
   public Asn1Integer getNprsIdRef_r14 () {
      return nprsIdRef_r14;
   }

   public void setNprsIdRef_r14 (Asn1Integer value) 
      throws Asn1Exception
   {
      if (!((value.value >= 0 && value.value <= 4095))) {
         throw new Asn1ConsVioException ("value.value", value.value);
      }

      this.nprsIdRef_r14 = value;
   }

   public void setNprsIdRef_r14 (long value) 
      throws Asn1Exception
   {
      setNprsIdRef_r14 (new Asn1Integer(value));
   }
   public boolean hasNprsIdRef_r14 () {
      return (nprsIdRef_r14 != null);
   }

   /**
    * Accessor/mutator methods for CarrierFreqOffsetNB_Ref_r14
    */
   public CarrierFreqOffsetNB_r14 getCarrierFreqOffsetNB_Ref_r14 () {
      return carrierFreqOffsetNB_Ref_r14;
   }

   public void setCarrierFreqOffsetNB_Ref_r14 (CarrierFreqOffsetNB_r14 value) {
      this.carrierFreqOffsetNB_Ref_r14 = value;
   }

   public boolean hasCarrierFreqOffsetNB_Ref_r14 () {
      return (carrierFreqOffsetNB_Ref_r14 != null);
   }

   /**
    * Accessor/mutator methods for HyperSFN_r14
    */
   public Asn1BitString getHyperSFN_r14 () {
      return hyperSFN_r14;
   }

   public void setHyperSFN_r14 (Asn1BitString value) 
      throws Asn1Exception
   {
      if (!(value.getLength() == 10)) {
         throw new Asn1ConsVioException ("value.getLength()", value.getLength());
      }

      this.hyperSFN_r14 = value;
   }

   public boolean hasHyperSFN_r14 () {
      return (hyperSFN_r14 != null);
   }

   /**
    * Accessor/mutator methods for ExtElem1
    */
   public Asn1OpenExt getExtElem1 () {
      return extElem1;
   }

   public void setExtElem1 (Asn1OpenExt value) {
      this.extElem1 = value;
   }

   public int getElementCount() { return 13; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return systemFrameNumber_r14;
         case 1: return physCellIdRef_r14;
         case 2: return cellGlobalIdRef_r14;
         case 3: return earfcnRef_r14;
         case 4: return referenceQuality_r14;
         case 5: return neighbourMeasurementList_r14;
         case 6: return tpIdRef_r14;
         case 7: return prsIdRef_r14;
         case 8: return additionalPathsRef_r14;
         case 9: return nprsIdRef_r14;
         case 10: return carrierFreqOffsetNB_Ref_r14;
         case 11: return hyperSFN_r14;
         case 12: return extElem1;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "systemFrameNumber-r14";
         case 1: return "physCellIdRef-r14";
         case 2: return "cellGlobalIdRef-r14";
         case 3: return "earfcnRef-r14";
         case 4: return "referenceQuality-r14";
         case 5: return "neighbourMeasurementList-r14";
         case 6: return "tpIdRef-r14";
         case 7: return "prsIdRef-r14";
         case 8: return "additionalPathsRef-r14";
         case 9: return "nprsIdRef-r14";
         case 10: return "carrierFreqOffsetNB-Ref-r14";
         case 11: return "hyperSFN-r14";
         case 12: return null;
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // extension bit

      boolean extbit = buffer.decodeBit ("extbit");

      // optional bits

      boolean cellGlobalIdRef_r14Present = buffer.decodeBit ("cellGlobalIdRef_r14Present");
      boolean earfcnRef_r14Present = buffer.decodeBit ("earfcnRef_r14Present");
      boolean referenceQuality_r14Present = buffer.decodeBit ("referenceQuality_r14Present");
      boolean tpIdRef_r14Present = buffer.decodeBit ("tpIdRef_r14Present");
      boolean prsIdRef_r14Present = buffer.decodeBit ("prsIdRef_r14Present");
      boolean additionalPathsRef_r14Present = buffer.decodeBit ("additionalPathsRef_r14Present");
      boolean nprsIdRef_r14Present = buffer.decodeBit ("nprsIdRef_r14Present");
      boolean carrierFreqOffsetNB_Ref_r14Present = buffer.decodeBit ("carrierFreqOffsetNB_Ref_r14Present");
      boolean hyperSFN_r14Present = buffer.decodeBit ("hyperSFN_r14Present");

      // decode systemFrameNumber_r14

      buffer.getContext().eventDispatcher.startElement("systemFrameNumber_r14", -1);

      systemFrameNumber_r14 = new Asn1BitString();
      systemFrameNumber_r14.decode (buffer, 10, 10);
      buffer.getContext().eventDispatcher.endElement("systemFrameNumber_r14", -1);

      // decode physCellIdRef_r14

      buffer.getContext().eventDispatcher.startElement("physCellIdRef_r14", -1);

      physCellIdRef_r14 = new Asn1Integer();
      physCellIdRef_r14.decode (buffer, 0, 503);
      buffer.getContext().eventDispatcher.endElement("physCellIdRef_r14", -1);

      // decode cellGlobalIdRef_r14

      if (cellGlobalIdRef_r14Present) {
         buffer.getContext().eventDispatcher.startElement("cellGlobalIdRef_r14", -1);

         cellGlobalIdRef_r14 = new ECGI();
         cellGlobalIdRef_r14.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("cellGlobalIdRef_r14", -1);
      }
      else {
         cellGlobalIdRef_r14 = null;
      }

      // decode earfcnRef_r14

      if (earfcnRef_r14Present) {
         buffer.getContext().eventDispatcher.startElement("earfcnRef_r14", -1);

         earfcnRef_r14 = new ARFCN_ValueEUTRA_r14();
         earfcnRef_r14.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("earfcnRef_r14", -1);
      }
      else {
         earfcnRef_r14 = null;
      }

      // decode referenceQuality_r14

      if (referenceQuality_r14Present) {
         buffer.getContext().eventDispatcher.startElement("referenceQuality_r14", -1);

         referenceQuality_r14 = new OTDOA_MeasQuality();
         referenceQuality_r14.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("referenceQuality_r14", -1);
      }
      else {
         referenceQuality_r14 = null;
      }

      // decode neighbourMeasurementList_r14

      buffer.getContext().eventDispatcher.startElement("neighbourMeasurementList_r14", -1);

      neighbourMeasurementList_r14 = new NeighbourMeasurementList_NB_r14();
      neighbourMeasurementList_r14.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("neighbourMeasurementList_r14", -1);

      // decode tpIdRef_r14

      if (tpIdRef_r14Present) {
         buffer.getContext().eventDispatcher.startElement("tpIdRef_r14", -1);

         tpIdRef_r14 = new Asn1Integer();
         tpIdRef_r14.decode (buffer, 0, 4095);
         buffer.getContext().eventDispatcher.endElement("tpIdRef_r14", -1);
      }
      else {
         tpIdRef_r14 = null;
      }

      // decode prsIdRef_r14

      if (prsIdRef_r14Present) {
         buffer.getContext().eventDispatcher.startElement("prsIdRef_r14", -1);

         prsIdRef_r14 = new Asn1Integer();
         prsIdRef_r14.decode (buffer, 0, 4095);
         buffer.getContext().eventDispatcher.endElement("prsIdRef_r14", -1);
      }
      else {
         prsIdRef_r14 = null;
      }

      // decode additionalPathsRef_r14

      if (additionalPathsRef_r14Present) {
         buffer.getContext().eventDispatcher.startElement("additionalPathsRef_r14", -1);

         additionalPathsRef_r14 = new AdditionalPathList_r14();
         additionalPathsRef_r14.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("additionalPathsRef_r14", -1);
      }
      else {
         additionalPathsRef_r14 = null;
      }

      // decode nprsIdRef_r14

      if (nprsIdRef_r14Present) {
         buffer.getContext().eventDispatcher.startElement("nprsIdRef_r14", -1);

         nprsIdRef_r14 = new Asn1Integer();
         nprsIdRef_r14.decode (buffer, 0, 4095);
         buffer.getContext().eventDispatcher.endElement("nprsIdRef_r14", -1);
      }
      else {
         nprsIdRef_r14 = null;
      }

      // decode carrierFreqOffsetNB_Ref_r14

      if (carrierFreqOffsetNB_Ref_r14Present) {
         buffer.getContext().eventDispatcher.startElement("carrierFreqOffsetNB_Ref_r14", -1);

         int tval = CarrierFreqOffsetNB_r14.decodeEnumValue (buffer);
         carrierFreqOffsetNB_Ref_r14 = CarrierFreqOffsetNB_r14.valueOf (tval);
         buffer.getContext().eventDispatcher.endElement("carrierFreqOffsetNB_Ref_r14", -1);
      }
      else {
         carrierFreqOffsetNB_Ref_r14 = null;
      }

      // decode hyperSFN_r14

      if (hyperSFN_r14Present) {
         buffer.getContext().eventDispatcher.startElement("hyperSFN_r14", -1);

         hyperSFN_r14 = new Asn1BitString();
         hyperSFN_r14.decode (buffer, 10, 10);
         buffer.getContext().eventDispatcher.endElement("hyperSFN_r14", -1);
      }
      else {
         hyperSFN_r14 = null;
      }

      if (extbit) {

         int bitcnt = buffer.decodeSmallLength(), i = 0;
         long bitidx = buffer.getBitOffset() + bitcnt;
         boolean[] bitmap = new boolean [bitcnt];

         while (i < bitcnt) {
            bitmap[i++] = buffer.decodeBit ("unknown");
         }

         i = 0;

         // decode unknown extension elements

         if (i < bitcnt) {
            Asn1OpenType openType = null;
            extElem1 = new Asn1OpenExt();
            int j = 0;
            while (i < bitcnt) {
               if (bitmap[i]) {
                  buffer.getContext().eventDispatcher.startElement("...", -1);

                  openType = extElem1.decodeOpenType (buffer, true, j++);
               }
               else {
                  extElem1.setOpenType (null, j++);
               }
               i++;
            }
         }
         buffer.byteAlign ();

      }

   }

   public void encode (Asn1PerEncodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      // extension bit

      boolean extbit = (((extElem1 != null) && (!extElem1.value.isEmpty()))
      );

      buffer.encodeBit (extbit, "extbit");

      // encode optional elements bit mask

      buffer.encodeBit ((cellGlobalIdRef_r14 != null), null);
      buffer.encodeBit ((earfcnRef_r14 != null), null);
      buffer.encodeBit ((referenceQuality_r14 != null), null);
      buffer.encodeBit ((tpIdRef_r14 != null), null);
      buffer.encodeBit ((prsIdRef_r14 != null), null);
      buffer.encodeBit ((additionalPathsRef_r14 != null), null);
      buffer.encodeBit ((nprsIdRef_r14 != null), null);
      buffer.encodeBit ((carrierFreqOffsetNB_Ref_r14 != null), null);
      buffer.encodeBit ((hyperSFN_r14 != null), null);

      // encode systemFrameNumber_r14

      if (systemFrameNumber_r14 != null) {
         buffer.getContext().eventDispatcher.startElement("systemFrameNumber_r14", -1);

         systemFrameNumber_r14.encode (buffer, 10, 10);

         buffer.getContext().eventDispatcher.endElement("systemFrameNumber_r14", -1);
      }
      else throw new Asn1MissingRequiredException ("systemFrameNumber_r14");

      // encode physCellIdRef_r14

      if (physCellIdRef_r14 != null) {
         buffer.getContext().eventDispatcher.startElement("physCellIdRef_r14", -1);

         physCellIdRef_r14.encode (buffer, 0, 503);

         buffer.getContext().eventDispatcher.endElement("physCellIdRef_r14", -1);
      }
      else throw new Asn1MissingRequiredException ("physCellIdRef_r14");

      // encode cellGlobalIdRef_r14

      if (cellGlobalIdRef_r14 != null) {
         buffer.getContext().eventDispatcher.startElement("cellGlobalIdRef_r14", -1);

         cellGlobalIdRef_r14.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("cellGlobalIdRef_r14", -1);
      }

      // encode earfcnRef_r14

      if (earfcnRef_r14 != null) {
         buffer.getContext().eventDispatcher.startElement("earfcnRef_r14", -1);

         earfcnRef_r14.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("earfcnRef_r14", -1);
      }

      // encode referenceQuality_r14

      if (referenceQuality_r14 != null) {
         buffer.getContext().eventDispatcher.startElement("referenceQuality_r14", -1);

         referenceQuality_r14.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("referenceQuality_r14", -1);
      }

      // encode neighbourMeasurementList_r14

      if (neighbourMeasurementList_r14 != null) {
         buffer.getContext().eventDispatcher.startElement("neighbourMeasurementList_r14", -1);

         neighbourMeasurementList_r14.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("neighbourMeasurementList_r14", -1);
      }
      else throw new Asn1MissingRequiredException ("neighbourMeasurementList_r14");

      // encode tpIdRef_r14

      if (tpIdRef_r14 != null) {
         buffer.getContext().eventDispatcher.startElement("tpIdRef_r14", -1);

         tpIdRef_r14.encode (buffer, 0, 4095);

         buffer.getContext().eventDispatcher.endElement("tpIdRef_r14", -1);
      }

      // encode prsIdRef_r14

      if (prsIdRef_r14 != null) {
         buffer.getContext().eventDispatcher.startElement("prsIdRef_r14", -1);

         prsIdRef_r14.encode (buffer, 0, 4095);

         buffer.getContext().eventDispatcher.endElement("prsIdRef_r14", -1);
      }

      // encode additionalPathsRef_r14

      if (additionalPathsRef_r14 != null) {
         buffer.getContext().eventDispatcher.startElement("additionalPathsRef_r14", -1);

         additionalPathsRef_r14.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("additionalPathsRef_r14", -1);
      }

      // encode nprsIdRef_r14

      if (nprsIdRef_r14 != null) {
         buffer.getContext().eventDispatcher.startElement("nprsIdRef_r14", -1);

         nprsIdRef_r14.encode (buffer, 0, 4095);

         buffer.getContext().eventDispatcher.endElement("nprsIdRef_r14", -1);
      }

      // encode carrierFreqOffsetNB_Ref_r14

      if (carrierFreqOffsetNB_Ref_r14 != null) {
         buffer.getContext().eventDispatcher.startElement("carrierFreqOffsetNB_Ref_r14", -1);

         carrierFreqOffsetNB_Ref_r14.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("carrierFreqOffsetNB_Ref_r14", -1);
      }

      // encode hyperSFN_r14

      if (hyperSFN_r14 != null) {
         buffer.getContext().eventDispatcher.startElement("hyperSFN_r14", -1);

         hyperSFN_r14.encode (buffer, 10, 10);

         buffer.getContext().eventDispatcher.endElement("hyperSFN_r14", -1);
      }

      if (extbit) {

         // encode extension optional bits length

         int bitcnt = 0;
         if (extElem1 != null) bitcnt += extElem1.value.size();
         buffer.encodeSmallLength (bitcnt);

         // encode optional bits

         if (extElem1 != null && extElem1.value.size() > 0) {
            extElem1.encodeExtBits (buffer);
         }

         // encode extension elements

         if (extElem1 != null && extElem1.value.size() > 0) {
            extElem1.encode (buffer);
         }
      }
   }

}

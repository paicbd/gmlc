/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.5.0, Date: 07-May-2021.
 */
package org.mobicents.gmlc.slee.lpp.LPP_PDU_Definitions;

import com.objsys.asn1j.runtime.*;

public class EPDU extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_LPP_PDU_DefinitionsRtkey._rtkey);
      Asn1Type._setLicLocation(_LPP_PDU_DefinitionsRtkey._licLocation);
   }

   public String getAsn1TypeName()  {
      return "EPDU";
   }

   protected EPDU_Identifier ePDU_Identifier;
   protected EPDU_Body ePDU_Body;

   public EPDU () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public EPDU (
      EPDU_Identifier ePDU_Identifier_,
      EPDU_Body ePDU_Body_
   ) {
      super();
      setEPDU_Identifier (ePDU_Identifier_);
      setEPDU_Body (ePDU_Body_);
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public EPDU (EPDU_Identifier ePDU_Identifier_,
      byte[] ePDU_Body_
   ) {
      super();
      setEPDU_Identifier (ePDU_Identifier_);
      setEPDU_Body (ePDU_Body_);
   }

   public void init () {
      ePDU_Identifier = null;
      ePDU_Body = null;
   }

   public boolean equals( Object obj ) {
      if ( this == obj ) return true;
      if ( !(obj instanceof EPDU) ) return false;

      EPDU rhs = (EPDU) obj;

      if (ePDU_Identifier == null) {
         if (rhs.ePDU_Identifier != null) return false;
      }
      else {
         if (!ePDU_Identifier.equals(rhs.ePDU_Identifier)) {
            return false;
         }
      }

      if (ePDU_Body == null) {
         if (rhs.ePDU_Body != null) return false;
      }
      else {
         if (!ePDU_Body.equals(rhs.ePDU_Body)) {
            return false;
         }
      }

      return true;
   }

   public int hashCode() {
      int __code = 1;

      if (ePDU_Identifier != null) __code = 31*__code + ePDU_Identifier.hashCode();
      if (ePDU_Body != null) __code = 31*__code + ePDU_Body.hashCode();

      return __code;
   }

   /**
    * Accessor/mutator methods for EPDU_Identifier
    */
   public EPDU_Identifier getEPDU_Identifier () {
      return ePDU_Identifier;
   }

   public void setEPDU_Identifier (EPDU_Identifier value) {
      this.ePDU_Identifier = value;
   }

   /**
    * Accessor/mutator methods for EPDU_Body
    */
   public EPDU_Body getEPDU_Body () {
      return ePDU_Body;
   }

   public void setEPDU_Body (EPDU_Body value) {
      this.ePDU_Body = value;
   }

   public void setEPDU_Body (byte[] value) {
      setEPDU_Body (new EPDU_Body(value));
   }

   public int getElementCount() { return 2; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return ePDU_Identifier;
         case 1: return ePDU_Body;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "ePDU-Identifier";
         case 1: return "ePDU-Body";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // decode ePDU_Identifier

      buffer.getContext().eventDispatcher.startElement("ePDU_Identifier", -1);

      ePDU_Identifier = new EPDU_Identifier();
      ePDU_Identifier.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("ePDU_Identifier", -1);

      // decode ePDU_Body

      buffer.getContext().eventDispatcher.startElement("ePDU_Body", -1);

      ePDU_Body = new EPDU_Body();
      ePDU_Body.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("ePDU_Body", -1);

   }

   public void encode (Asn1PerEncodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      // encode ePDU_Identifier

      if (ePDU_Identifier != null) {
         buffer.getContext().eventDispatcher.startElement("ePDU_Identifier", -1);

         ePDU_Identifier.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("ePDU_Identifier", -1);
      }
      else throw new Asn1MissingRequiredException ("ePDU_Identifier");

      // encode ePDU_Body

      if (ePDU_Body != null) {
         buffer.getContext().eventDispatcher.startElement("ePDU_Body", -1);

         ePDU_Body.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("ePDU_Body", -1);
      }
      else throw new Asn1MissingRequiredException ("ePDU_Body");

   }

}

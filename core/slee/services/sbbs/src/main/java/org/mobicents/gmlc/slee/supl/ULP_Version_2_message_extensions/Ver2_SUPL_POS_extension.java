/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.5.0, Date: 07-May-2021.
 */
package org.mobicents.gmlc.slee.supl.ULP_Version_2_message_extensions;

import com.objsys.asn1j.runtime.*;
import org.mobicents.gmlc.slee.supl.Ver2_ULP_Components.UTRAN_GPSReferenceTimeAssistance;
import org.mobicents.gmlc.slee.supl.Ver2_ULP_Components.UTRAN_GPSReferenceTimeResult;
import org.mobicents.gmlc.slee.supl.Ver2_ULP_Components.UTRAN_GANSSReferenceTimeAssistance;
import org.mobicents.gmlc.slee.supl.Ver2_ULP_Components.UTRAN_GANSSReferenceTimeResult;

public class Ver2_SUPL_POS_extension extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_ULP_Version_2_message_extensionsRtkey._rtkey);
      Asn1Type._setLicLocation(_ULP_Version_2_message_extensionsRtkey._licLocation);
   }

   public String getAsn1TypeName()  {
      return "Ver2-SUPL-POS-extension";
   }

   protected UTRAN_GPSReferenceTimeAssistance utran_GPSReferenceTimeAssistance;  // optional
   protected UTRAN_GPSReferenceTimeResult utran_GPSReferenceTimeResult;  // optional
   protected UTRAN_GANSSReferenceTimeAssistance utran_GANSSReferenceTimeAssistance;  // optional
   protected UTRAN_GANSSReferenceTimeResult utran_GANSSReferenceTimeResult;  // optional
   protected Asn1OpenExt extElem1;

   public Ver2_SUPL_POS_extension () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public Ver2_SUPL_POS_extension (
      UTRAN_GPSReferenceTimeAssistance utran_GPSReferenceTimeAssistance_,
      UTRAN_GPSReferenceTimeResult utran_GPSReferenceTimeResult_,
      UTRAN_GANSSReferenceTimeAssistance utran_GANSSReferenceTimeAssistance_,
      UTRAN_GANSSReferenceTimeResult utran_GANSSReferenceTimeResult_
   ) {
      super();
      setUtran_GPSReferenceTimeAssistance (utran_GPSReferenceTimeAssistance_);
      setUtran_GPSReferenceTimeResult (utran_GPSReferenceTimeResult_);
      setUtran_GANSSReferenceTimeAssistance (utran_GANSSReferenceTimeAssistance_);
      setUtran_GANSSReferenceTimeResult (utran_GANSSReferenceTimeResult_);
   }

   public void init () {
      utran_GPSReferenceTimeAssistance = null;
      utran_GPSReferenceTimeResult = null;
      utran_GANSSReferenceTimeAssistance = null;
      utran_GANSSReferenceTimeResult = null;
      extElem1 = null;
   }

   public boolean equals( Object obj ) {
      if ( this == obj ) return true;
      if ( !(obj instanceof Ver2_SUPL_POS_extension) ) return false;

      Ver2_SUPL_POS_extension rhs = (Ver2_SUPL_POS_extension) obj;

      if (utran_GPSReferenceTimeAssistance == null) {
         if (rhs.utran_GPSReferenceTimeAssistance != null) return false;
      }
      else {
         if (!utran_GPSReferenceTimeAssistance.equals(rhs.utran_GPSReferenceTimeAssistance)) {
            return false;
         }
      }

      if (utran_GPSReferenceTimeResult == null) {
         if (rhs.utran_GPSReferenceTimeResult != null) return false;
      }
      else {
         if (!utran_GPSReferenceTimeResult.equals(rhs.utran_GPSReferenceTimeResult)) {
            return false;
         }
      }

      if (utran_GANSSReferenceTimeAssistance == null) {
         if (rhs.utran_GANSSReferenceTimeAssistance != null) return false;
      }
      else {
         if (!utran_GANSSReferenceTimeAssistance.equals(rhs.utran_GANSSReferenceTimeAssistance)) {
            return false;
         }
      }

      if (utran_GANSSReferenceTimeResult == null) {
         if (rhs.utran_GANSSReferenceTimeResult != null) return false;
      }
      else {
         if (!utran_GANSSReferenceTimeResult.equals(rhs.utran_GANSSReferenceTimeResult)) {
            return false;
         }
      }

      if (extElem1 == null) {
         if (rhs.extElem1 != null) return false;
      }
      else {
         if (!extElem1.equals(rhs.extElem1)) {
            return false;
         }
      }

      return true;
   }

   public int hashCode() {
      int __code = 1;

      if (utran_GPSReferenceTimeAssistance != null) __code = 31*__code + utran_GPSReferenceTimeAssistance.hashCode();
      if (utran_GPSReferenceTimeResult != null) __code = 31*__code + utran_GPSReferenceTimeResult.hashCode();
      if (utran_GANSSReferenceTimeAssistance != null) __code = 31*__code + utran_GANSSReferenceTimeAssistance.hashCode();
      if (utran_GANSSReferenceTimeResult != null) __code = 31*__code + utran_GANSSReferenceTimeResult.hashCode();
      if (extElem1 != null) __code = 31*__code + extElem1.hashCode();

      return __code;
   }

   /**
    * Accessor/mutator methods for Utran_GPSReferenceTimeAssistance
    */
   public UTRAN_GPSReferenceTimeAssistance getUtran_GPSReferenceTimeAssistance () {
      return utran_GPSReferenceTimeAssistance;
   }

   public void setUtran_GPSReferenceTimeAssistance (UTRAN_GPSReferenceTimeAssistance value) {
      this.utran_GPSReferenceTimeAssistance = value;
   }

   public boolean hasUtran_GPSReferenceTimeAssistance () {
      return (utran_GPSReferenceTimeAssistance != null);
   }

   /**
    * Accessor/mutator methods for Utran_GPSReferenceTimeResult
    */
   public UTRAN_GPSReferenceTimeResult getUtran_GPSReferenceTimeResult () {
      return utran_GPSReferenceTimeResult;
   }

   public void setUtran_GPSReferenceTimeResult (UTRAN_GPSReferenceTimeResult value) {
      this.utran_GPSReferenceTimeResult = value;
   }

   public boolean hasUtran_GPSReferenceTimeResult () {
      return (utran_GPSReferenceTimeResult != null);
   }

   /**
    * Accessor/mutator methods for Utran_GANSSReferenceTimeAssistance
    */
   public UTRAN_GANSSReferenceTimeAssistance getUtran_GANSSReferenceTimeAssistance () {
      return utran_GANSSReferenceTimeAssistance;
   }

   public void setUtran_GANSSReferenceTimeAssistance (UTRAN_GANSSReferenceTimeAssistance value) {
      this.utran_GANSSReferenceTimeAssistance = value;
   }

   public boolean hasUtran_GANSSReferenceTimeAssistance () {
      return (utran_GANSSReferenceTimeAssistance != null);
   }

   /**
    * Accessor/mutator methods for Utran_GANSSReferenceTimeResult
    */
   public UTRAN_GANSSReferenceTimeResult getUtran_GANSSReferenceTimeResult () {
      return utran_GANSSReferenceTimeResult;
   }

   public void setUtran_GANSSReferenceTimeResult (UTRAN_GANSSReferenceTimeResult value) {
      this.utran_GANSSReferenceTimeResult = value;
   }

   public boolean hasUtran_GANSSReferenceTimeResult () {
      return (utran_GANSSReferenceTimeResult != null);
   }

   /**
    * Accessor/mutator methods for ExtElem1
    */
   public Asn1OpenExt getExtElem1 () {
      return extElem1;
   }

   public void setExtElem1 (Asn1OpenExt value) {
      this.extElem1 = value;
   }

   public int getElementCount() { return 5; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return utran_GPSReferenceTimeAssistance;
         case 1: return utran_GPSReferenceTimeResult;
         case 2: return utran_GANSSReferenceTimeAssistance;
         case 3: return utran_GANSSReferenceTimeResult;
         case 4: return extElem1;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "utran-GPSReferenceTimeAssistance";
         case 1: return "utran-GPSReferenceTimeResult";
         case 2: return "utran-GANSSReferenceTimeAssistance";
         case 3: return "utran-GANSSReferenceTimeResult";
         case 4: return null;
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // extension bit

      boolean extbit = buffer.decodeBit ("extbit");

      // optional bits

      boolean utran_GPSReferenceTimeAssistancePresent = buffer.decodeBit ("utran_GPSReferenceTimeAssistancePresent");
      boolean utran_GPSReferenceTimeResultPresent = buffer.decodeBit ("utran_GPSReferenceTimeResultPresent");
      boolean utran_GANSSReferenceTimeAssistancePresent = buffer.decodeBit ("utran_GANSSReferenceTimeAssistancePresent");
      boolean utran_GANSSReferenceTimeResultPresent = buffer.decodeBit ("utran_GANSSReferenceTimeResultPresent");

      // decode utran_GPSReferenceTimeAssistance

      if (utran_GPSReferenceTimeAssistancePresent) {
         buffer.getContext().eventDispatcher.startElement("utran_GPSReferenceTimeAssistance", -1);

         utran_GPSReferenceTimeAssistance = new UTRAN_GPSReferenceTimeAssistance();
         utran_GPSReferenceTimeAssistance.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("utran_GPSReferenceTimeAssistance", -1);
      }
      else {
         utran_GPSReferenceTimeAssistance = null;
      }

      // decode utran_GPSReferenceTimeResult

      if (utran_GPSReferenceTimeResultPresent) {
         buffer.getContext().eventDispatcher.startElement("utran_GPSReferenceTimeResult", -1);

         utran_GPSReferenceTimeResult = new UTRAN_GPSReferenceTimeResult();
         utran_GPSReferenceTimeResult.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("utran_GPSReferenceTimeResult", -1);
      }
      else {
         utran_GPSReferenceTimeResult = null;
      }

      // decode utran_GANSSReferenceTimeAssistance

      if (utran_GANSSReferenceTimeAssistancePresent) {
         buffer.getContext().eventDispatcher.startElement("utran_GANSSReferenceTimeAssistance", -1);

         utran_GANSSReferenceTimeAssistance = new UTRAN_GANSSReferenceTimeAssistance();
         utran_GANSSReferenceTimeAssistance.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("utran_GANSSReferenceTimeAssistance", -1);
      }
      else {
         utran_GANSSReferenceTimeAssistance = null;
      }

      // decode utran_GANSSReferenceTimeResult

      if (utran_GANSSReferenceTimeResultPresent) {
         buffer.getContext().eventDispatcher.startElement("utran_GANSSReferenceTimeResult", -1);

         utran_GANSSReferenceTimeResult = new UTRAN_GANSSReferenceTimeResult();
         utran_GANSSReferenceTimeResult.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("utran_GANSSReferenceTimeResult", -1);
      }
      else {
         utran_GANSSReferenceTimeResult = null;
      }

      if (extbit) {

         int bitcnt = buffer.decodeSmallLength(), i = 0;
         long bitidx = buffer.getBitOffset() + bitcnt;
         boolean[] bitmap = new boolean [bitcnt];

         while (i < bitcnt) {
            bitmap[i++] = buffer.decodeBit ("unknown");
         }

         i = 0;

         // decode unknown extension elements

         if (i < bitcnt) {
            Asn1OpenType openType = null;
            extElem1 = new Asn1OpenExt();
            int j = 0;
            while (i < bitcnt) {
               if (bitmap[i]) {
                  buffer.getContext().eventDispatcher.startElement("...", -1);

                  openType = extElem1.decodeOpenType (buffer, true, j++);
               }
               else {
                  extElem1.setOpenType (null, j++);
               }
               i++;
            }
         }
         buffer.byteAlign ();

      }

   }

   public void encode (Asn1PerEncodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      // extension bit

      boolean extbit = (((extElem1 != null) && (!extElem1.value.isEmpty()))
      );

      buffer.encodeBit (extbit, "extbit");

      // encode optional elements bit mask

      buffer.encodeBit ((utran_GPSReferenceTimeAssistance != null), null);
      buffer.encodeBit ((utran_GPSReferenceTimeResult != null), null);
      buffer.encodeBit ((utran_GANSSReferenceTimeAssistance != null), null);
      buffer.encodeBit ((utran_GANSSReferenceTimeResult != null), null);

      // encode utran_GPSReferenceTimeAssistance

      if (utran_GPSReferenceTimeAssistance != null) {
         buffer.getContext().eventDispatcher.startElement("utran_GPSReferenceTimeAssistance", -1);

         utran_GPSReferenceTimeAssistance.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("utran_GPSReferenceTimeAssistance", -1);
      }

      // encode utran_GPSReferenceTimeResult

      if (utran_GPSReferenceTimeResult != null) {
         buffer.getContext().eventDispatcher.startElement("utran_GPSReferenceTimeResult", -1);

         utran_GPSReferenceTimeResult.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("utran_GPSReferenceTimeResult", -1);
      }

      // encode utran_GANSSReferenceTimeAssistance

      if (utran_GANSSReferenceTimeAssistance != null) {
         buffer.getContext().eventDispatcher.startElement("utran_GANSSReferenceTimeAssistance", -1);

         utran_GANSSReferenceTimeAssistance.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("utran_GANSSReferenceTimeAssistance", -1);
      }

      // encode utran_GANSSReferenceTimeResult

      if (utran_GANSSReferenceTimeResult != null) {
         buffer.getContext().eventDispatcher.startElement("utran_GANSSReferenceTimeResult", -1);

         utran_GANSSReferenceTimeResult.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("utran_GANSSReferenceTimeResult", -1);
      }

      if (extbit) {

         // encode extension optional bits length

         int bitcnt = 0;
         if (extElem1 != null) bitcnt += extElem1.value.size();
         buffer.encodeSmallLength (bitcnt);

         // encode optional bits

         if (extElem1 != null && extElem1.value.size() > 0) {
            extElem1.encodeExtBits (buffer);
         }

         // encode extension elements

         if (extElem1 != null && extElem1.value.size() > 0) {
            extElem1.encode (buffer);
         }
      }
   }

}

/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.5.0, Date: 07-May-2021.
 */
package org.mobicents.gmlc.slee.lpp.LPP_PDU_Definitions;

import com.objsys.asn1j.runtime.*;

public class SupportedBandEUTRA extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_LPP_PDU_DefinitionsRtkey._rtkey);
      Asn1Type._setLicLocation(_LPP_PDU_DefinitionsRtkey._licLocation);
   }

   public String getAsn1TypeName()  {
      return "SupportedBandEUTRA";
   }

   protected Asn1Integer bandEUTRA;

   public SupportedBandEUTRA () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public SupportedBandEUTRA (
      Asn1Integer bandEUTRA_
   ) throws Asn1Exception {
      super();
      setBandEUTRA (bandEUTRA_);
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public SupportedBandEUTRA (long bandEUTRA_
   ) throws Asn1Exception {
      super();
      setBandEUTRA (bandEUTRA_);
   }

   public void init () {
      bandEUTRA = null;
   }

   public boolean equals( Object obj ) {
      if ( this == obj ) return true;
      if ( !(obj instanceof SupportedBandEUTRA) ) return false;

      SupportedBandEUTRA rhs = (SupportedBandEUTRA) obj;

      if (bandEUTRA == null) {
         if (rhs.bandEUTRA != null) return false;
      }
      else {
         if (!bandEUTRA.equals(rhs.bandEUTRA)) {
            return false;
         }
      }

      return true;
   }

   public int hashCode() {
      int __code = 1;

      if (bandEUTRA != null) __code = 31*__code + bandEUTRA.hashCode();

      return __code;
   }

   /**
    * Accessor/mutator methods for BandEUTRA
    */
   public Asn1Integer getBandEUTRA () {
      return bandEUTRA;
   }

   public void setBandEUTRA (Asn1Integer value) 
      throws Asn1Exception
   {
      if (!((value.value >= 1 && value.value <= 64))) {
         throw new Asn1ConsVioException ("value.value", value.value);
      }

      this.bandEUTRA = value;
   }

   public void setBandEUTRA (long value) 
      throws Asn1Exception
   {
      setBandEUTRA (new Asn1Integer(value));
   }

   public int getElementCount() { return 1; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return bandEUTRA;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "bandEUTRA";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // decode bandEUTRA

      buffer.getContext().eventDispatcher.startElement("bandEUTRA", -1);

      bandEUTRA = new Asn1Integer();
      bandEUTRA.decode (buffer, 1, 64);
      buffer.getContext().eventDispatcher.endElement("bandEUTRA", -1);

   }

   public void encode (Asn1PerEncodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      // encode bandEUTRA

      if (bandEUTRA != null) {
         buffer.getContext().eventDispatcher.startElement("bandEUTRA", -1);

         bandEUTRA.encode (buffer, 1, 64);

         buffer.getContext().eventDispatcher.endElement("bandEUTRA", -1);
      }
      else throw new Asn1MissingRequiredException ("bandEUTRA");

   }

}

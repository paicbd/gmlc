/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.5.0, Date: 07-May-2021.
 */
package org.mobicents.gmlc.slee.lpp.LPP_PDU_Definitions;

import com.objsys.asn1j.runtime.*;

public class NavModel_BDS_KeplerianSet2_r16 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_LPP_PDU_DefinitionsRtkey._rtkey);
      Asn1Type._setLicLocation(_LPP_PDU_DefinitionsRtkey._licLocation);
   }

   public String getAsn1TypeName()  {
      return "NavModel-BDS-KeplerianSet2-r16";
   }

   protected Asn1Integer bdsIODE_r16;
   protected Asn1Integer bdsToe_r16;
   protected Asn1Integer bdsDeltaA_r16;
   protected Asn1Integer bdsAdot_r16;
   protected Asn1Integer bdsDeltaN0_r16;
   protected Asn1Integer bdsDeltaN0dot_r16;
   protected Asn1Integer bdsM0_r16;
   protected Asn1Integer bdsE_r16;
   protected Asn1Integer bdsOmega_r16;
   protected Asn1Integer bdsOmega0_r16;
   protected Asn1Integer bdsI0_r16;
   protected Asn1Integer bdsOmegaDot_r16;
   protected Asn1Integer bdsI0Dot_r16;
   protected Asn1Integer bdsCuc_r16;
   protected Asn1Integer bdsCus_r16;
   protected Asn1Integer bdsCrc_r16;
   protected Asn1Integer bdsCrs_r16;
   protected Asn1Integer bdsCic_r16;
   protected Asn1Integer bdsCis_r16;
   protected Asn1OpenExt extElem1;

   public NavModel_BDS_KeplerianSet2_r16 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public NavModel_BDS_KeplerianSet2_r16 (
      Asn1Integer bdsIODE_r16_,
      Asn1Integer bdsToe_r16_,
      Asn1Integer bdsDeltaA_r16_,
      Asn1Integer bdsAdot_r16_,
      Asn1Integer bdsDeltaN0_r16_,
      Asn1Integer bdsDeltaN0dot_r16_,
      Asn1Integer bdsM0_r16_,
      Asn1Integer bdsE_r16_,
      Asn1Integer bdsOmega_r16_,
      Asn1Integer bdsOmega0_r16_,
      Asn1Integer bdsI0_r16_,
      Asn1Integer bdsOmegaDot_r16_,
      Asn1Integer bdsI0Dot_r16_,
      Asn1Integer bdsCuc_r16_,
      Asn1Integer bdsCus_r16_,
      Asn1Integer bdsCrc_r16_,
      Asn1Integer bdsCrs_r16_,
      Asn1Integer bdsCic_r16_,
      Asn1Integer bdsCis_r16_
   ) throws Asn1Exception {
      super();
      setBdsIODE_r16 (bdsIODE_r16_);
      setBdsToe_r16 (bdsToe_r16_);
      setBdsDeltaA_r16 (bdsDeltaA_r16_);
      setBdsAdot_r16 (bdsAdot_r16_);
      setBdsDeltaN0_r16 (bdsDeltaN0_r16_);
      setBdsDeltaN0dot_r16 (bdsDeltaN0dot_r16_);
      setBdsM0_r16 (bdsM0_r16_);
      setBdsE_r16 (bdsE_r16_);
      setBdsOmega_r16 (bdsOmega_r16_);
      setBdsOmega0_r16 (bdsOmega0_r16_);
      setBdsI0_r16 (bdsI0_r16_);
      setBdsOmegaDot_r16 (bdsOmegaDot_r16_);
      setBdsI0Dot_r16 (bdsI0Dot_r16_);
      setBdsCuc_r16 (bdsCuc_r16_);
      setBdsCus_r16 (bdsCus_r16_);
      setBdsCrc_r16 (bdsCrc_r16_);
      setBdsCrs_r16 (bdsCrs_r16_);
      setBdsCic_r16 (bdsCic_r16_);
      setBdsCis_r16 (bdsCis_r16_);
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public NavModel_BDS_KeplerianSet2_r16 (long bdsIODE_r16_,
      long bdsToe_r16_,
      long bdsDeltaA_r16_,
      long bdsAdot_r16_,
      long bdsDeltaN0_r16_,
      long bdsDeltaN0dot_r16_,
      long bdsM0_r16_,
      long bdsE_r16_,
      long bdsOmega_r16_,
      long bdsOmega0_r16_,
      long bdsI0_r16_,
      long bdsOmegaDot_r16_,
      long bdsI0Dot_r16_,
      long bdsCuc_r16_,
      long bdsCus_r16_,
      long bdsCrc_r16_,
      long bdsCrs_r16_,
      long bdsCic_r16_,
      long bdsCis_r16_
   ) throws Asn1Exception {
      super();
      setBdsIODE_r16 (bdsIODE_r16_);
      setBdsToe_r16 (bdsToe_r16_);
      setBdsDeltaA_r16 (bdsDeltaA_r16_);
      setBdsAdot_r16 (bdsAdot_r16_);
      setBdsDeltaN0_r16 (bdsDeltaN0_r16_);
      setBdsDeltaN0dot_r16 (bdsDeltaN0dot_r16_);
      setBdsM0_r16 (bdsM0_r16_);
      setBdsE_r16 (bdsE_r16_);
      setBdsOmega_r16 (bdsOmega_r16_);
      setBdsOmega0_r16 (bdsOmega0_r16_);
      setBdsI0_r16 (bdsI0_r16_);
      setBdsOmegaDot_r16 (bdsOmegaDot_r16_);
      setBdsI0Dot_r16 (bdsI0Dot_r16_);
      setBdsCuc_r16 (bdsCuc_r16_);
      setBdsCus_r16 (bdsCus_r16_);
      setBdsCrc_r16 (bdsCrc_r16_);
      setBdsCrs_r16 (bdsCrs_r16_);
      setBdsCic_r16 (bdsCic_r16_);
      setBdsCis_r16 (bdsCis_r16_);
   }

   public void init () {
      bdsIODE_r16 = null;
      bdsToe_r16 = null;
      bdsDeltaA_r16 = null;
      bdsAdot_r16 = null;
      bdsDeltaN0_r16 = null;
      bdsDeltaN0dot_r16 = null;
      bdsM0_r16 = null;
      bdsE_r16 = null;
      bdsOmega_r16 = null;
      bdsOmega0_r16 = null;
      bdsI0_r16 = null;
      bdsOmegaDot_r16 = null;
      bdsI0Dot_r16 = null;
      bdsCuc_r16 = null;
      bdsCus_r16 = null;
      bdsCrc_r16 = null;
      bdsCrs_r16 = null;
      bdsCic_r16 = null;
      bdsCis_r16 = null;
      extElem1 = null;
   }

   public boolean equals( Object obj ) {
      if ( this == obj ) return true;
      if ( !(obj instanceof NavModel_BDS_KeplerianSet2_r16) ) return false;

      NavModel_BDS_KeplerianSet2_r16 rhs = (NavModel_BDS_KeplerianSet2_r16) obj;

      if (bdsIODE_r16 == null) {
         if (rhs.bdsIODE_r16 != null) return false;
      }
      else {
         if (!bdsIODE_r16.equals(rhs.bdsIODE_r16)) {
            return false;
         }
      }

      if (bdsToe_r16 == null) {
         if (rhs.bdsToe_r16 != null) return false;
      }
      else {
         if (!bdsToe_r16.equals(rhs.bdsToe_r16)) {
            return false;
         }
      }

      if (bdsDeltaA_r16 == null) {
         if (rhs.bdsDeltaA_r16 != null) return false;
      }
      else {
         if (!bdsDeltaA_r16.equals(rhs.bdsDeltaA_r16)) {
            return false;
         }
      }

      if (bdsAdot_r16 == null) {
         if (rhs.bdsAdot_r16 != null) return false;
      }
      else {
         if (!bdsAdot_r16.equals(rhs.bdsAdot_r16)) {
            return false;
         }
      }

      if (bdsDeltaN0_r16 == null) {
         if (rhs.bdsDeltaN0_r16 != null) return false;
      }
      else {
         if (!bdsDeltaN0_r16.equals(rhs.bdsDeltaN0_r16)) {
            return false;
         }
      }

      if (bdsDeltaN0dot_r16 == null) {
         if (rhs.bdsDeltaN0dot_r16 != null) return false;
      }
      else {
         if (!bdsDeltaN0dot_r16.equals(rhs.bdsDeltaN0dot_r16)) {
            return false;
         }
      }

      if (bdsM0_r16 == null) {
         if (rhs.bdsM0_r16 != null) return false;
      }
      else {
         if (!bdsM0_r16.equals(rhs.bdsM0_r16)) {
            return false;
         }
      }

      if (bdsE_r16 == null) {
         if (rhs.bdsE_r16 != null) return false;
      }
      else {
         if (!bdsE_r16.equals(rhs.bdsE_r16)) {
            return false;
         }
      }

      if (bdsOmega_r16 == null) {
         if (rhs.bdsOmega_r16 != null) return false;
      }
      else {
         if (!bdsOmega_r16.equals(rhs.bdsOmega_r16)) {
            return false;
         }
      }

      if (bdsOmega0_r16 == null) {
         if (rhs.bdsOmega0_r16 != null) return false;
      }
      else {
         if (!bdsOmega0_r16.equals(rhs.bdsOmega0_r16)) {
            return false;
         }
      }

      if (bdsI0_r16 == null) {
         if (rhs.bdsI0_r16 != null) return false;
      }
      else {
         if (!bdsI0_r16.equals(rhs.bdsI0_r16)) {
            return false;
         }
      }

      if (bdsOmegaDot_r16 == null) {
         if (rhs.bdsOmegaDot_r16 != null) return false;
      }
      else {
         if (!bdsOmegaDot_r16.equals(rhs.bdsOmegaDot_r16)) {
            return false;
         }
      }

      if (bdsI0Dot_r16 == null) {
         if (rhs.bdsI0Dot_r16 != null) return false;
      }
      else {
         if (!bdsI0Dot_r16.equals(rhs.bdsI0Dot_r16)) {
            return false;
         }
      }

      if (bdsCuc_r16 == null) {
         if (rhs.bdsCuc_r16 != null) return false;
      }
      else {
         if (!bdsCuc_r16.equals(rhs.bdsCuc_r16)) {
            return false;
         }
      }

      if (bdsCus_r16 == null) {
         if (rhs.bdsCus_r16 != null) return false;
      }
      else {
         if (!bdsCus_r16.equals(rhs.bdsCus_r16)) {
            return false;
         }
      }

      if (bdsCrc_r16 == null) {
         if (rhs.bdsCrc_r16 != null) return false;
      }
      else {
         if (!bdsCrc_r16.equals(rhs.bdsCrc_r16)) {
            return false;
         }
      }

      if (bdsCrs_r16 == null) {
         if (rhs.bdsCrs_r16 != null) return false;
      }
      else {
         if (!bdsCrs_r16.equals(rhs.bdsCrs_r16)) {
            return false;
         }
      }

      if (bdsCic_r16 == null) {
         if (rhs.bdsCic_r16 != null) return false;
      }
      else {
         if (!bdsCic_r16.equals(rhs.bdsCic_r16)) {
            return false;
         }
      }

      if (bdsCis_r16 == null) {
         if (rhs.bdsCis_r16 != null) return false;
      }
      else {
         if (!bdsCis_r16.equals(rhs.bdsCis_r16)) {
            return false;
         }
      }

      if (extElem1 == null) {
         if (rhs.extElem1 != null) return false;
      }
      else {
         if (!extElem1.equals(rhs.extElem1)) {
            return false;
         }
      }

      return true;
   }

   public int hashCode() {
      int __code = 1;

      if (bdsIODE_r16 != null) __code = 31*__code + bdsIODE_r16.hashCode();
      if (bdsToe_r16 != null) __code = 31*__code + bdsToe_r16.hashCode();
      if (bdsDeltaA_r16 != null) __code = 31*__code + bdsDeltaA_r16.hashCode();
      if (bdsAdot_r16 != null) __code = 31*__code + bdsAdot_r16.hashCode();
      if (bdsDeltaN0_r16 != null) __code = 31*__code + bdsDeltaN0_r16.hashCode();
      if (bdsDeltaN0dot_r16 != null) __code = 31*__code + bdsDeltaN0dot_r16.hashCode();
      if (bdsM0_r16 != null) __code = 31*__code + bdsM0_r16.hashCode();
      if (bdsE_r16 != null) __code = 31*__code + bdsE_r16.hashCode();
      if (bdsOmega_r16 != null) __code = 31*__code + bdsOmega_r16.hashCode();
      if (bdsOmega0_r16 != null) __code = 31*__code + bdsOmega0_r16.hashCode();
      if (bdsI0_r16 != null) __code = 31*__code + bdsI0_r16.hashCode();
      if (bdsOmegaDot_r16 != null) __code = 31*__code + bdsOmegaDot_r16.hashCode();
      if (bdsI0Dot_r16 != null) __code = 31*__code + bdsI0Dot_r16.hashCode();
      if (bdsCuc_r16 != null) __code = 31*__code + bdsCuc_r16.hashCode();
      if (bdsCus_r16 != null) __code = 31*__code + bdsCus_r16.hashCode();
      if (bdsCrc_r16 != null) __code = 31*__code + bdsCrc_r16.hashCode();
      if (bdsCrs_r16 != null) __code = 31*__code + bdsCrs_r16.hashCode();
      if (bdsCic_r16 != null) __code = 31*__code + bdsCic_r16.hashCode();
      if (bdsCis_r16 != null) __code = 31*__code + bdsCis_r16.hashCode();
      if (extElem1 != null) __code = 31*__code + extElem1.hashCode();

      return __code;
   }

   /**
    * Accessor/mutator methods for BdsIODE_r16
    */
   public Asn1Integer getBdsIODE_r16 () {
      return bdsIODE_r16;
   }

   public void setBdsIODE_r16 (Asn1Integer value) 
      throws Asn1Exception
   {
      if (!((value.value >= 0 && value.value <= 255))) {
         throw new Asn1ConsVioException ("value.value", value.value);
      }

      this.bdsIODE_r16 = value;
   }

   public void setBdsIODE_r16 (long value) 
      throws Asn1Exception
   {
      setBdsIODE_r16 (new Asn1Integer(value));
   }

   /**
    * Accessor/mutator methods for BdsToe_r16
    */
   public Asn1Integer getBdsToe_r16 () {
      return bdsToe_r16;
   }

   public void setBdsToe_r16 (Asn1Integer value) 
      throws Asn1Exception
   {
      if (!((value.value >= 0 && value.value <= 2047))) {
         throw new Asn1ConsVioException ("value.value", value.value);
      }

      this.bdsToe_r16 = value;
   }

   public void setBdsToe_r16 (long value) 
      throws Asn1Exception
   {
      setBdsToe_r16 (new Asn1Integer(value));
   }

   /**
    * Accessor/mutator methods for BdsDeltaA_r16
    */
   public Asn1Integer getBdsDeltaA_r16 () {
      return bdsDeltaA_r16;
   }

   public void setBdsDeltaA_r16 (Asn1Integer value) 
      throws Asn1Exception
   {
      if (!((value.value >= -33554432 && value.value <= 33554431))) {
         throw new Asn1ConsVioException ("value.value", value.value);
      }

      this.bdsDeltaA_r16 = value;
   }

   public void setBdsDeltaA_r16 (long value) 
      throws Asn1Exception
   {
      setBdsDeltaA_r16 (new Asn1Integer(value));
   }

   /**
    * Accessor/mutator methods for BdsAdot_r16
    */
   public Asn1Integer getBdsAdot_r16 () {
      return bdsAdot_r16;
   }

   public void setBdsAdot_r16 (Asn1Integer value) 
      throws Asn1Exception
   {
      if (!((value.value >= -16777216 && value.value <= 16777216))) {
         throw new Asn1ConsVioException ("value.value", value.value);
      }

      this.bdsAdot_r16 = value;
   }

   public void setBdsAdot_r16 (long value) 
      throws Asn1Exception
   {
      setBdsAdot_r16 (new Asn1Integer(value));
   }

   /**
    * Accessor/mutator methods for BdsDeltaN0_r16
    */
   public Asn1Integer getBdsDeltaN0_r16 () {
      return bdsDeltaN0_r16;
   }

   public void setBdsDeltaN0_r16 (Asn1Integer value) 
      throws Asn1Exception
   {
      if (!((value.value >= -65536 && value.value <= 65535))) {
         throw new Asn1ConsVioException ("value.value", value.value);
      }

      this.bdsDeltaN0_r16 = value;
   }

   public void setBdsDeltaN0_r16 (long value) 
      throws Asn1Exception
   {
      setBdsDeltaN0_r16 (new Asn1Integer(value));
   }

   /**
    * Accessor/mutator methods for BdsDeltaN0dot_r16
    */
   public Asn1Integer getBdsDeltaN0dot_r16 () {
      return bdsDeltaN0dot_r16;
   }

   public void setBdsDeltaN0dot_r16 (Asn1Integer value) 
      throws Asn1Exception
   {
      if (!((value.value >= -4194304 && value.value <= 4194303))) {
         throw new Asn1ConsVioException ("value.value", value.value);
      }

      this.bdsDeltaN0dot_r16 = value;
   }

   public void setBdsDeltaN0dot_r16 (long value) 
      throws Asn1Exception
   {
      setBdsDeltaN0dot_r16 (new Asn1Integer(value));
   }

   /**
    * Accessor/mutator methods for BdsM0_r16
    */
   public Asn1Integer getBdsM0_r16 () {
      return bdsM0_r16;
   }

   public void setBdsM0_r16 (Asn1Integer value) 
      throws Asn1Exception
   {
      if (!((value.value >= -4294967296L && value.value <= 4294967295L))) {
         throw new Asn1ConsVioException ("value.value", value.value);
      }

      this.bdsM0_r16 = value;
   }

   public void setBdsM0_r16 (long value) 
      throws Asn1Exception
   {
      setBdsM0_r16 (new Asn1Integer(value));
   }

   /**
    * Accessor/mutator methods for BdsE_r16
    */
   public Asn1Integer getBdsE_r16 () {
      return bdsE_r16;
   }

   public void setBdsE_r16 (Asn1Integer value) 
      throws Asn1Exception
   {
      if (!((value.value >= 0 && value.value <= 8589934591L))) {
         throw new Asn1ConsVioException ("value.value", value.value);
      }

      this.bdsE_r16 = value;
   }

   public void setBdsE_r16 (long value) 
      throws Asn1Exception
   {
      setBdsE_r16 (new Asn1Integer(value));
   }

   /**
    * Accessor/mutator methods for BdsOmega_r16
    */
   public Asn1Integer getBdsOmega_r16 () {
      return bdsOmega_r16;
   }

   public void setBdsOmega_r16 (Asn1Integer value) 
      throws Asn1Exception
   {
      if (!((value.value >= -4294967296L && value.value <= 4294967295L))) {
         throw new Asn1ConsVioException ("value.value", value.value);
      }

      this.bdsOmega_r16 = value;
   }

   public void setBdsOmega_r16 (long value) 
      throws Asn1Exception
   {
      setBdsOmega_r16 (new Asn1Integer(value));
   }

   /**
    * Accessor/mutator methods for BdsOmega0_r16
    */
   public Asn1Integer getBdsOmega0_r16 () {
      return bdsOmega0_r16;
   }

   public void setBdsOmega0_r16 (Asn1Integer value) 
      throws Asn1Exception
   {
      if (!((value.value >= -4294967296L && value.value <= 4294967295L))) {
         throw new Asn1ConsVioException ("value.value", value.value);
      }

      this.bdsOmega0_r16 = value;
   }

   public void setBdsOmega0_r16 (long value) 
      throws Asn1Exception
   {
      setBdsOmega0_r16 (new Asn1Integer(value));
   }

   /**
    * Accessor/mutator methods for BdsI0_r16
    */
   public Asn1Integer getBdsI0_r16 () {
      return bdsI0_r16;
   }

   public void setBdsI0_r16 (Asn1Integer value) 
      throws Asn1Exception
   {
      if (!((value.value >= -4294967296L && value.value <= 4294967295L))) {
         throw new Asn1ConsVioException ("value.value", value.value);
      }

      this.bdsI0_r16 = value;
   }

   public void setBdsI0_r16 (long value) 
      throws Asn1Exception
   {
      setBdsI0_r16 (new Asn1Integer(value));
   }

   /**
    * Accessor/mutator methods for BdsOmegaDot_r16
    */
   public Asn1Integer getBdsOmegaDot_r16 () {
      return bdsOmegaDot_r16;
   }

   public void setBdsOmegaDot_r16 (Asn1Integer value) 
      throws Asn1Exception
   {
      if (!((value.value >= -262144 && value.value <= 262143))) {
         throw new Asn1ConsVioException ("value.value", value.value);
      }

      this.bdsOmegaDot_r16 = value;
   }

   public void setBdsOmegaDot_r16 (long value) 
      throws Asn1Exception
   {
      setBdsOmegaDot_r16 (new Asn1Integer(value));
   }

   /**
    * Accessor/mutator methods for BdsI0Dot_r16
    */
   public Asn1Integer getBdsI0Dot_r16 () {
      return bdsI0Dot_r16;
   }

   public void setBdsI0Dot_r16 (Asn1Integer value) 
      throws Asn1Exception
   {
      if (!((value.value >= -16384 && value.value <= 16383))) {
         throw new Asn1ConsVioException ("value.value", value.value);
      }

      this.bdsI0Dot_r16 = value;
   }

   public void setBdsI0Dot_r16 (long value) 
      throws Asn1Exception
   {
      setBdsI0Dot_r16 (new Asn1Integer(value));
   }

   /**
    * Accessor/mutator methods for BdsCuc_r16
    */
   public Asn1Integer getBdsCuc_r16 () {
      return bdsCuc_r16;
   }

   public void setBdsCuc_r16 (Asn1Integer value) 
      throws Asn1Exception
   {
      if (!((value.value >= -1048576 && value.value <= 1048575))) {
         throw new Asn1ConsVioException ("value.value", value.value);
      }

      this.bdsCuc_r16 = value;
   }

   public void setBdsCuc_r16 (long value) 
      throws Asn1Exception
   {
      setBdsCuc_r16 (new Asn1Integer(value));
   }

   /**
    * Accessor/mutator methods for BdsCus_r16
    */
   public Asn1Integer getBdsCus_r16 () {
      return bdsCus_r16;
   }

   public void setBdsCus_r16 (Asn1Integer value) 
      throws Asn1Exception
   {
      if (!((value.value >= -1048576 && value.value <= 1048575))) {
         throw new Asn1ConsVioException ("value.value", value.value);
      }

      this.bdsCus_r16 = value;
   }

   public void setBdsCus_r16 (long value) 
      throws Asn1Exception
   {
      setBdsCus_r16 (new Asn1Integer(value));
   }

   /**
    * Accessor/mutator methods for BdsCrc_r16
    */
   public Asn1Integer getBdsCrc_r16 () {
      return bdsCrc_r16;
   }

   public void setBdsCrc_r16 (Asn1Integer value) 
      throws Asn1Exception
   {
      if (!((value.value >= -8388608 && value.value <= 8388607))) {
         throw new Asn1ConsVioException ("value.value", value.value);
      }

      this.bdsCrc_r16 = value;
   }

   public void setBdsCrc_r16 (long value) 
      throws Asn1Exception
   {
      setBdsCrc_r16 (new Asn1Integer(value));
   }

   /**
    * Accessor/mutator methods for BdsCrs_r16
    */
   public Asn1Integer getBdsCrs_r16 () {
      return bdsCrs_r16;
   }

   public void setBdsCrs_r16 (Asn1Integer value) 
      throws Asn1Exception
   {
      if (!((value.value >= -8388608 && value.value <= 8388607))) {
         throw new Asn1ConsVioException ("value.value", value.value);
      }

      this.bdsCrs_r16 = value;
   }

   public void setBdsCrs_r16 (long value) 
      throws Asn1Exception
   {
      setBdsCrs_r16 (new Asn1Integer(value));
   }

   /**
    * Accessor/mutator methods for BdsCic_r16
    */
   public Asn1Integer getBdsCic_r16 () {
      return bdsCic_r16;
   }

   public void setBdsCic_r16 (Asn1Integer value) 
      throws Asn1Exception
   {
      if (!((value.value >= -32768 && value.value <= 32767))) {
         throw new Asn1ConsVioException ("value.value", value.value);
      }

      this.bdsCic_r16 = value;
   }

   public void setBdsCic_r16 (long value) 
      throws Asn1Exception
   {
      setBdsCic_r16 (new Asn1Integer(value));
   }

   /**
    * Accessor/mutator methods for BdsCis_r16
    */
   public Asn1Integer getBdsCis_r16 () {
      return bdsCis_r16;
   }

   public void setBdsCis_r16 (Asn1Integer value) 
      throws Asn1Exception
   {
      if (!((value.value >= -32768 && value.value <= 32767))) {
         throw new Asn1ConsVioException ("value.value", value.value);
      }

      this.bdsCis_r16 = value;
   }

   public void setBdsCis_r16 (long value) 
      throws Asn1Exception
   {
      setBdsCis_r16 (new Asn1Integer(value));
   }

   /**
    * Accessor/mutator methods for ExtElem1
    */
   public Asn1OpenExt getExtElem1 () {
      return extElem1;
   }

   public void setExtElem1 (Asn1OpenExt value) {
      this.extElem1 = value;
   }

   public int getElementCount() { return 20; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return bdsIODE_r16;
         case 1: return bdsToe_r16;
         case 2: return bdsDeltaA_r16;
         case 3: return bdsAdot_r16;
         case 4: return bdsDeltaN0_r16;
         case 5: return bdsDeltaN0dot_r16;
         case 6: return bdsM0_r16;
         case 7: return bdsE_r16;
         case 8: return bdsOmega_r16;
         case 9: return bdsOmega0_r16;
         case 10: return bdsI0_r16;
         case 11: return bdsOmegaDot_r16;
         case 12: return bdsI0Dot_r16;
         case 13: return bdsCuc_r16;
         case 14: return bdsCus_r16;
         case 15: return bdsCrc_r16;
         case 16: return bdsCrs_r16;
         case 17: return bdsCic_r16;
         case 18: return bdsCis_r16;
         case 19: return extElem1;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "bdsIODE-r16";
         case 1: return "bdsToe-r16";
         case 2: return "bdsDeltaA-r16";
         case 3: return "bdsAdot-r16";
         case 4: return "bdsDeltaN0-r16";
         case 5: return "bdsDeltaN0dot-r16";
         case 6: return "bdsM0-r16";
         case 7: return "bdsE-r16";
         case 8: return "bdsOmega-r16";
         case 9: return "bdsOmega0-r16";
         case 10: return "bdsI0-r16";
         case 11: return "bdsOmegaDot-r16";
         case 12: return "bdsI0Dot-r16";
         case 13: return "bdsCuc-r16";
         case 14: return "bdsCus-r16";
         case 15: return "bdsCrc-r16";
         case 16: return "bdsCrs-r16";
         case 17: return "bdsCic-r16";
         case 18: return "bdsCis-r16";
         case 19: return null;
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // extension bit

      boolean extbit = buffer.decodeBit ("extbit");

      // decode bdsIODE_r16

      buffer.getContext().eventDispatcher.startElement("bdsIODE_r16", -1);

      bdsIODE_r16 = new Asn1Integer();
      bdsIODE_r16.decode (buffer, 0, 255);
      buffer.getContext().eventDispatcher.endElement("bdsIODE_r16", -1);

      // decode bdsToe_r16

      buffer.getContext().eventDispatcher.startElement("bdsToe_r16", -1);

      bdsToe_r16 = new Asn1Integer();
      bdsToe_r16.decode (buffer, 0, 2047);
      buffer.getContext().eventDispatcher.endElement("bdsToe_r16", -1);

      // decode bdsDeltaA_r16

      buffer.getContext().eventDispatcher.startElement("bdsDeltaA_r16", -1);

      bdsDeltaA_r16 = new Asn1Integer();
      bdsDeltaA_r16.decode (buffer, -33554432, 33554431);
      buffer.getContext().eventDispatcher.endElement("bdsDeltaA_r16", -1);

      // decode bdsAdot_r16

      buffer.getContext().eventDispatcher.startElement("bdsAdot_r16", -1);

      bdsAdot_r16 = new Asn1Integer();
      bdsAdot_r16.decode (buffer, -16777216, 16777216);
      buffer.getContext().eventDispatcher.endElement("bdsAdot_r16", -1);

      // decode bdsDeltaN0_r16

      buffer.getContext().eventDispatcher.startElement("bdsDeltaN0_r16", -1);

      bdsDeltaN0_r16 = new Asn1Integer();
      bdsDeltaN0_r16.decode (buffer, -65536, 65535);
      buffer.getContext().eventDispatcher.endElement("bdsDeltaN0_r16", -1);

      // decode bdsDeltaN0dot_r16

      buffer.getContext().eventDispatcher.startElement("bdsDeltaN0dot_r16", -1);

      bdsDeltaN0dot_r16 = new Asn1Integer();
      bdsDeltaN0dot_r16.decode (buffer, -4194304, 4194303);
      buffer.getContext().eventDispatcher.endElement("bdsDeltaN0dot_r16", -1);

      // decode bdsM0_r16

      buffer.getContext().eventDispatcher.startElement("bdsM0_r16", -1);

      bdsM0_r16 = new Asn1Integer();
      bdsM0_r16.decode (buffer, -4294967296L, 4294967295L);
      buffer.getContext().eventDispatcher.endElement("bdsM0_r16", -1);

      // decode bdsE_r16

      buffer.getContext().eventDispatcher.startElement("bdsE_r16", -1);

      bdsE_r16 = new Asn1Integer();
      bdsE_r16.decode (buffer, 0, 8589934591L);
      buffer.getContext().eventDispatcher.endElement("bdsE_r16", -1);

      // decode bdsOmega_r16

      buffer.getContext().eventDispatcher.startElement("bdsOmega_r16", -1);

      bdsOmega_r16 = new Asn1Integer();
      bdsOmega_r16.decode (buffer, -4294967296L, 4294967295L);
      buffer.getContext().eventDispatcher.endElement("bdsOmega_r16", -1);

      // decode bdsOmega0_r16

      buffer.getContext().eventDispatcher.startElement("bdsOmega0_r16", -1);

      bdsOmega0_r16 = new Asn1Integer();
      bdsOmega0_r16.decode (buffer, -4294967296L, 4294967295L);
      buffer.getContext().eventDispatcher.endElement("bdsOmega0_r16", -1);

      // decode bdsI0_r16

      buffer.getContext().eventDispatcher.startElement("bdsI0_r16", -1);

      bdsI0_r16 = new Asn1Integer();
      bdsI0_r16.decode (buffer, -4294967296L, 4294967295L);
      buffer.getContext().eventDispatcher.endElement("bdsI0_r16", -1);

      // decode bdsOmegaDot_r16

      buffer.getContext().eventDispatcher.startElement("bdsOmegaDot_r16", -1);

      bdsOmegaDot_r16 = new Asn1Integer();
      bdsOmegaDot_r16.decode (buffer, -262144, 262143);
      buffer.getContext().eventDispatcher.endElement("bdsOmegaDot_r16", -1);

      // decode bdsI0Dot_r16

      buffer.getContext().eventDispatcher.startElement("bdsI0Dot_r16", -1);

      bdsI0Dot_r16 = new Asn1Integer();
      bdsI0Dot_r16.decode (buffer, -16384, 16383);
      buffer.getContext().eventDispatcher.endElement("bdsI0Dot_r16", -1);

      // decode bdsCuc_r16

      buffer.getContext().eventDispatcher.startElement("bdsCuc_r16", -1);

      bdsCuc_r16 = new Asn1Integer();
      bdsCuc_r16.decode (buffer, -1048576, 1048575);
      buffer.getContext().eventDispatcher.endElement("bdsCuc_r16", -1);

      // decode bdsCus_r16

      buffer.getContext().eventDispatcher.startElement("bdsCus_r16", -1);

      bdsCus_r16 = new Asn1Integer();
      bdsCus_r16.decode (buffer, -1048576, 1048575);
      buffer.getContext().eventDispatcher.endElement("bdsCus_r16", -1);

      // decode bdsCrc_r16

      buffer.getContext().eventDispatcher.startElement("bdsCrc_r16", -1);

      bdsCrc_r16 = new Asn1Integer();
      bdsCrc_r16.decode (buffer, -8388608, 8388607);
      buffer.getContext().eventDispatcher.endElement("bdsCrc_r16", -1);

      // decode bdsCrs_r16

      buffer.getContext().eventDispatcher.startElement("bdsCrs_r16", -1);

      bdsCrs_r16 = new Asn1Integer();
      bdsCrs_r16.decode (buffer, -8388608, 8388607);
      buffer.getContext().eventDispatcher.endElement("bdsCrs_r16", -1);

      // decode bdsCic_r16

      buffer.getContext().eventDispatcher.startElement("bdsCic_r16", -1);

      bdsCic_r16 = new Asn1Integer();
      bdsCic_r16.decode (buffer, -32768, 32767);
      buffer.getContext().eventDispatcher.endElement("bdsCic_r16", -1);

      // decode bdsCis_r16

      buffer.getContext().eventDispatcher.startElement("bdsCis_r16", -1);

      bdsCis_r16 = new Asn1Integer();
      bdsCis_r16.decode (buffer, -32768, 32767);
      buffer.getContext().eventDispatcher.endElement("bdsCis_r16", -1);

      if (extbit) {

         int bitcnt = buffer.decodeSmallLength(), i = 0;
         long bitidx = buffer.getBitOffset() + bitcnt;
         boolean[] bitmap = new boolean [bitcnt];

         while (i < bitcnt) {
            bitmap[i++] = buffer.decodeBit ("unknown");
         }

         i = 0;

         // decode unknown extension elements

         if (i < bitcnt) {
            Asn1OpenType openType = null;
            extElem1 = new Asn1OpenExt();
            int j = 0;
            while (i < bitcnt) {
               if (bitmap[i]) {
                  buffer.getContext().eventDispatcher.startElement("...", -1);

                  openType = extElem1.decodeOpenType (buffer, true, j++);
               }
               else {
                  extElem1.setOpenType (null, j++);
               }
               i++;
            }
         }
         buffer.byteAlign ();

      }

   }

   public void encode (Asn1PerEncodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      // extension bit

      boolean extbit = (((extElem1 != null) && (!extElem1.value.isEmpty()))
      );

      buffer.encodeBit (extbit, "extbit");

      // encode bdsIODE_r16

      if (bdsIODE_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("bdsIODE_r16", -1);

         bdsIODE_r16.encode (buffer, 0, 255);

         buffer.getContext().eventDispatcher.endElement("bdsIODE_r16", -1);
      }
      else throw new Asn1MissingRequiredException ("bdsIODE_r16");

      // encode bdsToe_r16

      if (bdsToe_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("bdsToe_r16", -1);

         bdsToe_r16.encode (buffer, 0, 2047);

         buffer.getContext().eventDispatcher.endElement("bdsToe_r16", -1);
      }
      else throw new Asn1MissingRequiredException ("bdsToe_r16");

      // encode bdsDeltaA_r16

      if (bdsDeltaA_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("bdsDeltaA_r16", -1);

         bdsDeltaA_r16.encode (buffer, -33554432, 33554431);

         buffer.getContext().eventDispatcher.endElement("bdsDeltaA_r16", -1);
      }
      else throw new Asn1MissingRequiredException ("bdsDeltaA_r16");

      // encode bdsAdot_r16

      if (bdsAdot_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("bdsAdot_r16", -1);

         bdsAdot_r16.encode (buffer, -16777216, 16777216);

         buffer.getContext().eventDispatcher.endElement("bdsAdot_r16", -1);
      }
      else throw new Asn1MissingRequiredException ("bdsAdot_r16");

      // encode bdsDeltaN0_r16

      if (bdsDeltaN0_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("bdsDeltaN0_r16", -1);

         bdsDeltaN0_r16.encode (buffer, -65536, 65535);

         buffer.getContext().eventDispatcher.endElement("bdsDeltaN0_r16", -1);
      }
      else throw new Asn1MissingRequiredException ("bdsDeltaN0_r16");

      // encode bdsDeltaN0dot_r16

      if (bdsDeltaN0dot_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("bdsDeltaN0dot_r16", -1);

         bdsDeltaN0dot_r16.encode (buffer, -4194304, 4194303);

         buffer.getContext().eventDispatcher.endElement("bdsDeltaN0dot_r16", -1);
      }
      else throw new Asn1MissingRequiredException ("bdsDeltaN0dot_r16");

      // encode bdsM0_r16

      if (bdsM0_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("bdsM0_r16", -1);

         bdsM0_r16.encode (buffer, -4294967296L, 4294967295L);

         buffer.getContext().eventDispatcher.endElement("bdsM0_r16", -1);
      }
      else throw new Asn1MissingRequiredException ("bdsM0_r16");

      // encode bdsE_r16

      if (bdsE_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("bdsE_r16", -1);

         bdsE_r16.encode (buffer, 0, 8589934591L);

         buffer.getContext().eventDispatcher.endElement("bdsE_r16", -1);
      }
      else throw new Asn1MissingRequiredException ("bdsE_r16");

      // encode bdsOmega_r16

      if (bdsOmega_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("bdsOmega_r16", -1);

         bdsOmega_r16.encode (buffer, -4294967296L, 4294967295L);

         buffer.getContext().eventDispatcher.endElement("bdsOmega_r16", -1);
      }
      else throw new Asn1MissingRequiredException ("bdsOmega_r16");

      // encode bdsOmega0_r16

      if (bdsOmega0_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("bdsOmega0_r16", -1);

         bdsOmega0_r16.encode (buffer, -4294967296L, 4294967295L);

         buffer.getContext().eventDispatcher.endElement("bdsOmega0_r16", -1);
      }
      else throw new Asn1MissingRequiredException ("bdsOmega0_r16");

      // encode bdsI0_r16

      if (bdsI0_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("bdsI0_r16", -1);

         bdsI0_r16.encode (buffer, -4294967296L, 4294967295L);

         buffer.getContext().eventDispatcher.endElement("bdsI0_r16", -1);
      }
      else throw new Asn1MissingRequiredException ("bdsI0_r16");

      // encode bdsOmegaDot_r16

      if (bdsOmegaDot_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("bdsOmegaDot_r16", -1);

         bdsOmegaDot_r16.encode (buffer, -262144, 262143);

         buffer.getContext().eventDispatcher.endElement("bdsOmegaDot_r16", -1);
      }
      else throw new Asn1MissingRequiredException ("bdsOmegaDot_r16");

      // encode bdsI0Dot_r16

      if (bdsI0Dot_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("bdsI0Dot_r16", -1);

         bdsI0Dot_r16.encode (buffer, -16384, 16383);

         buffer.getContext().eventDispatcher.endElement("bdsI0Dot_r16", -1);
      }
      else throw new Asn1MissingRequiredException ("bdsI0Dot_r16");

      // encode bdsCuc_r16

      if (bdsCuc_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("bdsCuc_r16", -1);

         bdsCuc_r16.encode (buffer, -1048576, 1048575);

         buffer.getContext().eventDispatcher.endElement("bdsCuc_r16", -1);
      }
      else throw new Asn1MissingRequiredException ("bdsCuc_r16");

      // encode bdsCus_r16

      if (bdsCus_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("bdsCus_r16", -1);

         bdsCus_r16.encode (buffer, -1048576, 1048575);

         buffer.getContext().eventDispatcher.endElement("bdsCus_r16", -1);
      }
      else throw new Asn1MissingRequiredException ("bdsCus_r16");

      // encode bdsCrc_r16

      if (bdsCrc_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("bdsCrc_r16", -1);

         bdsCrc_r16.encode (buffer, -8388608, 8388607);

         buffer.getContext().eventDispatcher.endElement("bdsCrc_r16", -1);
      }
      else throw new Asn1MissingRequiredException ("bdsCrc_r16");

      // encode bdsCrs_r16

      if (bdsCrs_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("bdsCrs_r16", -1);

         bdsCrs_r16.encode (buffer, -8388608, 8388607);

         buffer.getContext().eventDispatcher.endElement("bdsCrs_r16", -1);
      }
      else throw new Asn1MissingRequiredException ("bdsCrs_r16");

      // encode bdsCic_r16

      if (bdsCic_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("bdsCic_r16", -1);

         bdsCic_r16.encode (buffer, -32768, 32767);

         buffer.getContext().eventDispatcher.endElement("bdsCic_r16", -1);
      }
      else throw new Asn1MissingRequiredException ("bdsCic_r16");

      // encode bdsCis_r16

      if (bdsCis_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("bdsCis_r16", -1);

         bdsCis_r16.encode (buffer, -32768, 32767);

         buffer.getContext().eventDispatcher.endElement("bdsCis_r16", -1);
      }
      else throw new Asn1MissingRequiredException ("bdsCis_r16");

      if (extbit) {

         // encode extension optional bits length

         int bitcnt = 0;
         if (extElem1 != null) bitcnt += extElem1.value.size();
         buffer.encodeSmallLength (bitcnt);

         // encode optional bits

         if (extElem1 != null && extElem1.value.size() > 0) {
            extElem1.encodeExtBits (buffer);
         }

         // encode extension elements

         if (extElem1 != null && extElem1.value.size() > 0) {
            extElem1.encode (buffer);
         }
      }
   }

}

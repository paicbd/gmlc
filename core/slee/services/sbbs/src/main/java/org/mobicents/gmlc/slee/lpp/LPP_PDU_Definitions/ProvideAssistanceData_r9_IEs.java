/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.5.0, Date: 07-May-2021.
 */
package org.mobicents.gmlc.slee.lpp.LPP_PDU_Definitions;

import com.objsys.asn1j.runtime.*;

public class ProvideAssistanceData_r9_IEs extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_LPP_PDU_DefinitionsRtkey._rtkey);
      Asn1Type._setLicLocation(_LPP_PDU_DefinitionsRtkey._licLocation);
   }

   public String getAsn1TypeName()  {
      return "ProvideAssistanceData-r9-IEs";
   }

   protected CommonIEsProvideAssistanceData commonIEsProvideAssistanceData;  // optional
   protected A_GNSS_ProvideAssistanceData a_gnss_ProvideAssistanceData;  // optional
   protected OTDOA_ProvideAssistanceData otdoa_ProvideAssistanceData;  // optional
   protected EPDU_Sequence epdu_Provide_Assistance_Data;  // optional
   protected Sensor_ProvideAssistanceData_r14 sensor_ProvideAssistanceData_r14;  // optional
   protected TBS_ProvideAssistanceData_r14 tbs_ProvideAssistanceData_r14;  // optional
   protected WLAN_ProvideAssistanceData_r14 wlan_ProvideAssistanceData_r14;  // optional
   protected NR_Multi_RTT_ProvideAssistanceData_r16 nr_Multi_RTT_ProvideAssistanceData_r16;  // optional
   protected NR_DL_AoD_ProvideAssistanceData_r16 nr_DL_AoD_ProvideAssistanceData_r16;  // optional
   protected NR_DL_TDOA_ProvideAssistanceData_r16 nr_DL_TDOA_ProvideAssistanceData_r16;  // optional
   protected Asn1OpenExt extElem1;

   public ProvideAssistanceData_r9_IEs () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public ProvideAssistanceData_r9_IEs (
      CommonIEsProvideAssistanceData commonIEsProvideAssistanceData_,
      A_GNSS_ProvideAssistanceData a_gnss_ProvideAssistanceData_,
      OTDOA_ProvideAssistanceData otdoa_ProvideAssistanceData_,
      EPDU_Sequence epdu_Provide_Assistance_Data_,
      Sensor_ProvideAssistanceData_r14 sensor_ProvideAssistanceData_r14_,
      TBS_ProvideAssistanceData_r14 tbs_ProvideAssistanceData_r14_,
      WLAN_ProvideAssistanceData_r14 wlan_ProvideAssistanceData_r14_,
      NR_Multi_RTT_ProvideAssistanceData_r16 nr_Multi_RTT_ProvideAssistanceData_r16_,
      NR_DL_AoD_ProvideAssistanceData_r16 nr_DL_AoD_ProvideAssistanceData_r16_,
      NR_DL_TDOA_ProvideAssistanceData_r16 nr_DL_TDOA_ProvideAssistanceData_r16_
   ) throws Asn1Exception {
      super();
      setCommonIEsProvideAssistanceData (commonIEsProvideAssistanceData_);
      setA_gnss_ProvideAssistanceData (a_gnss_ProvideAssistanceData_);
      setOtdoa_ProvideAssistanceData (otdoa_ProvideAssistanceData_);
      setEpdu_Provide_Assistance_Data (epdu_Provide_Assistance_Data_);
      setSensor_ProvideAssistanceData_r14 (sensor_ProvideAssistanceData_r14_);
      setTbs_ProvideAssistanceData_r14 (tbs_ProvideAssistanceData_r14_);
      setWlan_ProvideAssistanceData_r14 (wlan_ProvideAssistanceData_r14_);
      setNr_Multi_RTT_ProvideAssistanceData_r16 (nr_Multi_RTT_ProvideAssistanceData_r16_);
      setNr_DL_AoD_ProvideAssistanceData_r16 (nr_DL_AoD_ProvideAssistanceData_r16_);
      setNr_DL_TDOA_ProvideAssistanceData_r16 (nr_DL_TDOA_ProvideAssistanceData_r16_);
   }

   public void init () {
      commonIEsProvideAssistanceData = null;
      a_gnss_ProvideAssistanceData = null;
      otdoa_ProvideAssistanceData = null;
      epdu_Provide_Assistance_Data = null;
      sensor_ProvideAssistanceData_r14 = null;
      tbs_ProvideAssistanceData_r14 = null;
      wlan_ProvideAssistanceData_r14 = null;
      nr_Multi_RTT_ProvideAssistanceData_r16 = null;
      nr_DL_AoD_ProvideAssistanceData_r16 = null;
      nr_DL_TDOA_ProvideAssistanceData_r16 = null;
      extElem1 = null;
   }

   public boolean equals( Object obj ) {
      if ( this == obj ) return true;
      if ( !(obj instanceof ProvideAssistanceData_r9_IEs) ) return false;

      ProvideAssistanceData_r9_IEs rhs = (ProvideAssistanceData_r9_IEs) obj;

      if (commonIEsProvideAssistanceData == null) {
         if (rhs.commonIEsProvideAssistanceData != null) return false;
      }
      else {
         if (!commonIEsProvideAssistanceData.equals(rhs.commonIEsProvideAssistanceData)) {
            return false;
         }
      }

      if (a_gnss_ProvideAssistanceData == null) {
         if (rhs.a_gnss_ProvideAssistanceData != null) return false;
      }
      else {
         if (!a_gnss_ProvideAssistanceData.equals(rhs.a_gnss_ProvideAssistanceData)) {
            return false;
         }
      }

      if (otdoa_ProvideAssistanceData == null) {
         if (rhs.otdoa_ProvideAssistanceData != null) return false;
      }
      else {
         if (!otdoa_ProvideAssistanceData.equals(rhs.otdoa_ProvideAssistanceData)) {
            return false;
         }
      }

      if (epdu_Provide_Assistance_Data == null) {
         if (rhs.epdu_Provide_Assistance_Data != null) return false;
      }
      else {
         if (!epdu_Provide_Assistance_Data.equals(rhs.epdu_Provide_Assistance_Data)) {
            return false;
         }
      }

      if (sensor_ProvideAssistanceData_r14 == null) {
         if (rhs.sensor_ProvideAssistanceData_r14 != null) return false;
      }
      else {
         if (!sensor_ProvideAssistanceData_r14.equals(rhs.sensor_ProvideAssistanceData_r14)) {
            return false;
         }
      }

      if (tbs_ProvideAssistanceData_r14 == null) {
         if (rhs.tbs_ProvideAssistanceData_r14 != null) return false;
      }
      else {
         if (!tbs_ProvideAssistanceData_r14.equals(rhs.tbs_ProvideAssistanceData_r14)) {
            return false;
         }
      }

      if (wlan_ProvideAssistanceData_r14 == null) {
         if (rhs.wlan_ProvideAssistanceData_r14 != null) return false;
      }
      else {
         if (!wlan_ProvideAssistanceData_r14.equals(rhs.wlan_ProvideAssistanceData_r14)) {
            return false;
         }
      }

      if (nr_Multi_RTT_ProvideAssistanceData_r16 == null) {
         if (rhs.nr_Multi_RTT_ProvideAssistanceData_r16 != null) return false;
      }
      else {
         if (!nr_Multi_RTT_ProvideAssistanceData_r16.equals(rhs.nr_Multi_RTT_ProvideAssistanceData_r16)) {
            return false;
         }
      }

      if (nr_DL_AoD_ProvideAssistanceData_r16 == null) {
         if (rhs.nr_DL_AoD_ProvideAssistanceData_r16 != null) return false;
      }
      else {
         if (!nr_DL_AoD_ProvideAssistanceData_r16.equals(rhs.nr_DL_AoD_ProvideAssistanceData_r16)) {
            return false;
         }
      }

      if (nr_DL_TDOA_ProvideAssistanceData_r16 == null) {
         if (rhs.nr_DL_TDOA_ProvideAssistanceData_r16 != null) return false;
      }
      else {
         if (!nr_DL_TDOA_ProvideAssistanceData_r16.equals(rhs.nr_DL_TDOA_ProvideAssistanceData_r16)) {
            return false;
         }
      }

      if (extElem1 == null) {
         if (rhs.extElem1 != null) return false;
      }
      else {
         if (!extElem1.equals(rhs.extElem1)) {
            return false;
         }
      }

      return true;
   }

   public int hashCode() {
      int __code = 1;

      if (commonIEsProvideAssistanceData != null) __code = 31*__code + commonIEsProvideAssistanceData.hashCode();
      if (a_gnss_ProvideAssistanceData != null) __code = 31*__code + a_gnss_ProvideAssistanceData.hashCode();
      if (otdoa_ProvideAssistanceData != null) __code = 31*__code + otdoa_ProvideAssistanceData.hashCode();
      if (epdu_Provide_Assistance_Data != null) __code = 31*__code + epdu_Provide_Assistance_Data.hashCode();
      if (sensor_ProvideAssistanceData_r14 != null) __code = 31*__code + sensor_ProvideAssistanceData_r14.hashCode();
      if (tbs_ProvideAssistanceData_r14 != null) __code = 31*__code + tbs_ProvideAssistanceData_r14.hashCode();
      if (wlan_ProvideAssistanceData_r14 != null) __code = 31*__code + wlan_ProvideAssistanceData_r14.hashCode();
      if (nr_Multi_RTT_ProvideAssistanceData_r16 != null) __code = 31*__code + nr_Multi_RTT_ProvideAssistanceData_r16.hashCode();
      if (nr_DL_AoD_ProvideAssistanceData_r16 != null) __code = 31*__code + nr_DL_AoD_ProvideAssistanceData_r16.hashCode();
      if (nr_DL_TDOA_ProvideAssistanceData_r16 != null) __code = 31*__code + nr_DL_TDOA_ProvideAssistanceData_r16.hashCode();
      if (extElem1 != null) __code = 31*__code + extElem1.hashCode();

      return __code;
   }

   /**
    * Accessor/mutator methods for CommonIEsProvideAssistanceData
    */
   public CommonIEsProvideAssistanceData getCommonIEsProvideAssistanceData () {
      return commonIEsProvideAssistanceData;
   }

   public void setCommonIEsProvideAssistanceData (CommonIEsProvideAssistanceData value) {
      this.commonIEsProvideAssistanceData = value;
   }

   public boolean hasCommonIEsProvideAssistanceData () {
      return (commonIEsProvideAssistanceData != null);
   }

   /**
    * Accessor/mutator methods for A_gnss_ProvideAssistanceData
    */
   public A_GNSS_ProvideAssistanceData getA_gnss_ProvideAssistanceData () {
      return a_gnss_ProvideAssistanceData;
   }

   public void setA_gnss_ProvideAssistanceData (A_GNSS_ProvideAssistanceData value) {
      this.a_gnss_ProvideAssistanceData = value;
   }

   public boolean hasA_gnss_ProvideAssistanceData () {
      return (a_gnss_ProvideAssistanceData != null);
   }

   /**
    * Accessor/mutator methods for Otdoa_ProvideAssistanceData
    */
   public OTDOA_ProvideAssistanceData getOtdoa_ProvideAssistanceData () {
      return otdoa_ProvideAssistanceData;
   }

   public void setOtdoa_ProvideAssistanceData (OTDOA_ProvideAssistanceData value) {
      this.otdoa_ProvideAssistanceData = value;
   }

   public boolean hasOtdoa_ProvideAssistanceData () {
      return (otdoa_ProvideAssistanceData != null);
   }

   /**
    * Accessor/mutator methods for Epdu_Provide_Assistance_Data
    */
   public EPDU_Sequence getEpdu_Provide_Assistance_Data () {
      return epdu_Provide_Assistance_Data;
   }

   public void setEpdu_Provide_Assistance_Data (EPDU_Sequence value) 
      throws Asn1Exception
   {
      if (!((value.getElements().length >= 1 && value.getElements().length <= 16))) {
         throw new Asn1ConsVioException ("value.getElements().length", value.getElements().length);
      }

      this.epdu_Provide_Assistance_Data = value;
   }

   public boolean hasEpdu_Provide_Assistance_Data () {
      return (epdu_Provide_Assistance_Data != null);
   }

   /**
    * Accessor/mutator methods for Sensor_ProvideAssistanceData_r14
    */
   public Sensor_ProvideAssistanceData_r14 getSensor_ProvideAssistanceData_r14 () {
      return sensor_ProvideAssistanceData_r14;
   }

   public void setSensor_ProvideAssistanceData_r14 (Sensor_ProvideAssistanceData_r14 value) {
      this.sensor_ProvideAssistanceData_r14 = value;
   }

   public boolean hasSensor_ProvideAssistanceData_r14 () {
      return (sensor_ProvideAssistanceData_r14 != null);
   }

   /**
    * Accessor/mutator methods for Tbs_ProvideAssistanceData_r14
    */
   public TBS_ProvideAssistanceData_r14 getTbs_ProvideAssistanceData_r14 () {
      return tbs_ProvideAssistanceData_r14;
   }

   public void setTbs_ProvideAssistanceData_r14 (TBS_ProvideAssistanceData_r14 value) {
      this.tbs_ProvideAssistanceData_r14 = value;
   }

   public boolean hasTbs_ProvideAssistanceData_r14 () {
      return (tbs_ProvideAssistanceData_r14 != null);
   }

   /**
    * Accessor/mutator methods for Wlan_ProvideAssistanceData_r14
    */
   public WLAN_ProvideAssistanceData_r14 getWlan_ProvideAssistanceData_r14 () {
      return wlan_ProvideAssistanceData_r14;
   }

   public void setWlan_ProvideAssistanceData_r14 (WLAN_ProvideAssistanceData_r14 value) {
      this.wlan_ProvideAssistanceData_r14 = value;
   }

   public boolean hasWlan_ProvideAssistanceData_r14 () {
      return (wlan_ProvideAssistanceData_r14 != null);
   }

   /**
    * Accessor/mutator methods for Nr_Multi_RTT_ProvideAssistanceData_r16
    */
   public NR_Multi_RTT_ProvideAssistanceData_r16 getNr_Multi_RTT_ProvideAssistanceData_r16 () {
      return nr_Multi_RTT_ProvideAssistanceData_r16;
   }

   public void setNr_Multi_RTT_ProvideAssistanceData_r16 (NR_Multi_RTT_ProvideAssistanceData_r16 value) {
      this.nr_Multi_RTT_ProvideAssistanceData_r16 = value;
   }

   public boolean hasNr_Multi_RTT_ProvideAssistanceData_r16 () {
      return (nr_Multi_RTT_ProvideAssistanceData_r16 != null);
   }

   /**
    * Accessor/mutator methods for Nr_DL_AoD_ProvideAssistanceData_r16
    */
   public NR_DL_AoD_ProvideAssistanceData_r16 getNr_DL_AoD_ProvideAssistanceData_r16 () {
      return nr_DL_AoD_ProvideAssistanceData_r16;
   }

   public void setNr_DL_AoD_ProvideAssistanceData_r16 (NR_DL_AoD_ProvideAssistanceData_r16 value) {
      this.nr_DL_AoD_ProvideAssistanceData_r16 = value;
   }

   public boolean hasNr_DL_AoD_ProvideAssistanceData_r16 () {
      return (nr_DL_AoD_ProvideAssistanceData_r16 != null);
   }

   /**
    * Accessor/mutator methods for Nr_DL_TDOA_ProvideAssistanceData_r16
    */
   public NR_DL_TDOA_ProvideAssistanceData_r16 getNr_DL_TDOA_ProvideAssistanceData_r16 () {
      return nr_DL_TDOA_ProvideAssistanceData_r16;
   }

   public void setNr_DL_TDOA_ProvideAssistanceData_r16 (NR_DL_TDOA_ProvideAssistanceData_r16 value) {
      this.nr_DL_TDOA_ProvideAssistanceData_r16 = value;
   }

   public boolean hasNr_DL_TDOA_ProvideAssistanceData_r16 () {
      return (nr_DL_TDOA_ProvideAssistanceData_r16 != null);
   }

   /**
    * Accessor/mutator methods for ExtElem1
    */
   public Asn1OpenExt getExtElem1 () {
      return extElem1;
   }

   public void setExtElem1 (Asn1OpenExt value) {
      this.extElem1 = value;
   }

   public int getElementCount() { return 11; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return commonIEsProvideAssistanceData;
         case 1: return a_gnss_ProvideAssistanceData;
         case 2: return otdoa_ProvideAssistanceData;
         case 3: return epdu_Provide_Assistance_Data;
         case 4: return sensor_ProvideAssistanceData_r14;
         case 5: return tbs_ProvideAssistanceData_r14;
         case 6: return wlan_ProvideAssistanceData_r14;
         case 7: return nr_Multi_RTT_ProvideAssistanceData_r16;
         case 8: return nr_DL_AoD_ProvideAssistanceData_r16;
         case 9: return nr_DL_TDOA_ProvideAssistanceData_r16;
         case 10: return extElem1;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "commonIEsProvideAssistanceData";
         case 1: return "a-gnss-ProvideAssistanceData";
         case 2: return "otdoa-ProvideAssistanceData";
         case 3: return "epdu-Provide-Assistance-Data";
         case 4: return "sensor-ProvideAssistanceData-r14";
         case 5: return "tbs-ProvideAssistanceData-r14";
         case 6: return "wlan-ProvideAssistanceData-r14";
         case 7: return "nr-Multi-RTT-ProvideAssistanceData-r16";
         case 8: return "nr-DL-AoD-ProvideAssistanceData-r16";
         case 9: return "nr-DL-TDOA-ProvideAssistanceData-r16";
         case 10: return null;
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // extension bit

      boolean extbit = buffer.decodeBit ("extbit");

      // optional bits

      boolean commonIEsProvideAssistanceDataPresent = buffer.decodeBit ("commonIEsProvideAssistanceDataPresent");
      boolean a_gnss_ProvideAssistanceDataPresent = buffer.decodeBit ("a_gnss_ProvideAssistanceDataPresent");
      boolean otdoa_ProvideAssistanceDataPresent = buffer.decodeBit ("otdoa_ProvideAssistanceDataPresent");
      boolean epdu_Provide_Assistance_DataPresent = buffer.decodeBit ("epdu_Provide_Assistance_DataPresent");

      // decode commonIEsProvideAssistanceData

      if (commonIEsProvideAssistanceDataPresent) {
         buffer.getContext().eventDispatcher.startElement("commonIEsProvideAssistanceData", -1);

         commonIEsProvideAssistanceData = new CommonIEsProvideAssistanceData();
         commonIEsProvideAssistanceData.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("commonIEsProvideAssistanceData", -1);
      }
      else {
         commonIEsProvideAssistanceData = null;
      }

      // decode a_gnss_ProvideAssistanceData

      if (a_gnss_ProvideAssistanceDataPresent) {
         buffer.getContext().eventDispatcher.startElement("a_gnss_ProvideAssistanceData", -1);

         a_gnss_ProvideAssistanceData = new A_GNSS_ProvideAssistanceData();
         a_gnss_ProvideAssistanceData.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("a_gnss_ProvideAssistanceData", -1);
      }
      else {
         a_gnss_ProvideAssistanceData = null;
      }

      // decode otdoa_ProvideAssistanceData

      if (otdoa_ProvideAssistanceDataPresent) {
         buffer.getContext().eventDispatcher.startElement("otdoa_ProvideAssistanceData", -1);

         otdoa_ProvideAssistanceData = new OTDOA_ProvideAssistanceData();
         otdoa_ProvideAssistanceData.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("otdoa_ProvideAssistanceData", -1);
      }
      else {
         otdoa_ProvideAssistanceData = null;
      }

      // decode epdu_Provide_Assistance_Data

      if (epdu_Provide_Assistance_DataPresent) {
         buffer.getContext().eventDispatcher.startElement("epdu_Provide_Assistance_Data", -1);

         epdu_Provide_Assistance_Data = new EPDU_Sequence();
         epdu_Provide_Assistance_Data.decode (buffer);
         buffer.getContext().eventDispatcher.endElement("epdu_Provide_Assistance_Data", -1);
      }
      else {
         epdu_Provide_Assistance_Data = null;
      }

      if (extbit) {

         int bitcnt = buffer.decodeSmallLength(), i = 0;
         long bitidx = buffer.getBitOffset() + bitcnt;
         boolean[] bitmap = new boolean [bitcnt];

         if (i < bitcnt) bitmap[i++] = buffer.decodeBit ("sensor_ProvideAssistanceData_r14Present");
         if (i < bitcnt) bitmap[i++] = buffer.decodeBit ("tbs_ProvideAssistanceData_r14Present");
         if (i < bitcnt) bitmap[i++] = buffer.decodeBit ("wlan_ProvideAssistanceData_r14Present");
         if (i < bitcnt) bitmap[i++] = buffer.decodeBit ("nr_Multi_RTT_ProvideAssistanceData_r16Present");
         if (i < bitcnt) bitmap[i++] = buffer.decodeBit ("nr_DL_AoD_ProvideAssistanceData_r16Present");
         if (i < bitcnt) bitmap[i++] = buffer.decodeBit ("nr_DL_TDOA_ProvideAssistanceData_r16Present");

         while (i < bitcnt) {
            bitmap[i++] = buffer.decodeBit ("unknown");
         }

         i = 0;

         // decode sensor_ProvideAssistanceData_r14

         if (i < bitcnt && bitmap[i++]) {
            buffer.getContext().eventDispatcher.startElement("sensor_ProvideAssistanceData_r14", -1);

            long _curidx = buffer.getBitOffset();
            bitidx = buffer.decodeExtLength ();
            if (bitidx - _curidx >= 131088)  {
               throw new Asn1Exception ("PER fragmentation not enabled: add -perindef to decode");
            }

            sensor_ProvideAssistanceData_r14 = new Sensor_ProvideAssistanceData_r14();
            sensor_ProvideAssistanceData_r14.decode (buffer);

            buffer.moveBitCursor (bitidx);
            buffer.getContext().eventDispatcher.endElement("sensor_ProvideAssistanceData_r14", -1);

         }
         else {
            sensor_ProvideAssistanceData_r14 = null;
         }

         // decode tbs_ProvideAssistanceData_r14

         if (i < bitcnt && bitmap[i++]) {
            buffer.getContext().eventDispatcher.startElement("tbs_ProvideAssistanceData_r14", -1);

            long _curidx = buffer.getBitOffset();
            bitidx = buffer.decodeExtLength ();
            if (bitidx - _curidx >= 131088)  {
               throw new Asn1Exception ("PER fragmentation not enabled: add -perindef to decode");
            }

            tbs_ProvideAssistanceData_r14 = new TBS_ProvideAssistanceData_r14();
            tbs_ProvideAssistanceData_r14.decode (buffer);

            buffer.moveBitCursor (bitidx);
            buffer.getContext().eventDispatcher.endElement("tbs_ProvideAssistanceData_r14", -1);

         }
         else {
            tbs_ProvideAssistanceData_r14 = null;
         }

         // decode wlan_ProvideAssistanceData_r14

         if (i < bitcnt && bitmap[i++]) {
            buffer.getContext().eventDispatcher.startElement("wlan_ProvideAssistanceData_r14", -1);

            long _curidx = buffer.getBitOffset();
            bitidx = buffer.decodeExtLength ();
            if (bitidx - _curidx >= 131088)  {
               throw new Asn1Exception ("PER fragmentation not enabled: add -perindef to decode");
            }

            wlan_ProvideAssistanceData_r14 = new WLAN_ProvideAssistanceData_r14();
            wlan_ProvideAssistanceData_r14.decode (buffer);

            buffer.moveBitCursor (bitidx);
            buffer.getContext().eventDispatcher.endElement("wlan_ProvideAssistanceData_r14", -1);

         }
         else {
            wlan_ProvideAssistanceData_r14 = null;
         }

         // decode nr_Multi_RTT_ProvideAssistanceData_r16

         if (i < bitcnt && bitmap[i++]) {
            buffer.getContext().eventDispatcher.startElement("nr_Multi_RTT_ProvideAssistanceData_r16", -1);

            long _curidx = buffer.getBitOffset();
            bitidx = buffer.decodeExtLength ();
            if (bitidx - _curidx >= 131088)  {
               throw new Asn1Exception ("PER fragmentation not enabled: add -perindef to decode");
            }

            nr_Multi_RTT_ProvideAssistanceData_r16 = new NR_Multi_RTT_ProvideAssistanceData_r16();
            nr_Multi_RTT_ProvideAssistanceData_r16.decode (buffer);

            buffer.moveBitCursor (bitidx);
            buffer.getContext().eventDispatcher.endElement("nr_Multi_RTT_ProvideAssistanceData_r16", -1);

         }
         else {
            nr_Multi_RTT_ProvideAssistanceData_r16 = null;
         }

         // decode nr_DL_AoD_ProvideAssistanceData_r16

         if (i < bitcnt && bitmap[i++]) {
            buffer.getContext().eventDispatcher.startElement("nr_DL_AoD_ProvideAssistanceData_r16", -1);

            long _curidx = buffer.getBitOffset();
            bitidx = buffer.decodeExtLength ();
            if (bitidx - _curidx >= 131088)  {
               throw new Asn1Exception ("PER fragmentation not enabled: add -perindef to decode");
            }

            nr_DL_AoD_ProvideAssistanceData_r16 = new NR_DL_AoD_ProvideAssistanceData_r16();
            nr_DL_AoD_ProvideAssistanceData_r16.decode (buffer);

            buffer.moveBitCursor (bitidx);
            buffer.getContext().eventDispatcher.endElement("nr_DL_AoD_ProvideAssistanceData_r16", -1);

         }
         else {
            nr_DL_AoD_ProvideAssistanceData_r16 = null;
         }

         // decode nr_DL_TDOA_ProvideAssistanceData_r16

         if (i < bitcnt && bitmap[i++]) {
            buffer.getContext().eventDispatcher.startElement("nr_DL_TDOA_ProvideAssistanceData_r16", -1);

            long _curidx = buffer.getBitOffset();
            bitidx = buffer.decodeExtLength ();
            if (bitidx - _curidx >= 131088)  {
               throw new Asn1Exception ("PER fragmentation not enabled: add -perindef to decode");
            }

            nr_DL_TDOA_ProvideAssistanceData_r16 = new NR_DL_TDOA_ProvideAssistanceData_r16();
            nr_DL_TDOA_ProvideAssistanceData_r16.decode (buffer);

            buffer.moveBitCursor (bitidx);
            buffer.getContext().eventDispatcher.endElement("nr_DL_TDOA_ProvideAssistanceData_r16", -1);

         }
         else {
            nr_DL_TDOA_ProvideAssistanceData_r16 = null;
         }

         // decode unknown extension elements

         if (i < bitcnt) {
            Asn1OpenType openType = null;
            extElem1 = new Asn1OpenExt();
            int j = 0;
            while (i < bitcnt) {
               if (bitmap[i]) {
                  buffer.getContext().eventDispatcher.startElement("...", -1);

                  openType = extElem1.decodeOpenType (buffer, true, j++);
               }
               else {
                  extElem1.setOpenType (null, j++);
               }
               i++;
            }
         }
         buffer.byteAlign ();

      }

   }

   public void encode (Asn1PerEncodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      // extension bit

      boolean extbit = ((sensor_ProvideAssistanceData_r14 != null) ||
      (tbs_ProvideAssistanceData_r14 != null) ||
      (wlan_ProvideAssistanceData_r14 != null) ||
      (nr_Multi_RTT_ProvideAssistanceData_r16 != null) ||
      (nr_DL_AoD_ProvideAssistanceData_r16 != null) ||
      (nr_DL_TDOA_ProvideAssistanceData_r16 != null) ||
      ((extElem1 != null) && (!extElem1.value.isEmpty()))
      );

      buffer.encodeBit (extbit, "extbit");

      // encode optional elements bit mask

      buffer.encodeBit ((commonIEsProvideAssistanceData != null), null);
      buffer.encodeBit ((a_gnss_ProvideAssistanceData != null), null);
      buffer.encodeBit ((otdoa_ProvideAssistanceData != null), null);
      buffer.encodeBit ((epdu_Provide_Assistance_Data != null), null);

      // encode commonIEsProvideAssistanceData

      if (commonIEsProvideAssistanceData != null) {
         buffer.getContext().eventDispatcher.startElement("commonIEsProvideAssistanceData", -1);

         commonIEsProvideAssistanceData.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("commonIEsProvideAssistanceData", -1);
      }

      // encode a_gnss_ProvideAssistanceData

      if (a_gnss_ProvideAssistanceData != null) {
         buffer.getContext().eventDispatcher.startElement("a_gnss_ProvideAssistanceData", -1);

         a_gnss_ProvideAssistanceData.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("a_gnss_ProvideAssistanceData", -1);
      }

      // encode otdoa_ProvideAssistanceData

      if (otdoa_ProvideAssistanceData != null) {
         buffer.getContext().eventDispatcher.startElement("otdoa_ProvideAssistanceData", -1);

         otdoa_ProvideAssistanceData.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("otdoa_ProvideAssistanceData", -1);
      }

      // encode epdu_Provide_Assistance_Data

      if (epdu_Provide_Assistance_Data != null) {
         buffer.getContext().eventDispatcher.startElement("epdu_Provide_Assistance_Data", -1);

         epdu_Provide_Assistance_Data.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("epdu_Provide_Assistance_Data", -1);
      }

      if (extbit) {

         // encode extension optional bits length

         int bitcnt = 6;
         if (extElem1 != null) bitcnt += extElem1.value.size();
         buffer.encodeSmallLength (bitcnt);

         // encode optional bits

         buffer.encodeBit ((sensor_ProvideAssistanceData_r14 != null), null);
         buffer.encodeBit ((tbs_ProvideAssistanceData_r14 != null), null);
         buffer.encodeBit ((wlan_ProvideAssistanceData_r14 != null), null);
         buffer.encodeBit ((nr_Multi_RTT_ProvideAssistanceData_r16 != null), null);
         buffer.encodeBit ((nr_DL_AoD_ProvideAssistanceData_r16 != null), null);
         buffer.encodeBit ((nr_DL_TDOA_ProvideAssistanceData_r16 != null), null);

         if (extElem1 != null && extElem1.value.size() > 0) {
            extElem1.encodeExtBits (buffer);
         }

         // encode extension elements

         Asn1PerEncodeBuffer mainBuffer = buffer;
         buffer = new Asn1PerEncodeBuffer (buffer.isAligned());

         // sensor_ProvideAssistanceData_r14

         if (sensor_ProvideAssistanceData_r14 != null) {
            buffer.reset();
            sensor_ProvideAssistanceData_r14.encode (buffer);
            buffer.getContext().eventDispatcher.startElement("sensor_ProvideAssistanceData_r14", -1);

            mainBuffer.encodeOpenType (buffer, null);

            buffer.getContext().eventDispatcher.endElement("sensor_ProvideAssistanceData_r14", -1);
         }

         // tbs_ProvideAssistanceData_r14

         if (tbs_ProvideAssistanceData_r14 != null) {
            buffer.reset();
            tbs_ProvideAssistanceData_r14.encode (buffer);
            buffer.getContext().eventDispatcher.startElement("tbs_ProvideAssistanceData_r14", -1);

            mainBuffer.encodeOpenType (buffer, null);

            buffer.getContext().eventDispatcher.endElement("tbs_ProvideAssistanceData_r14", -1);
         }

         // wlan_ProvideAssistanceData_r14

         if (wlan_ProvideAssistanceData_r14 != null) {
            buffer.reset();
            wlan_ProvideAssistanceData_r14.encode (buffer);
            buffer.getContext().eventDispatcher.startElement("wlan_ProvideAssistanceData_r14", -1);

            mainBuffer.encodeOpenType (buffer, null);

            buffer.getContext().eventDispatcher.endElement("wlan_ProvideAssistanceData_r14", -1);
         }

         // nr_Multi_RTT_ProvideAssistanceData_r16

         if (nr_Multi_RTT_ProvideAssistanceData_r16 != null) {
            buffer.reset();
            nr_Multi_RTT_ProvideAssistanceData_r16.encode (buffer);
            buffer.getContext().eventDispatcher.startElement("nr_Multi_RTT_ProvideAssistanceData_r16", -1);

            mainBuffer.encodeOpenType (buffer, null);

            buffer.getContext().eventDispatcher.endElement("nr_Multi_RTT_ProvideAssistanceData_r16", -1);
         }

         // nr_DL_AoD_ProvideAssistanceData_r16

         if (nr_DL_AoD_ProvideAssistanceData_r16 != null) {
            buffer.reset();
            nr_DL_AoD_ProvideAssistanceData_r16.encode (buffer);
            buffer.getContext().eventDispatcher.startElement("nr_DL_AoD_ProvideAssistanceData_r16", -1);

            mainBuffer.encodeOpenType (buffer, null);

            buffer.getContext().eventDispatcher.endElement("nr_DL_AoD_ProvideAssistanceData_r16", -1);
         }

         // nr_DL_TDOA_ProvideAssistanceData_r16

         if (nr_DL_TDOA_ProvideAssistanceData_r16 != null) {
            buffer.reset();
            nr_DL_TDOA_ProvideAssistanceData_r16.encode (buffer);
            buffer.getContext().eventDispatcher.startElement("nr_DL_TDOA_ProvideAssistanceData_r16", -1);

            mainBuffer.encodeOpenType (buffer, null);

            buffer.getContext().eventDispatcher.endElement("nr_DL_TDOA_ProvideAssistanceData_r16", -1);
         }

         buffer = mainBuffer;

         if (extElem1 != null && extElem1.value.size() > 0) {
            extElem1.encode (buffer);
         }
      }
   }

}

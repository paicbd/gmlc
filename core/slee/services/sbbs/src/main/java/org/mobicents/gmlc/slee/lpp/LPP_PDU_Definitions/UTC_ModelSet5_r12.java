/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.5.0, Date: 07-May-2021.
 */
package org.mobicents.gmlc.slee.lpp.LPP_PDU_Definitions;

import com.objsys.asn1j.runtime.*;

public class UTC_ModelSet5_r12 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_LPP_PDU_DefinitionsRtkey._rtkey);
      Asn1Type._setLicLocation(_LPP_PDU_DefinitionsRtkey._licLocation);
   }

   public String getAsn1TypeName()  {
      return "UTC-ModelSet5-r12";
   }

   protected Asn1Integer utcA0_r12;
   protected Asn1Integer utcA1_r12;
   protected Asn1Integer utcDeltaTls_r12;
   protected Asn1Integer utcWNlsf_r12;
   protected Asn1Integer utcDN_r12;
   protected Asn1Integer utcDeltaTlsf_r12;
   protected Asn1OpenExt extElem1;

   public UTC_ModelSet5_r12 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public UTC_ModelSet5_r12 (
      Asn1Integer utcA0_r12_,
      Asn1Integer utcA1_r12_,
      Asn1Integer utcDeltaTls_r12_,
      Asn1Integer utcWNlsf_r12_,
      Asn1Integer utcDN_r12_,
      Asn1Integer utcDeltaTlsf_r12_
   ) throws Asn1Exception {
      super();
      setUtcA0_r12 (utcA0_r12_);
      setUtcA1_r12 (utcA1_r12_);
      setUtcDeltaTls_r12 (utcDeltaTls_r12_);
      setUtcWNlsf_r12 (utcWNlsf_r12_);
      setUtcDN_r12 (utcDN_r12_);
      setUtcDeltaTlsf_r12 (utcDeltaTlsf_r12_);
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public UTC_ModelSet5_r12 (long utcA0_r12_,
      long utcA1_r12_,
      long utcDeltaTls_r12_,
      long utcWNlsf_r12_,
      long utcDN_r12_,
      long utcDeltaTlsf_r12_
   ) throws Asn1Exception {
      super();
      setUtcA0_r12 (utcA0_r12_);
      setUtcA1_r12 (utcA1_r12_);
      setUtcDeltaTls_r12 (utcDeltaTls_r12_);
      setUtcWNlsf_r12 (utcWNlsf_r12_);
      setUtcDN_r12 (utcDN_r12_);
      setUtcDeltaTlsf_r12 (utcDeltaTlsf_r12_);
   }

   public void init () {
      utcA0_r12 = null;
      utcA1_r12 = null;
      utcDeltaTls_r12 = null;
      utcWNlsf_r12 = null;
      utcDN_r12 = null;
      utcDeltaTlsf_r12 = null;
      extElem1 = null;
   }

   public boolean equals( Object obj ) {
      if ( this == obj ) return true;
      if ( !(obj instanceof UTC_ModelSet5_r12) ) return false;

      UTC_ModelSet5_r12 rhs = (UTC_ModelSet5_r12) obj;

      if (utcA0_r12 == null) {
         if (rhs.utcA0_r12 != null) return false;
      }
      else {
         if (!utcA0_r12.equals(rhs.utcA0_r12)) {
            return false;
         }
      }

      if (utcA1_r12 == null) {
         if (rhs.utcA1_r12 != null) return false;
      }
      else {
         if (!utcA1_r12.equals(rhs.utcA1_r12)) {
            return false;
         }
      }

      if (utcDeltaTls_r12 == null) {
         if (rhs.utcDeltaTls_r12 != null) return false;
      }
      else {
         if (!utcDeltaTls_r12.equals(rhs.utcDeltaTls_r12)) {
            return false;
         }
      }

      if (utcWNlsf_r12 == null) {
         if (rhs.utcWNlsf_r12 != null) return false;
      }
      else {
         if (!utcWNlsf_r12.equals(rhs.utcWNlsf_r12)) {
            return false;
         }
      }

      if (utcDN_r12 == null) {
         if (rhs.utcDN_r12 != null) return false;
      }
      else {
         if (!utcDN_r12.equals(rhs.utcDN_r12)) {
            return false;
         }
      }

      if (utcDeltaTlsf_r12 == null) {
         if (rhs.utcDeltaTlsf_r12 != null) return false;
      }
      else {
         if (!utcDeltaTlsf_r12.equals(rhs.utcDeltaTlsf_r12)) {
            return false;
         }
      }

      if (extElem1 == null) {
         if (rhs.extElem1 != null) return false;
      }
      else {
         if (!extElem1.equals(rhs.extElem1)) {
            return false;
         }
      }

      return true;
   }

   public int hashCode() {
      int __code = 1;

      if (utcA0_r12 != null) __code = 31*__code + utcA0_r12.hashCode();
      if (utcA1_r12 != null) __code = 31*__code + utcA1_r12.hashCode();
      if (utcDeltaTls_r12 != null) __code = 31*__code + utcDeltaTls_r12.hashCode();
      if (utcWNlsf_r12 != null) __code = 31*__code + utcWNlsf_r12.hashCode();
      if (utcDN_r12 != null) __code = 31*__code + utcDN_r12.hashCode();
      if (utcDeltaTlsf_r12 != null) __code = 31*__code + utcDeltaTlsf_r12.hashCode();
      if (extElem1 != null) __code = 31*__code + extElem1.hashCode();

      return __code;
   }

   /**
    * Accessor/mutator methods for UtcA0_r12
    */
   public Asn1Integer getUtcA0_r12 () {
      return utcA0_r12;
   }

   public void setUtcA0_r12 (Asn1Integer value) 
      throws Asn1Exception
   {
      this.utcA0_r12 = value;
   }

   public void setUtcA0_r12 (long value) 
      throws Asn1Exception
   {
      setUtcA0_r12 (new Asn1Integer(value));
   }

   /**
    * Accessor/mutator methods for UtcA1_r12
    */
   public Asn1Integer getUtcA1_r12 () {
      return utcA1_r12;
   }

   public void setUtcA1_r12 (Asn1Integer value) 
      throws Asn1Exception
   {
      if (!((value.value >= -8388608 && value.value <= 8388607))) {
         throw new Asn1ConsVioException ("value.value", value.value);
      }

      this.utcA1_r12 = value;
   }

   public void setUtcA1_r12 (long value) 
      throws Asn1Exception
   {
      setUtcA1_r12 (new Asn1Integer(value));
   }

   /**
    * Accessor/mutator methods for UtcDeltaTls_r12
    */
   public Asn1Integer getUtcDeltaTls_r12 () {
      return utcDeltaTls_r12;
   }

   public void setUtcDeltaTls_r12 (Asn1Integer value) 
      throws Asn1Exception
   {
      if (!((value.value >= -128 && value.value <= 127))) {
         throw new Asn1ConsVioException ("value.value", value.value);
      }

      this.utcDeltaTls_r12 = value;
   }

   public void setUtcDeltaTls_r12 (long value) 
      throws Asn1Exception
   {
      setUtcDeltaTls_r12 (new Asn1Integer(value));
   }

   /**
    * Accessor/mutator methods for UtcWNlsf_r12
    */
   public Asn1Integer getUtcWNlsf_r12 () {
      return utcWNlsf_r12;
   }

   public void setUtcWNlsf_r12 (Asn1Integer value) 
      throws Asn1Exception
   {
      if (!((value.value >= 0 && value.value <= 255))) {
         throw new Asn1ConsVioException ("value.value", value.value);
      }

      this.utcWNlsf_r12 = value;
   }

   public void setUtcWNlsf_r12 (long value) 
      throws Asn1Exception
   {
      setUtcWNlsf_r12 (new Asn1Integer(value));
   }

   /**
    * Accessor/mutator methods for UtcDN_r12
    */
   public Asn1Integer getUtcDN_r12 () {
      return utcDN_r12;
   }

   public void setUtcDN_r12 (Asn1Integer value) 
      throws Asn1Exception
   {
      if (!((value.value >= 0 && value.value <= 255))) {
         throw new Asn1ConsVioException ("value.value", value.value);
      }

      this.utcDN_r12 = value;
   }

   public void setUtcDN_r12 (long value) 
      throws Asn1Exception
   {
      setUtcDN_r12 (new Asn1Integer(value));
   }

   /**
    * Accessor/mutator methods for UtcDeltaTlsf_r12
    */
   public Asn1Integer getUtcDeltaTlsf_r12 () {
      return utcDeltaTlsf_r12;
   }

   public void setUtcDeltaTlsf_r12 (Asn1Integer value) 
      throws Asn1Exception
   {
      if (!((value.value >= -128 && value.value <= 127))) {
         throw new Asn1ConsVioException ("value.value", value.value);
      }

      this.utcDeltaTlsf_r12 = value;
   }

   public void setUtcDeltaTlsf_r12 (long value) 
      throws Asn1Exception
   {
      setUtcDeltaTlsf_r12 (new Asn1Integer(value));
   }

   /**
    * Accessor/mutator methods for ExtElem1
    */
   public Asn1OpenExt getExtElem1 () {
      return extElem1;
   }

   public void setExtElem1 (Asn1OpenExt value) {
      this.extElem1 = value;
   }

   public int getElementCount() { return 7; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return utcA0_r12;
         case 1: return utcA1_r12;
         case 2: return utcDeltaTls_r12;
         case 3: return utcWNlsf_r12;
         case 4: return utcDN_r12;
         case 5: return utcDeltaTlsf_r12;
         case 6: return extElem1;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "utcA0-r12";
         case 1: return "utcA1-r12";
         case 2: return "utcDeltaTls-r12";
         case 3: return "utcWNlsf-r12";
         case 4: return "utcDN-r12";
         case 5: return "utcDeltaTlsf-r12";
         case 6: return null;
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // extension bit

      boolean extbit = buffer.decodeBit ("extbit");

      // decode utcA0_r12

      buffer.getContext().eventDispatcher.startElement("utcA0_r12", -1);

      utcA0_r12 = new Asn1Integer();
      utcA0_r12.decode (buffer, -2147483648, 2147483647);
      buffer.getContext().eventDispatcher.endElement("utcA0_r12", -1);

      // decode utcA1_r12

      buffer.getContext().eventDispatcher.startElement("utcA1_r12", -1);

      utcA1_r12 = new Asn1Integer();
      utcA1_r12.decode (buffer, -8388608, 8388607);
      buffer.getContext().eventDispatcher.endElement("utcA1_r12", -1);

      // decode utcDeltaTls_r12

      buffer.getContext().eventDispatcher.startElement("utcDeltaTls_r12", -1);

      utcDeltaTls_r12 = new Asn1Integer();
      utcDeltaTls_r12.decode (buffer, -128, 127);
      buffer.getContext().eventDispatcher.endElement("utcDeltaTls_r12", -1);

      // decode utcWNlsf_r12

      buffer.getContext().eventDispatcher.startElement("utcWNlsf_r12", -1);

      utcWNlsf_r12 = new Asn1Integer();
      utcWNlsf_r12.decode (buffer, 0, 255);
      buffer.getContext().eventDispatcher.endElement("utcWNlsf_r12", -1);

      // decode utcDN_r12

      buffer.getContext().eventDispatcher.startElement("utcDN_r12", -1);

      utcDN_r12 = new Asn1Integer();
      utcDN_r12.decode (buffer, 0, 255);
      buffer.getContext().eventDispatcher.endElement("utcDN_r12", -1);

      // decode utcDeltaTlsf_r12

      buffer.getContext().eventDispatcher.startElement("utcDeltaTlsf_r12", -1);

      utcDeltaTlsf_r12 = new Asn1Integer();
      utcDeltaTlsf_r12.decode (buffer, -128, 127);
      buffer.getContext().eventDispatcher.endElement("utcDeltaTlsf_r12", -1);

      if (extbit) {

         int bitcnt = buffer.decodeSmallLength(), i = 0;
         long bitidx = buffer.getBitOffset() + bitcnt;
         boolean[] bitmap = new boolean [bitcnt];

         while (i < bitcnt) {
            bitmap[i++] = buffer.decodeBit ("unknown");
         }

         i = 0;

         // decode unknown extension elements

         if (i < bitcnt) {
            Asn1OpenType openType = null;
            extElem1 = new Asn1OpenExt();
            int j = 0;
            while (i < bitcnt) {
               if (bitmap[i]) {
                  buffer.getContext().eventDispatcher.startElement("...", -1);

                  openType = extElem1.decodeOpenType (buffer, true, j++);
               }
               else {
                  extElem1.setOpenType (null, j++);
               }
               i++;
            }
         }
         buffer.byteAlign ();

      }

   }

   public void encode (Asn1PerEncodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      // extension bit

      boolean extbit = (((extElem1 != null) && (!extElem1.value.isEmpty()))
      );

      buffer.encodeBit (extbit, "extbit");

      // encode utcA0_r12

      if (utcA0_r12 != null) {
         buffer.getContext().eventDispatcher.startElement("utcA0_r12", -1);

         utcA0_r12.encode (buffer, -2147483648, 2147483647);

         buffer.getContext().eventDispatcher.endElement("utcA0_r12", -1);
      }
      else throw new Asn1MissingRequiredException ("utcA0_r12");

      // encode utcA1_r12

      if (utcA1_r12 != null) {
         buffer.getContext().eventDispatcher.startElement("utcA1_r12", -1);

         utcA1_r12.encode (buffer, -8388608, 8388607);

         buffer.getContext().eventDispatcher.endElement("utcA1_r12", -1);
      }
      else throw new Asn1MissingRequiredException ("utcA1_r12");

      // encode utcDeltaTls_r12

      if (utcDeltaTls_r12 != null) {
         buffer.getContext().eventDispatcher.startElement("utcDeltaTls_r12", -1);

         utcDeltaTls_r12.encode (buffer, -128, 127);

         buffer.getContext().eventDispatcher.endElement("utcDeltaTls_r12", -1);
      }
      else throw new Asn1MissingRequiredException ("utcDeltaTls_r12");

      // encode utcWNlsf_r12

      if (utcWNlsf_r12 != null) {
         buffer.getContext().eventDispatcher.startElement("utcWNlsf_r12", -1);

         utcWNlsf_r12.encode (buffer, 0, 255);

         buffer.getContext().eventDispatcher.endElement("utcWNlsf_r12", -1);
      }
      else throw new Asn1MissingRequiredException ("utcWNlsf_r12");

      // encode utcDN_r12

      if (utcDN_r12 != null) {
         buffer.getContext().eventDispatcher.startElement("utcDN_r12", -1);

         utcDN_r12.encode (buffer, 0, 255);

         buffer.getContext().eventDispatcher.endElement("utcDN_r12", -1);
      }
      else throw new Asn1MissingRequiredException ("utcDN_r12");

      // encode utcDeltaTlsf_r12

      if (utcDeltaTlsf_r12 != null) {
         buffer.getContext().eventDispatcher.startElement("utcDeltaTlsf_r12", -1);

         utcDeltaTlsf_r12.encode (buffer, -128, 127);

         buffer.getContext().eventDispatcher.endElement("utcDeltaTlsf_r12", -1);
      }
      else throw new Asn1MissingRequiredException ("utcDeltaTlsf_r12");

      if (extbit) {

         // encode extension optional bits length

         int bitcnt = 0;
         if (extElem1 != null) bitcnt += extElem1.value.size();
         buffer.encodeSmallLength (bitcnt);

         // encode optional bits

         if (extElem1 != null && extElem1.value.size() > 0) {
            extElem1.encodeExtBits (buffer);
         }

         // encode extension elements

         if (extElem1 != null && extElem1.value.size() > 0) {
            extElem1.encode (buffer);
         }
      }
   }

}

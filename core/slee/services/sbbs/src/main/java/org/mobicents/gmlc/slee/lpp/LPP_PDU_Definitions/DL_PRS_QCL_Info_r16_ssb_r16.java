/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.5.0, Date: 07-May-2021.
 */
package org.mobicents.gmlc.slee.lpp.LPP_PDU_Definitions;

import com.objsys.asn1j.runtime.*;

public class DL_PRS_QCL_Info_r16_ssb_r16 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_LPP_PDU_DefinitionsRtkey._rtkey);
      Asn1Type._setLicLocation(_LPP_PDU_DefinitionsRtkey._licLocation);
   }

   public String getAsn1TypeName()  {
      return "SEQUENCE";
   }

   protected NR_PhysCellID_r16 pci_r16;
   protected Asn1Integer ssb_Index_r16;
   protected DL_PRS_QCL_Info_r16_ssb_r16_rs_Type_r16 rs_Type_r16 = null;

   public DL_PRS_QCL_Info_r16_ssb_r16 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public DL_PRS_QCL_Info_r16_ssb_r16 (
      NR_PhysCellID_r16 pci_r16_,
      Asn1Integer ssb_Index_r16_,
      DL_PRS_QCL_Info_r16_ssb_r16_rs_Type_r16 rs_Type_r16_
   ) throws Asn1Exception {
      super();
      setPci_r16 (pci_r16_);
      setSsb_Index_r16 (ssb_Index_r16_);
      setRs_Type_r16 (rs_Type_r16_);
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public DL_PRS_QCL_Info_r16_ssb_r16 (long pci_r16_,
      long ssb_Index_r16_,
      DL_PRS_QCL_Info_r16_ssb_r16_rs_Type_r16 rs_Type_r16_
   ) throws Asn1Exception {
      super();
      setPci_r16 (pci_r16_);
      setSsb_Index_r16 (ssb_Index_r16_);
      setRs_Type_r16 (rs_Type_r16_);
   }

   public void init () {
      pci_r16 = null;
      ssb_Index_r16 = null;
      rs_Type_r16 = null;
   }

   public boolean equals( Object obj ) {
      if ( this == obj ) return true;
      if ( !(obj instanceof DL_PRS_QCL_Info_r16_ssb_r16) ) return false;

      DL_PRS_QCL_Info_r16_ssb_r16 rhs = (DL_PRS_QCL_Info_r16_ssb_r16) obj;

      if (pci_r16 == null) {
         if (rhs.pci_r16 != null) return false;
      }
      else {
         if (!pci_r16.equals(rhs.pci_r16)) {
            return false;
         }
      }

      if (ssb_Index_r16 == null) {
         if (rhs.ssb_Index_r16 != null) return false;
      }
      else {
         if (!ssb_Index_r16.equals(rhs.ssb_Index_r16)) {
            return false;
         }
      }

      if (rs_Type_r16 == null) {
         if (rhs.rs_Type_r16 != null) return false;
      }
      else {
         if (!rs_Type_r16.equals(rhs.rs_Type_r16)) {
            return false;
         }
      }

      return true;
   }

   public int hashCode() {
      int __code = 1;

      if (pci_r16 != null) __code = 31*__code + pci_r16.hashCode();
      if (ssb_Index_r16 != null) __code = 31*__code + ssb_Index_r16.hashCode();
      if (rs_Type_r16 != null) __code = 31*__code + rs_Type_r16.hashCode();

      return __code;
   }

   /**
    * Accessor/mutator methods for Pci_r16
    */
   public NR_PhysCellID_r16 getPci_r16 () {
      return pci_r16;
   }

   public void setPci_r16 (NR_PhysCellID_r16 value) 
      throws Asn1Exception
   {
      if (!((value.value >= 0 && value.value <= 1007))) {
         throw new Asn1ConsVioException ("value.value", value.value);
      }

      this.pci_r16 = value;
   }

   public void setPci_r16 (long value) 
      throws Asn1Exception
   {
      setPci_r16 (new NR_PhysCellID_r16(value));
   }

   /**
    * Accessor/mutator methods for Ssb_Index_r16
    */
   public Asn1Integer getSsb_Index_r16 () {
      return ssb_Index_r16;
   }

   public void setSsb_Index_r16 (Asn1Integer value) 
      throws Asn1Exception
   {
      if (!((value.value >= 0 && value.value <= 63))) {
         throw new Asn1ConsVioException ("value.value", value.value);
      }

      this.ssb_Index_r16 = value;
   }

   public void setSsb_Index_r16 (long value) 
      throws Asn1Exception
   {
      setSsb_Index_r16 (new Asn1Integer(value));
   }

   /**
    * Accessor/mutator methods for Rs_Type_r16
    */
   public DL_PRS_QCL_Info_r16_ssb_r16_rs_Type_r16 getRs_Type_r16 () {
      return rs_Type_r16;
   }

   public void setRs_Type_r16 (DL_PRS_QCL_Info_r16_ssb_r16_rs_Type_r16 value) {
      this.rs_Type_r16 = value;
   }

   public int getElementCount() { return 3; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return pci_r16;
         case 1: return ssb_Index_r16;
         case 2: return rs_Type_r16;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "pci-r16";
         case 1: return "ssb-Index-r16";
         case 2: return "rs-Type-r16";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // decode pci_r16

      buffer.getContext().eventDispatcher.startElement("pci_r16", -1);

      pci_r16 = new NR_PhysCellID_r16();
      pci_r16.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("pci_r16", -1);

      // decode ssb_Index_r16

      buffer.getContext().eventDispatcher.startElement("ssb_Index_r16", -1);

      ssb_Index_r16 = new Asn1Integer();
      ssb_Index_r16.decode (buffer, 0, 63);
      buffer.getContext().eventDispatcher.endElement("ssb_Index_r16", -1);

      // decode rs_Type_r16

      buffer.getContext().eventDispatcher.startElement("rs_Type_r16", -1);

      {
         int tval = DL_PRS_QCL_Info_r16_ssb_r16_rs_Type_r16.decodeEnumValue (buffer);
         rs_Type_r16 = DL_PRS_QCL_Info_r16_ssb_r16_rs_Type_r16.valueOf (tval);
      }
      buffer.getContext().eventDispatcher.endElement("rs_Type_r16", -1);

   }

   public void encode (Asn1PerEncodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      // encode pci_r16

      if (pci_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("pci_r16", -1);

         pci_r16.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("pci_r16", -1);
      }
      else throw new Asn1MissingRequiredException ("pci_r16");

      // encode ssb_Index_r16

      if (ssb_Index_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("ssb_Index_r16", -1);

         ssb_Index_r16.encode (buffer, 0, 63);

         buffer.getContext().eventDispatcher.endElement("ssb_Index_r16", -1);
      }
      else throw new Asn1MissingRequiredException ("ssb_Index_r16");

      // encode rs_Type_r16

      if (rs_Type_r16 != null) {
         buffer.getContext().eventDispatcher.startElement("rs_Type_r16", -1);

         rs_Type_r16.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("rs_Type_r16", -1);
      }
      else throw new Asn1MissingRequiredException ("rs_Type_r16");

   }

}

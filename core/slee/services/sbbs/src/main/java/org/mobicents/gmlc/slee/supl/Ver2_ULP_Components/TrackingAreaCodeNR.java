/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.5.0, Date: 07-May-2021.
 */
package org.mobicents.gmlc.slee.supl.Ver2_ULP_Components;

import com.objsys.asn1j.runtime.*;

public class TrackingAreaCodeNR extends Asn1BitString {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_Ver2_ULP_ComponentsRtkey._rtkey);
      Asn1Type._setLicLocation(_Ver2_ULP_ComponentsRtkey._licLocation);
   }

   public String getAsn1TypeName()  {
      return "TrackingAreaCodeNR";
   }

   /**
    * This constructor creates an empty bit string that can be used in 
    * a decode method call to receive a bit string value.
    */
   public TrackingAreaCodeNR () {
      super();
      value = new byte [3];
   }

   /**
    * This constructor initializes the bit string value with the 
    * given bytes, using all 8 bits of every byte.
    *
    * @param data       Binary bit string contents
    */
   public TrackingAreaCodeNR (byte[] data) {
      this( data.length * 8, data);
   }

   /**
    * This constructor initializes the bit string value with the 
    * given number of bits and data.
    *
    * @param numbits_   Number of bits
    * @param data       Binary bit string contents
    */
   public TrackingAreaCodeNR (int numbits_, byte[] data) 
      throws Asn1Exception
   {
      super (numbits_, data);
      if (!(getLength() == 24)) {
         throw new Asn1ConsVioException ("getLength()", getLength());
      }

   }

   /**
    * This constructor initializes the bit string value from the given 
    * boolean array.  Each array position corresponds to a bit in the 
    * bit string.
    *
    * @param bitValues  The boolean array
    */
   public TrackingAreaCodeNR (boolean[] bitValues) 
      throws Asn1Exception
   {
      super (bitValues);
      if (!(getLength() == 24)) {
         throw new Asn1ConsVioException ("getLength()", getLength());
      }

   }

   /**
    * This constructor parses the given ASN.1 value text (either a 
    * binary or hex data string) and assigns the values to the internal
    * bit string.
    *
    * Examples of valid value formats are as follows:
    * Binary string:    "'11010010111001'B"
    * Hex string:       "'0fa56920014abc'H"
    *
    */
   public TrackingAreaCodeNR (String value_) 
      throws Asn1Exception
   {
      super (value_);
      if (!(getLength() == 24)) {
         throw new Asn1ConsVioException ("getLength()", getLength());
      }

   }

   /**
    * This constructor initializes the bit string value from the given 
    * BitSet object.  The logical length of the BitSet is used 
    * (i.e. position of last set bit).
    *
    * @param bitSet  Java BitSet object
    */
   public TrackingAreaCodeNR (java.util.BitSet bitSet) 
      throws Asn1Exception
   {
      super (bitSet);
      if (!(getLength() == 24)) {
         throw new Asn1ConsVioException ("getLength()", getLength());
      }

   }

   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      super.decode (buffer, 24, 24);
   }

   public void encode (Asn1PerEncodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      super.encode (buffer, 24, 24);
   }

}

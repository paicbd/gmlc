/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.5.0, Date: 07-May-2021.
 */
package org.mobicents.gmlc.slee.lpp.LPP_PDU_Definitions;

import com.objsys.asn1j.runtime.*;

public class NCGI_r15 extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_LPP_PDU_DefinitionsRtkey._rtkey);
      Asn1Type._setLicLocation(_LPP_PDU_DefinitionsRtkey._licLocation);
   }

   public String getAsn1TypeName()  {
      return "NCGI-r15";
   }

   protected NCGI_r15_mcc_r15 mcc_r15;
   protected NCGI_r15_mnc_r15 mnc_r15;
   protected Asn1BitString nr_cellidentity_r15;

   public NCGI_r15 () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public NCGI_r15 (
      NCGI_r15_mcc_r15 mcc_r15_,
      NCGI_r15_mnc_r15 mnc_r15_,
      Asn1BitString nr_cellidentity_r15_
   ) throws Asn1Exception {
      super();
      setMcc_r15 (mcc_r15_);
      setMnc_r15 (mnc_r15_);
      setNr_cellidentity_r15 (nr_cellidentity_r15_);
   }

   public void init () {
      mcc_r15 = null;
      mnc_r15 = null;
      nr_cellidentity_r15 = null;
   }

   public boolean equals( Object obj ) {
      if ( this == obj ) return true;
      if ( !(obj instanceof NCGI_r15) ) return false;

      NCGI_r15 rhs = (NCGI_r15) obj;

      if (mcc_r15 == null) {
         if (rhs.mcc_r15 != null) return false;
      }
      else {
         if (!mcc_r15.equals(rhs.mcc_r15)) {
            return false;
         }
      }

      if (mnc_r15 == null) {
         if (rhs.mnc_r15 != null) return false;
      }
      else {
         if (!mnc_r15.equals(rhs.mnc_r15)) {
            return false;
         }
      }

      if (nr_cellidentity_r15 == null) {
         if (rhs.nr_cellidentity_r15 != null) return false;
      }
      else {
         if (!nr_cellidentity_r15.equals(rhs.nr_cellidentity_r15)) {
            return false;
         }
      }

      return true;
   }

   public int hashCode() {
      int __code = 1;

      if (mcc_r15 != null) __code = 31*__code + mcc_r15.hashCode();
      if (mnc_r15 != null) __code = 31*__code + mnc_r15.hashCode();
      if (nr_cellidentity_r15 != null) __code = 31*__code + nr_cellidentity_r15.hashCode();

      return __code;
   }

   /**
    * Accessor/mutator methods for Mcc_r15
    */
   public NCGI_r15_mcc_r15 getMcc_r15 () {
      return mcc_r15;
   }

   public void setMcc_r15 (NCGI_r15_mcc_r15 value) 
      throws Asn1Exception
   {
      if (!(value.getElements().length == 3)) {
         throw new Asn1ConsVioException ("value.getElements().length", value.getElements().length);
      }

      this.mcc_r15 = value;
   }

   /**
    * Accessor/mutator methods for Mnc_r15
    */
   public NCGI_r15_mnc_r15 getMnc_r15 () {
      return mnc_r15;
   }

   public void setMnc_r15 (NCGI_r15_mnc_r15 value) 
      throws Asn1Exception
   {
      if (!((value.getElements().length >= 2 && value.getElements().length <= 3))) {
         throw new Asn1ConsVioException ("value.getElements().length", value.getElements().length);
      }

      this.mnc_r15 = value;
   }

   /**
    * Accessor/mutator methods for Nr_cellidentity_r15
    */
   public Asn1BitString getNr_cellidentity_r15 () {
      return nr_cellidentity_r15;
   }

   public void setNr_cellidentity_r15 (Asn1BitString value) 
      throws Asn1Exception
   {
      if (!(value.getLength() == 36)) {
         throw new Asn1ConsVioException ("value.getLength()", value.getLength());
      }

      this.nr_cellidentity_r15 = value;
   }

   public int getElementCount() { return 3; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return mcc_r15;
         case 1: return mnc_r15;
         case 2: return nr_cellidentity_r15;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "mcc-r15";
         case 1: return "mnc-r15";
         case 2: return "nr-cellidentity-r15";
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // decode mcc_r15

      buffer.getContext().eventDispatcher.startElement("mcc_r15", -1);

      mcc_r15 = new NCGI_r15_mcc_r15();
      mcc_r15.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("mcc_r15", -1);

      // decode mnc_r15

      buffer.getContext().eventDispatcher.startElement("mnc_r15", -1);

      mnc_r15 = new NCGI_r15_mnc_r15();
      mnc_r15.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("mnc_r15", -1);

      // decode nr_cellidentity_r15

      buffer.getContext().eventDispatcher.startElement("nr_cellidentity_r15", -1);

      nr_cellidentity_r15 = new Asn1BitString();
      nr_cellidentity_r15.decode (buffer, 36, 36);
      buffer.getContext().eventDispatcher.endElement("nr_cellidentity_r15", -1);

   }

   public void encode (Asn1PerEncodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      // encode mcc_r15

      if (mcc_r15 != null) {
         buffer.getContext().eventDispatcher.startElement("mcc_r15", -1);

         mcc_r15.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("mcc_r15", -1);
      }
      else throw new Asn1MissingRequiredException ("mcc_r15");

      // encode mnc_r15

      if (mnc_r15 != null) {
         buffer.getContext().eventDispatcher.startElement("mnc_r15", -1);

         mnc_r15.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("mnc_r15", -1);
      }
      else throw new Asn1MissingRequiredException ("mnc_r15");

      // encode nr_cellidentity_r15

      if (nr_cellidentity_r15 != null) {
         buffer.getContext().eventDispatcher.startElement("nr_cellidentity_r15", -1);

         nr_cellidentity_r15.encode (buffer, 36, 36);

         buffer.getContext().eventDispatcher.endElement("nr_cellidentity_r15", -1);
      }
      else throw new Asn1MissingRequiredException ("nr_cellidentity_r15");

   }

}

/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.5.0, Date: 07-May-2021.
 */
package org.mobicents.gmlc.slee.lpp.LPP_PDU_Definitions;

import com.objsys.asn1j.runtime.*;

public class PRS_Info_prsHoppingInfo_r14 extends Asn1Choice {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_LPP_PDU_DefinitionsRtkey._rtkey);
      Asn1Type._setLicLocation(_LPP_PDU_DefinitionsRtkey._licLocation);
   }

   public String getAsn1TypeName()  {
      return "CHOICE";
   }

   // Choice element identifier constants
   public final static byte _NB2_R14 = 1;
   public final static byte _NB4_R14 = 2;

   public PRS_Info_prsHoppingInfo_r14 () {
      super();
   }

   public PRS_Info_prsHoppingInfo_r14 (byte choiceId_, Asn1Type element_) {
      super();
      setElement (choiceId_, element_);
   }

   public String getElemName () {
      switch (choiceID) {
      case _NB2_R14: return "nb2_r14";
      case _NB4_R14: return "nb4_r14";
      default: return "UNDEFINED";
      }
   }

   /**
    * Accessor/mutator methods for nb2_r14
    */
   public Asn1Integer getNb2_r14 () {
      return (choiceID == _NB2_R14) ? (Asn1Integer)element : null;
   }
   public void setNb2_r14 (Asn1Integer value) {
      setElement (_NB2_R14, value);
   }
   public boolean isNb2_r14 () {
      return (choiceID == _NB2_R14);
   }

   /**
    * Accessor/mutator methods for nb4_r14
    */
   public PRS_Info_prsHoppingInfo_r14_nb4_r14 getNb4_r14 () {
      return (choiceID == _NB4_R14) ? (PRS_Info_prsHoppingInfo_r14_nb4_r14)element : null;
   }
   public void setNb4_r14 (PRS_Info_prsHoppingInfo_r14_nb4_r14 value) {
      setElement (_NB4_R14, value);
   }
   public boolean isNb4_r14 () {
      return (choiceID == _NB4_R14);
   }

   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      int idx = (int) buffer.decodeConsWholeNumber (2, "index");
      choiceID = idx + 1;
      buffer.getContext().eventDispatcher.startElement (getElemName(), -1);

      switch (idx) {
         // nb2_r14
         case 0: { 
            Asn1Integer nb2_r14;
            element = nb2_r14 = new Asn1Integer();
            nb2_r14.decode (buffer, 0, 15);
            break;
         }

         // nb4_r14
         case 1: { 
            PRS_Info_prsHoppingInfo_r14_nb4_r14 nb4_r14;
            element = nb4_r14 = new PRS_Info_prsHoppingInfo_r14_nb4_r14();
            nb4_r14.decode (buffer);
            break;
         }

         default:
         throw new Asn1InvalidChoiceOptionException (buffer, idx);
      }

      buffer.getContext().eventDispatcher.endElement (getElemName(), -1);
   }

   public void encode (Asn1PerEncodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      // Encode choice index value

      buffer.encodeConsWholeNumber (choiceID - 1, 2, "index");

      buffer.getContext().eventDispatcher.startElement("getElemName()", -1);

      switch (choiceID) {
         // nb2_r14
         case _NB2_R14:
            Asn1Integer nb2_r14 = (Asn1Integer) element;
            nb2_r14.encode (buffer, 0, 15);
            break;

         // nb4_r14
         case _NB4_R14:
            PRS_Info_prsHoppingInfo_r14_nb4_r14 nb4_r14 = (PRS_Info_prsHoppingInfo_r14_nb4_r14) element;
            nb4_r14.encode (buffer);
            break;

         default:
         throw new Asn1InvalidChoiceOptionException();
      }

      buffer.getContext().eventDispatcher.endElement("getElemName()", -1);
   }

}

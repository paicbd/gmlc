/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.5.0, Date: 07-May-2021.
 */
package org.mobicents.gmlc.slee.supl.ULP_Version_2_parameter_extensions;

import com.objsys.asn1j.runtime.*;

public class GanssRequestedCommonAssistanceDataList extends Asn1Seq {
   private static final long serialVersionUID = 55;
   static {
      _setKey (_ULP_Version_2_parameter_extensionsRtkey._rtkey);
      Asn1Type._setLicLocation(_ULP_Version_2_parameter_extensionsRtkey._licLocation);
   }

   public String getAsn1TypeName()  {
      return "GanssRequestedCommonAssistanceDataList";
   }

   protected Asn1Boolean ganssReferenceTime;
   protected Asn1Boolean ganssIonosphericModel;
   protected Asn1Boolean ganssAdditionalIonosphericModelForDataID00;
   protected Asn1Boolean ganssAdditionalIonosphericModelForDataID11;
   protected Asn1Boolean ganssEarthOrientationParameters;
   protected Asn1Boolean ganssAdditionalIonosphericModelForDataID01;  // optional
   protected Asn1OpenExt extElem1;

   public GanssRequestedCommonAssistanceDataList () {
      super();
      init();
   }

   /**
    * This constructor sets all elements to references to the 
    * given objects
    */
   public GanssRequestedCommonAssistanceDataList (
      Asn1Boolean ganssReferenceTime_,
      Asn1Boolean ganssIonosphericModel_,
      Asn1Boolean ganssAdditionalIonosphericModelForDataID00_,
      Asn1Boolean ganssAdditionalIonosphericModelForDataID11_,
      Asn1Boolean ganssEarthOrientationParameters_,
      Asn1Boolean ganssAdditionalIonosphericModelForDataID01_
   ) {
      super();
      setGanssReferenceTime (ganssReferenceTime_);
      setGanssIonosphericModel (ganssIonosphericModel_);
      setGanssAdditionalIonosphericModelForDataID00 (ganssAdditionalIonosphericModelForDataID00_);
      setGanssAdditionalIonosphericModelForDataID11 (ganssAdditionalIonosphericModelForDataID11_);
      setGanssEarthOrientationParameters (ganssEarthOrientationParameters_);
      setGanssAdditionalIonosphericModelForDataID01 (ganssAdditionalIonosphericModelForDataID01_);
   }

   /**
    * This constructor is for required elements only.  It sets 
    * all elements to references to the given objects
    */
   public GanssRequestedCommonAssistanceDataList (
      Asn1Boolean ganssReferenceTime_,
      Asn1Boolean ganssIonosphericModel_,
      Asn1Boolean ganssAdditionalIonosphericModelForDataID00_,
      Asn1Boolean ganssAdditionalIonosphericModelForDataID11_,
      Asn1Boolean ganssEarthOrientationParameters_
   ) {
      super();
      setGanssReferenceTime (ganssReferenceTime_);
      setGanssIonosphericModel (ganssIonosphericModel_);
      setGanssAdditionalIonosphericModelForDataID00 (ganssAdditionalIonosphericModelForDataID00_);
      setGanssAdditionalIonosphericModelForDataID11 (ganssAdditionalIonosphericModelForDataID11_);
      setGanssEarthOrientationParameters (ganssEarthOrientationParameters_);
   }

   /**
    * This constructor allows primitive data to be passed for all 
    * primitive elements.  It will create new object wrappers for 
    * the primitive data and set other elements to references to 
    * the given objects 
    */
   public GanssRequestedCommonAssistanceDataList (boolean ganssReferenceTime_,
      boolean ganssIonosphericModel_,
      boolean ganssAdditionalIonosphericModelForDataID00_,
      boolean ganssAdditionalIonosphericModelForDataID11_,
      boolean ganssEarthOrientationParameters_,
      boolean ganssAdditionalIonosphericModelForDataID01_
   ) {
      super();
      setGanssReferenceTime (ganssReferenceTime_);
      setGanssIonosphericModel (ganssIonosphericModel_);
      setGanssAdditionalIonosphericModelForDataID00 (ganssAdditionalIonosphericModelForDataID00_);
      setGanssAdditionalIonosphericModelForDataID11 (ganssAdditionalIonosphericModelForDataID11_);
      setGanssEarthOrientationParameters (ganssEarthOrientationParameters_);
      setGanssAdditionalIonosphericModelForDataID01 (ganssAdditionalIonosphericModelForDataID01_);
   }

   /**
    * This constructor is for required elements only.  It allows 
    * primitive data to be passed for all primitive elements.  
    * It will create new object wrappers for the primitive data 
    * and set other elements to references to the given objects. 
    */
   public GanssRequestedCommonAssistanceDataList (
      boolean ganssReferenceTime_,
      boolean ganssIonosphericModel_,
      boolean ganssAdditionalIonosphericModelForDataID00_,
      boolean ganssAdditionalIonosphericModelForDataID11_,
      boolean ganssEarthOrientationParameters_
   ) {
      super();
      setGanssReferenceTime (ganssReferenceTime_);
      setGanssIonosphericModel (ganssIonosphericModel_);
      setGanssAdditionalIonosphericModelForDataID00 (ganssAdditionalIonosphericModelForDataID00_);
      setGanssAdditionalIonosphericModelForDataID11 (ganssAdditionalIonosphericModelForDataID11_);
      setGanssEarthOrientationParameters (ganssEarthOrientationParameters_);
   }

   public void init () {
      ganssReferenceTime = null;
      ganssIonosphericModel = null;
      ganssAdditionalIonosphericModelForDataID00 = null;
      ganssAdditionalIonosphericModelForDataID11 = null;
      ganssEarthOrientationParameters = null;
      ganssAdditionalIonosphericModelForDataID01 = null;
      extElem1 = null;
   }

   public boolean equals( Object obj ) {
      if ( this == obj ) return true;
      if ( !(obj instanceof GanssRequestedCommonAssistanceDataList) ) return false;

      GanssRequestedCommonAssistanceDataList rhs = (GanssRequestedCommonAssistanceDataList) obj;

      if (ganssReferenceTime == null) {
         if (rhs.ganssReferenceTime != null) return false;
      }
      else {
         if (!ganssReferenceTime.equals(rhs.ganssReferenceTime)) {
            return false;
         }
      }

      if (ganssIonosphericModel == null) {
         if (rhs.ganssIonosphericModel != null) return false;
      }
      else {
         if (!ganssIonosphericModel.equals(rhs.ganssIonosphericModel)) {
            return false;
         }
      }

      if (ganssAdditionalIonosphericModelForDataID00 == null) {
         if (rhs.ganssAdditionalIonosphericModelForDataID00 != null) return false;
      }
      else {
         if (!ganssAdditionalIonosphericModelForDataID00.equals(rhs.ganssAdditionalIonosphericModelForDataID00)) {
            return false;
         }
      }

      if (ganssAdditionalIonosphericModelForDataID11 == null) {
         if (rhs.ganssAdditionalIonosphericModelForDataID11 != null) return false;
      }
      else {
         if (!ganssAdditionalIonosphericModelForDataID11.equals(rhs.ganssAdditionalIonosphericModelForDataID11)) {
            return false;
         }
      }

      if (ganssEarthOrientationParameters == null) {
         if (rhs.ganssEarthOrientationParameters != null) return false;
      }
      else {
         if (!ganssEarthOrientationParameters.equals(rhs.ganssEarthOrientationParameters)) {
            return false;
         }
      }

      if (ganssAdditionalIonosphericModelForDataID01 == null) {
         if (rhs.ganssAdditionalIonosphericModelForDataID01 != null) return false;
      }
      else {
         if (!ganssAdditionalIonosphericModelForDataID01.equals(rhs.ganssAdditionalIonosphericModelForDataID01)) {
            return false;
         }
      }

      if (extElem1 == null) {
         if (rhs.extElem1 != null) return false;
      }
      else {
         if (!extElem1.equals(rhs.extElem1)) {
            return false;
         }
      }

      return true;
   }

   public int hashCode() {
      int __code = 1;

      if (ganssReferenceTime != null) __code = 31*__code + ganssReferenceTime.hashCode();
      if (ganssIonosphericModel != null) __code = 31*__code + ganssIonosphericModel.hashCode();
      if (ganssAdditionalIonosphericModelForDataID00 != null) __code = 31*__code + ganssAdditionalIonosphericModelForDataID00.hashCode();
      if (ganssAdditionalIonosphericModelForDataID11 != null) __code = 31*__code + ganssAdditionalIonosphericModelForDataID11.hashCode();
      if (ganssEarthOrientationParameters != null) __code = 31*__code + ganssEarthOrientationParameters.hashCode();
      if (ganssAdditionalIonosphericModelForDataID01 != null) __code = 31*__code + ganssAdditionalIonosphericModelForDataID01.hashCode();
      if (extElem1 != null) __code = 31*__code + extElem1.hashCode();

      return __code;
   }

   /**
    * Accessor/mutator methods for GanssReferenceTime
    */
   public Asn1Boolean getGanssReferenceTime () {
      return ganssReferenceTime;
   }

   public void setGanssReferenceTime (Asn1Boolean value) {
      this.ganssReferenceTime = value;
   }

   public void setGanssReferenceTime (boolean value) {
      setGanssReferenceTime (new Asn1Boolean(value));
   }

   /**
    * Accessor/mutator methods for GanssIonosphericModel
    */
   public Asn1Boolean getGanssIonosphericModel () {
      return ganssIonosphericModel;
   }

   public void setGanssIonosphericModel (Asn1Boolean value) {
      this.ganssIonosphericModel = value;
   }

   public void setGanssIonosphericModel (boolean value) {
      setGanssIonosphericModel (new Asn1Boolean(value));
   }

   /**
    * Accessor/mutator methods for GanssAdditionalIonosphericModelForDataID00
    */
   public Asn1Boolean getGanssAdditionalIonosphericModelForDataID00 () {
      return ganssAdditionalIonosphericModelForDataID00;
   }

   public void setGanssAdditionalIonosphericModelForDataID00 (Asn1Boolean value) {
      this.ganssAdditionalIonosphericModelForDataID00 = value;
   }

   public void setGanssAdditionalIonosphericModelForDataID00 (boolean value) {
      setGanssAdditionalIonosphericModelForDataID00 (new Asn1Boolean(value));
   }

   /**
    * Accessor/mutator methods for GanssAdditionalIonosphericModelForDataID11
    */
   public Asn1Boolean getGanssAdditionalIonosphericModelForDataID11 () {
      return ganssAdditionalIonosphericModelForDataID11;
   }

   public void setGanssAdditionalIonosphericModelForDataID11 (Asn1Boolean value) {
      this.ganssAdditionalIonosphericModelForDataID11 = value;
   }

   public void setGanssAdditionalIonosphericModelForDataID11 (boolean value) {
      setGanssAdditionalIonosphericModelForDataID11 (new Asn1Boolean(value));
   }

   /**
    * Accessor/mutator methods for GanssEarthOrientationParameters
    */
   public Asn1Boolean getGanssEarthOrientationParameters () {
      return ganssEarthOrientationParameters;
   }

   public void setGanssEarthOrientationParameters (Asn1Boolean value) {
      this.ganssEarthOrientationParameters = value;
   }

   public void setGanssEarthOrientationParameters (boolean value) {
      setGanssEarthOrientationParameters (new Asn1Boolean(value));
   }

   /**
    * Accessor/mutator methods for GanssAdditionalIonosphericModelForDataID01
    */
   public Asn1Boolean getGanssAdditionalIonosphericModelForDataID01 () {
      return ganssAdditionalIonosphericModelForDataID01;
   }

   public void setGanssAdditionalIonosphericModelForDataID01 (Asn1Boolean value) {
      this.ganssAdditionalIonosphericModelForDataID01 = value;
   }

   public void setGanssAdditionalIonosphericModelForDataID01 (boolean value) {
      setGanssAdditionalIonosphericModelForDataID01 (new Asn1Boolean(value));
   }
   public boolean hasGanssAdditionalIonosphericModelForDataID01 () {
      return (ganssAdditionalIonosphericModelForDataID01 != null);
   }

   /**
    * Accessor/mutator methods for ExtElem1
    */
   public Asn1OpenExt getExtElem1 () {
      return extElem1;
   }

   public void setExtElem1 (Asn1OpenExt value) {
      this.extElem1 = value;
   }

   public int getElementCount() { return 7; }


   public Object getElementValue(int index){
      switch(index)  {
         case 0: return ganssReferenceTime;
         case 1: return ganssIonosphericModel;
         case 2: return ganssAdditionalIonosphericModelForDataID00;
         case 3: return ganssAdditionalIonosphericModelForDataID11;
         case 4: return ganssEarthOrientationParameters;
         case 5: return ganssAdditionalIonosphericModelForDataID01;
         case 6: return extElem1;
         default: return null;
      }
   }


   public String getElementName(int index){
      switch(index)  {
         case 0: return "ganssReferenceTime";
         case 1: return "ganssIonosphericModel";
         case 2: return "ganssAdditionalIonosphericModelForDataID00";
         case 3: return "ganssAdditionalIonosphericModelForDataID11";
         case 4: return "ganssEarthOrientationParameters";
         case 5: return "ganssAdditionalIonosphericModelForDataID01";
         case 6: return null;
         default: return null;
      }
   }


   public void decode (Asn1PerDecodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      init ();

      // extension bit

      boolean extbit = buffer.decodeBit ("extbit");

      // optional bits

      // decode ganssReferenceTime

      buffer.getContext().eventDispatcher.startElement("ganssReferenceTime", -1);

      ganssReferenceTime = new Asn1Boolean();
      ganssReferenceTime.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("ganssReferenceTime", -1);

      // decode ganssIonosphericModel

      buffer.getContext().eventDispatcher.startElement("ganssIonosphericModel", -1);

      ganssIonosphericModel = new Asn1Boolean();
      ganssIonosphericModel.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("ganssIonosphericModel", -1);

      // decode ganssAdditionalIonosphericModelForDataID00

      buffer.getContext().eventDispatcher.startElement("ganssAdditionalIonosphericModelForDataID00", -1);

      ganssAdditionalIonosphericModelForDataID00 = new Asn1Boolean();
      ganssAdditionalIonosphericModelForDataID00.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("ganssAdditionalIonosphericModelForDataID00", -1);

      // decode ganssAdditionalIonosphericModelForDataID11

      buffer.getContext().eventDispatcher.startElement("ganssAdditionalIonosphericModelForDataID11", -1);

      ganssAdditionalIonosphericModelForDataID11 = new Asn1Boolean();
      ganssAdditionalIonosphericModelForDataID11.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("ganssAdditionalIonosphericModelForDataID11", -1);

      // decode ganssEarthOrientationParameters

      buffer.getContext().eventDispatcher.startElement("ganssEarthOrientationParameters", -1);

      ganssEarthOrientationParameters = new Asn1Boolean();
      ganssEarthOrientationParameters.decode (buffer);
      buffer.getContext().eventDispatcher.endElement("ganssEarthOrientationParameters", -1);

      if (extbit) {

         int bitcnt = buffer.decodeSmallLength(), i = 0;
         long bitidx = buffer.getBitOffset() + bitcnt;
         boolean[] bitmap = new boolean [bitcnt];

         if (i < bitcnt) bitmap[i++] = buffer.decodeBit ("ganssAdditionalIonosphericModelForDataID01Present");

         while (i < bitcnt) {
            bitmap[i++] = buffer.decodeBit ("unknown");
         }

         i = 0;

         // decode ganssAdditionalIonosphericModelForDataID01

         if (i < bitcnt && bitmap[i++]) {
            buffer.getContext().eventDispatcher.startElement("ganssAdditionalIonosphericModelForDataID01", -1);

            long _curidx = buffer.getBitOffset();
            bitidx = buffer.decodeExtLength ();
            if (bitidx - _curidx >= 131088)  {
               throw new Asn1Exception ("PER fragmentation not enabled: add -perindef to decode");
            }

            ganssAdditionalIonosphericModelForDataID01 = new Asn1Boolean();
            ganssAdditionalIonosphericModelForDataID01.decode (buffer);

            buffer.moveBitCursor (bitidx);
            buffer.getContext().eventDispatcher.endElement("ganssAdditionalIonosphericModelForDataID01", -1);

         }
         else {
            ganssAdditionalIonosphericModelForDataID01 = null;
         }

         // decode unknown extension elements

         if (i < bitcnt) {
            Asn1OpenType openType = null;
            extElem1 = new Asn1OpenExt();
            int j = 0;
            while (i < bitcnt) {
               if (bitmap[i]) {
                  buffer.getContext().eventDispatcher.startElement("...", -1);

                  openType = extElem1.decodeOpenType (buffer, true, j++);
               }
               else {
                  extElem1.setOpenType (null, j++);
               }
               i++;
            }
         }
         buffer.byteAlign ();

      }

   }

   public void encode (Asn1PerEncodeBuffer buffer)
      throws Asn1Exception, java.io.IOException
   {
      // extension bit

      boolean extbit = ((ganssAdditionalIonosphericModelForDataID01 != null) ||
      ((extElem1 != null) && (!extElem1.value.isEmpty()))
      );

      buffer.encodeBit (extbit, "extbit");

      // encode ganssReferenceTime

      if (ganssReferenceTime != null) {
         buffer.getContext().eventDispatcher.startElement("ganssReferenceTime", -1);

         ganssReferenceTime.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("ganssReferenceTime", -1);
      }
      else throw new Asn1MissingRequiredException ("ganssReferenceTime");

      // encode ganssIonosphericModel

      if (ganssIonosphericModel != null) {
         buffer.getContext().eventDispatcher.startElement("ganssIonosphericModel", -1);

         ganssIonosphericModel.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("ganssIonosphericModel", -1);
      }
      else throw new Asn1MissingRequiredException ("ganssIonosphericModel");

      // encode ganssAdditionalIonosphericModelForDataID00

      if (ganssAdditionalIonosphericModelForDataID00 != null) {
         buffer.getContext().eventDispatcher.startElement("ganssAdditionalIonosphericModelForDataID00", -1);

         ganssAdditionalIonosphericModelForDataID00.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("ganssAdditionalIonosphericModelForDataID00", -1);
      }
      else throw new Asn1MissingRequiredException ("ganssAdditionalIonosphericModelForDataID00");

      // encode ganssAdditionalIonosphericModelForDataID11

      if (ganssAdditionalIonosphericModelForDataID11 != null) {
         buffer.getContext().eventDispatcher.startElement("ganssAdditionalIonosphericModelForDataID11", -1);

         ganssAdditionalIonosphericModelForDataID11.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("ganssAdditionalIonosphericModelForDataID11", -1);
      }
      else throw new Asn1MissingRequiredException ("ganssAdditionalIonosphericModelForDataID11");

      // encode ganssEarthOrientationParameters

      if (ganssEarthOrientationParameters != null) {
         buffer.getContext().eventDispatcher.startElement("ganssEarthOrientationParameters", -1);

         ganssEarthOrientationParameters.encode (buffer);

         buffer.getContext().eventDispatcher.endElement("ganssEarthOrientationParameters", -1);
      }
      else throw new Asn1MissingRequiredException ("ganssEarthOrientationParameters");

      if (extbit) {

         // encode extension optional bits length

         int bitcnt = 1;
         if (extElem1 != null) bitcnt += extElem1.value.size();
         buffer.encodeSmallLength (bitcnt);

         // encode optional bits

         buffer.encodeBit ((ganssAdditionalIonosphericModelForDataID01 != null), null);

         if (extElem1 != null && extElem1.value.size() > 0) {
            extElem1.encodeExtBits (buffer);
         }

         // encode extension elements

         Asn1PerEncodeBuffer mainBuffer = buffer;
         buffer = new Asn1PerEncodeBuffer (buffer.isAligned());

         // ganssAdditionalIonosphericModelForDataID01

         if (ganssAdditionalIonosphericModelForDataID01 != null) {
            buffer.reset();
            ganssAdditionalIonosphericModelForDataID01.encode (buffer);
            buffer.getContext().eventDispatcher.startElement("ganssAdditionalIonosphericModelForDataID01", -1);

            mainBuffer.encodeOpenType (buffer, null);

            buffer.getContext().eventDispatcher.endElement("ganssAdditionalIonosphericModelForDataID01", -1);
         }

         buffer = mainBuffer;

         if (extElem1 != null && extElem1.value.size() > 0) {
            extElem1.encode (buffer);
         }
      }
   }

}

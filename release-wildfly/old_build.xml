<?xml version="1.0"?>
<project name="restcomm.gmlc.release" default="release" basedir=".">
    <property environment="sys"/>
    <property name="release.dir" location="${ant.file.restcomm.gmlc.release}/../target" />
    <property name="base.dir" location="${ant.file.restcomm.gmlc.release}/.." />
    <property name="docs.dir" location="${release.dir}/docs" />
    <property name="bundle.docs.dir" location="${base.dir}/docs-bundle" />
    <property name="checkout.dir" value="${base.dir}/checkout" />
    <property name="checkout.restcomm-slee.dir" value="${checkout.dir}/restcomm-slee" />
    <property name="checkout.restcomm-jss7.dir" value="${checkout.dir}/restcomm-jss7" />
    <property name="checkout.restcomm-jss7-ra.dir" value="${checkout.dir}/restcomm-jss7-ra" />
    <property name="checkout.restcomm-map-ra.dir" value="${checkout.dir}/restcomm-map-ra" />
    <property name="checkout.restcomm-gmlc.dir" value="${base.dir}/.." />
    <property name="checkout.restcomm-jss7-build.dir" value="${checkout.dir}/restcomm-jss7-build" />
    <property name="checkout.restcomm-diam.dir" value="${checkout.dir}/restcomm-diam" />
    <property name="checkout.restcomm-slee.jainslee-jss7-build.dir" value="${checkout.dir}/restcomm-jains-slee-jss7-build" />

    <!--<property name="cloudbees.url" value="https://mobicents.ci.cloudbees.com" />-->
    <property name="cloudbees.url" value="http://localhost" />
    <!--<property name="github.url" value="https://github.com/RestComm" />-->
    <property name="github.url" value="http://localhost/RestComm" />

    <property name="restcomm.gmlc.git.tag" value="master"/>
    <property name="restcomm.gmlc.release.version" value="5.0.0-SNAPSHOT"/>

    <!-- Options for referring to release resource versions -->
    <!-- SLEE stuff -->

    <property name="restcomm-slee.build-number" value="76" />
    <property name="restcomm-slee.version" value="7.2.0-68" />
    <property name="restcomm-slee.release" value="7.2.0-68.76" />

    <!-- jss7 stack and MAP RA -->
    <property name="restcomm-jss7.build-number" value="102" />
    <property name="restcomm-jss7.version" value="7.4.0-${restcomm-jss7.build-number}" />
    <!-- <property name="restcomm-jss7.release" value="7.4.0-9" /> -->

    <property name="restcomm-map-ra.build-number" value="177" />
    <property name="restcomm-map-ra.version" value="7.4.0-${restcomm-map-ra.build-number}" />

    <!-- Diameter mux and RAs -->
    <property name="restcomm-diam.build-number" value="157" />
    <property name="restcomm-diam.version" value="1.7.1-${restcomm-diam.build-number}" />
    <property name="restcomm-diam.zip" value="restcomm-diameter-mux-wildfly-${restcomm-diam.version}.zip"/>
    <property name="restcomm-diam.download.url"
              value="${cloudbees.url}/job/RestComm-jDiameter-1.x/${restcomm-diam.build-number}/artifact/release/${restcomm-diam.zip}" />

    <property name="diam.ra.build.number" value ="SNAPSHOT" />
    <property name="diam.ra.version" value ="7.0.0-${diam.ra.build.number}" />
    <property name="diam.base.ra.jar" value ="diameter-restcomm-slee-ra-diameter-base-ra-DU-${diam.ra.version}.jar" />

    <property name="diam.slee.ra.version" value ="7.2.1" />
    <property name="diam.slg.ra.jar" value ="diameter-restcomm-slee-ra-diameter-slg-ra-DU-${diam.slee.ra.version}.jar" />
    <property name="diam.slh.ra.jar" value ="diameter-restcomm-slee-ra-diameter-slh-ra-DU-${diam.slee.ra.version}.jar" />
    <property name="diam.sh-client.ra.jar" value ="diameter-restcomm-slee-ra-diameter-sh-client-ra-DU-${diam.slee.ra.version}.jar" />
    <property name="diam.sh-server.ra.jar" value ="diameter-restcomm-slee-ra-diameter-sh-server-ra-DU-${diam.slee.ra.version}.jar" />

    <!--GET restcomm-slee & restcomm-jss7 & restcomm-diameter - properties-->
    <property name="restcomm-jss7.tag" value="${restcomm-jss7.version}" />
    <property name="restcomm-slee.ss7.tag" value="${restcomm-map-ra.version}" />
    <property name="restcomm-slee.download.distro.name" value="restcomm-slee-${restcomm-slee.version}.${restcomm-slee.build-number}-wildfly-10.1.0.Final" />
    <property name="restcomm-slee.download.distro.file" value="${restcomm-slee.download.distro.name}.zip" />
    <property name="restcomm-slee.download.url" value="${cloudbees.url}/jain-slee/archive/${restcomm-slee.release}/${restcomm-slee.download.distro.file}" />
    <property name="restcomm-slee.distro.zip.path" value="${checkout.dir}/${restcomm-slee.download.distro.file}" />
    <property name="restcomm-jss7.download.distro.file" value="restcomm-jss7-${restcomm-jss7.version}.zip" />
    <property name="restcomm-jss7.download.url" value="${github.url}/jss7/releases/download/${restcomm-jss7.version}/${restcomm-jss7.download.distro.file}" />
    <property name="restcomm-jss7.distro.zip.path" value="${checkout.dir}/${restcomm-jss7.download.distro.file}" />
    <property name="restcomm-map-ra.download.docs.file" value="RA_docs.zip" />
    <property name="restcomm-map-ra.download.docs.url" value="${github.url}/jain-slee.ss7/releases/download/${restcomm-map-ra.version}/${restcomm-map-ra.download.docs.file}" />
    <property name="restcomm-map-ra.distro.docs.path" value="${checkout.dir}/${restcomm-map-ra.download.docs.file}" />

    <property name="restcomm-diam.download.url" value="${cloudbees.url}/job/RestComm-jDiameter-1.x/${restcomm-diam.build-number}/artifact/release/${restcomm-diam.zip}" />
    <property name="restcomm-diam.distro.zip.path" value="${checkout.dir}/${restcomm-diam.zip}" />

    <property name="release.build.goals" value="clean install dependency:tree -Dmaven.test.skip=true"/>
    <property name="release.ts.deploy.goals.local" value="clean deploy -DaltDeploymentRepository=local-output::default::file:///tmp/output"/>

    <property name="wildfly.home.relative.path" value="wildfly-10.1.0.Final"/>
    <property name="jboss.home" value ="${release.dir}/${wildfly.home.relative.path}/"/>
    <property name="deploy.dir" value="${jboss.home}/standalone/deployments" />

    <condition property="mvn.executable" value="${sys.M2_HOME}\bin\mvn.bat" else="mvn">
        <os family="windows"/>
    </condition>

    <taskdef onerror="fail" resource="net/sf/antcontrib/antlib.xml">
        <classpath>
            <pathelement location="${ant.file.restcomm.gmlc.release}/../ant-contrib-1.0b3.jar" />
        </classpath>
    </taskdef>

    <target name="clean">
        <delete dir="${release.dir}" failonerror="false"/>
        <delete dir="${base.dir}/checkout" failonerror="false"/>
        <delete dir="${bundle.docs.dir}" failonerror="false"/>
        <delete includeemptydirs="true" failonerror="false">
            <fileset dir="${checkout.dir}" defaultexcludes="false">
                <exclude name="*.zip" />
                <exclude name="*.jar" />
            </fileset>
        </delete>
        <delete>
            <fileset dir="${base.dir}">
                <include name="Extended-GMLC-*.*" />
            </fileset>
        </delete>
    </target>

    <target name="release" depends="clean,get-deps,extract-deps,clean-up-restcomm-slee,build-gmlc,copy-gmlc,build-docs,copy-docs,make-final-zip,bundle-documentation" />

    <target name="release-no-docs" depends="clean,get-deps,extract-deps,clean-up-restcomm-slee,build-gmlc,copy-gmlc,make-final-zip" />

    <target name="release-with-jss7-and-ras" depends="build-with-jss7-and-ras.ss7, build-with-jss7-and-ras.ras, release"/>

    <target name="build-with-jss7-and-ras.ss7">
        <echo>Clone Restcomm jSS7</echo>
        <exec failonerror="true" executable="git">
            <arg value="clone" />
            <arg value="https://github.com/RestComm/jss7" />
            <arg value="-b" />
            <arg value="${restcomm-jss7.tag}" />
            <arg value="${checkout.restcomm-jss7-build.dir}" />
        </exec>

        <echo>Building RestComm jSS7 from sources</echo>

        <ant antfile="${checkout.restcomm-jss7-build.dir}/release/build.xml" target="build-asn"/>
        <ant antfile="${checkout.restcomm-jss7-build.dir}/release/build.xml" target="build-sctp"/>
        <ant antfile="${checkout.restcomm-jss7-build.dir}/release/build.xml" target="build-upstream-jss7"/>
        <ant antfile="${checkout.restcomm-jss7-build.dir}/release/build.xml" target="build-jss7-addon"/>
    </target>

    <target name="build-with-jss7-and-ras.ras">
        <echo>Clone RestComm JainSlee.jss7 (jSS7 RA's)</echo>
        <exec failonerror="true" executable="git">
            <arg value="clone" />
            <arg value="https://github.com/RestComm/jain-slee.ss7.git" />
            <arg value="-b" />
            <arg value="${restcomm-slee.ss7.tag}" />
            <arg value="${checkout.restcomm-slee.jainslee-jss7-build.dir}" />
        </exec>

        <echo>Building JainSlee.jss7 (jSS7 RA's) from sources</echo>

        <exec failonerror="true" executable="${mvn.executable}" dir="${checkout.restcomm-slee.jainslee-jss7-build.dir}">
            <arg line="clean install -Prelease -Dmaven.test.skip=true" />
        </exec>
    </target>

    <target name="checkout-ss7-map">
        <echo>Clone Restcomm JainSlee.jss7 (jSS7 RA's)</echo>
        <exec failonerror="true" executable="git">
            <arg value="clone" />
            <arg value="https://github.com/RestComm/jain-slee.ss7.git" />
            <arg value="-b" />
            <arg value="${restcomm-slee.ss7.tag}" />
            <arg value="${checkout.restcomm-slee.jainslee-jss7-build.dir}" />
        </exec>
    </target>


    <target name="deploy">
        <ant antfile="${ant.file.restcomm.gmlc.release}" target="release">
            <property name="release.build.goals" value="${release.ts.deploy.goals}" />
        </ant>
    </target>

    <target name="deploy-local">
        <ant antfile="${ant.file.restcomm.gmlc.release}" target="release">
            <property name="release.build.goals" value="${release.ts.deploy.goals.local}" />
        </ant>
    </target>


    <!-- get-diam-base-ra,get-diam-ro-ra, -->
    <target name="get-deps" depends="get-restcomm-slee,get-restcomm-jss7,get-restcomm-map-ra-docs,get-restcomm-diam" />
    <!--target name="get-deps" depends="get-restcomm-slee,get-restcomm-jss7,get-restcomm-map-ra-docs" /-->
    <target name="extract-deps" depends="extract-restcomm-slee,extract-restcomm-jss7,extract-restcomm-map-ra-docs,extract-restcomm-diam" />
    <!--target name="extract-deps" depends="extract-restcomm-slee,extract-restcomm-jss7,extract-restcomm-map-ra-docs" /-->

    <available file="${restcomm-slee.distro.zip.path}" property="got.restcomm-slee" />
    <target name="get-restcomm-slee" unless="got.restcomm-slee">
        <echo>Downloading RestComm Slee version: ${restcomm-slee.version}</echo>
        <exec failonerror="true" executable="wget">
            <arg value="${restcomm-slee.download.url}" />
            <arg value="--output-document=${restcomm-slee.download.distro.name}.zip" />
        </exec>
        <move file="${base.dir}/${restcomm-slee.download.distro.name}.zip" todir="${checkout.dir}"/>
    </target>

    <target name="extract-restcomm-slee" depends="get-restcomm-slee">
        <delete dir="${checkout.restcomm-slee.dir}" failonerror="false" />
        <unzip src="${restcomm-slee.distro.zip.path}" dest="${release.dir}"/>
        <copy todir="${release.dir}" failonerror="true">
            <fileset dir="${release.dir}/${restcomm-slee.download.distro.name}">
                <include name="**/*" />
            </fileset>
        </copy>
        <delete dir="${release.dir}/${restcomm-slee.download.distro.name}" includeemptydirs="true" failonerror="false" verbose="false"/>
    </target>

    <available file="${restcomm-jss7.distro.zip.path}" property="got.restcomm-jss7" />
    <target name="get-restcomm-jss7" unless="got.restcomm-jss7">
        <echo>Downloading RestComm JSS7 version: ${restcomm-jss7.version}</echo>
        <exec failonerror="true" executable="wget">
            <arg value="${restcomm-jss7.download.url}" />
            <arg value="--output-document=${restcomm-jss7.download.distro.file}" />
        </exec>
        <move file="${base.dir}/${restcomm-jss7.download.distro.file}" todir="${checkout.dir}"/>
    </target>

    <target name="extract-restcomm-jss7" depends="get-restcomm-jss7">
        <delete dir="${checkout.restcomm-jss7.dir}" failonerror="false" />
        <unzip src="${restcomm-jss7.distro.zip.path}" dest="${checkout.restcomm-jss7.dir}"/>
        <move file="${checkout.restcomm-jss7.dir}/restcomm-jss7-${restcomm-jss7.version}" tofile="${checkout.restcomm-jss7.dir}/restcomm-jss7-${restcomm-jss7.version}" failonerror="false"/>
    </target>

    <available file="${restcomm-map-ra.distro.docs.path}" property="got.restcomm-map-ra-docs" />
    <target name="get-restcomm-map-ra-docs" unless="got.restcomm-map-ra-docs">
        <echo>Downloading RestComm MAP RA docs version: ${restcomm-map-ra.version}</echo>
        <exec failonerror="true" executable="wget">
            <arg value="${restcomm-map-ra.download.docs.url}" />
            <arg value="--output-document=${restcomm-map-ra.download.docs.file}" />
        </exec>
        <move file="${base.dir}/${restcomm-map-ra.download.docs.file}" todir="${checkout.dir}"/>
    </target>

    <target name="extract-restcomm-map-ra-docs" depends="get-restcomm-map-ra-docs">
        <delete dir="${checkout.restcomm-jss7-ra.dir}" failonerror="false" />
        <delete dir="${checkout.restcomm-map-ra.dir}" failonerror="false" />
        <unzip src="${restcomm-map-ra.distro.docs.path}" dest="${checkout.restcomm-jss7-ra.dir}"/>
        <unzip src="${checkout.restcomm-jss7-ra.dir}/RA_docs/MAP/generated-docs.zip" dest="${checkout.restcomm-map-ra.dir}"/>
    </target>

    <!--
    <available file="${restcomm-management-hq.distro.zip.path}" property="got.restcomm-management-hq" />
    <target name="get-restcomm-management-hq" unless="got.restcomm-management-hq">
        <echo>Downloading restcomm Management HQ version: ${restcomm-management-hq.version}</echo>
        <exec failonerror="true" executable="wget">
            <arg value="${restcomm-management-hq.download.url}" />
        </exec>
        <move file="${base.dir}/${restcomm-management-hq.download.distro.file}" todir="${checkout.dir}" />
    </target>
    <target name="extract-restcomm-management-hq" depends="get-restcomm-management-hq">
        <delete dir="${checkout.restcomm-management-hq.dir}" failonerror="false" />
        <unzip src="${restcomm-management-hq.distro.zip.path}" dest="${checkout.restcomm-management-hq.dir}" />
    </target>
    -->

    <available file="${restcomm-diam.distro.zip.path}" property="got.restcomm-diam" />
    <target name="get-restcomm-diam" unless="got.restcomm-diam">
        <echo>Downloading RestComm Diameter version: ${restcomm-diam.version}</echo>
        <exec failonerror="true" executable="wget">
            <arg value="${restcomm-diam.download.url}" />
        </exec>
        <move file="${base.dir}/${restcomm-diam.zip}" todir="${checkout.dir}"/>
    </target>

    <target name="extract-restcomm-diam" depends="get-restcomm-diam">
        <delete dir="${checkout.restcomm-diam.dir}" failonerror="false" />
        <unzip src="${checkout.dir}/${restcomm-diam.zip}" dest="${checkout.restcomm-diam.dir}"/>
    </target>

    <target name="clean-up-restcomm-slee">
        <delete includeemptydirs="true" failonerror="false">
            <fileset dir="${release.dir}/docs/resources" erroronmissingdir="false">
                <include name="**" />
                <exclude name="**/map/**" />
                <exclude name="**/sip11/**" />
                <exclude name="**/diameter-base/**" />
                <exclude name="**/http-servlet/**" />
            </fileset>
        </delete>
        <delete dir="${release.dir}/docs/enablers" includeemptydirs="true" failonerror="true" />
        <delete dir="${release.dir}/docs/examples" includeemptydirs="true" failonerror="true" />
        <delete includeemptydirs="true" failonerror="falsee">
            <fileset dir="${release.dir}/resources" erroronmissingdir="false">
                <include name="**" />
                <exclude name="**/map/**" />
                <exclude name="**/sip11/**" />
                <exclude name="**/diameter-base/**" />
                <exclude name="**/diameter-sh-client/**" />
                <exclude name="**/diameter-sh-server/**" />
                <exclude name="**/diameter-slg/**" />
                <exclude name="**/diameter-slh/**" />
                <exclude name="**/http-servlet/**" />
            </fileset>
        </delete>
        <delete includeemptydirs="true" failonerror="false">
            <fileset dir="${release.dir}/extra" erroronmissingdir="false">
                <include name="**" />
                <exclude name="**/restcomm-http/**"/>
            </fileset>
        </delete>
        <delete includeemptydirs="true" failonerror="false">
            <fileset dir="${deploy.dir}">
                <include name="*.jar" />
            </fileset>
        </delete>
        <delete dir="${release.dir}/enablers" includeemptydirs="true" failonerror="false" />
        <delete dir="${release.dir}/examples" includeemptydirs="true" failonerror="false" />
        <delete file="${release.dir}/readme.txt" failonerror="false" />
        <delete file="${release.dir}/sources.zip" failonerror="false" />
    </target>

    <target name="checkout-gmlc-persistence">
        <echo>Checking out RestComm GMLC persistence branch</echo>
        <exec failonerror="true" executable="git">
            <arg value="clone" />
            <arg value="https://github.com/RestComm/gmlc.git" />
            <arg value="${checkout.restcomm-gmlc.dir}" />
        </exec>
        <exec failonerror="true" executable="git">
            <arg value="--git-dir=${checkout.restcomm-gmlc.dir}/.git" />
            <arg value="--work-tree=${checkout.restcomm-gmlc.dir}" />
            <arg value="checkout" />
            <arg value="${restcomm.gmlc.git.tag}" />
        </exec>

    </target>

    <target name="build-map-ra">
        <exec failonerror="true" executable="${mvn.executable}" dir="${checkout.restcomm-slee.jainslee-jss7-build.dir}/resources/map/">
            <arg line="clean install" />
        </exec>
        <move file="${checkout.restcomm-slee.jainslee-jss7-build.dir}/resources/map/du/target" tofile="${base.dir}/map-ra/target/map-du" failonerror="false"/>
    </target>

    <target name="build-gmlc">
        <exec failonerror="true" executable="${mvn.executable}" dir="${checkout.restcomm-gmlc.dir}">
            <arg line="${release.build.goals} -Dmaven.test.skip=true -Passembly" />
        </exec>
    </target>


    <target name="copy-gmlc">

        <mkdir dir="${release.dir}/extra" />

        <!-- deploy: ss7, diameter, http, gmlc -->
        <echo>Copy SS7</echo>
        <mkdir dir="${release.dir}/extra/restcomm-ss7/restcomm-jss7-${restcomm-jss7.version}" />
        <copy todir="${release.dir}/extra/restcomm-ss7/restcomm-jss7-${restcomm-jss7.version}" >
            <fileset dir="${checkout.restcomm-jss7.dir}/restcomm-jss7-${restcomm-jss7.version}" includes="**"/>
        </copy>
        <ant antfile="${release.dir}/extra/restcomm-ss7/restcomm-jss7-${restcomm-jss7.version}/ss7-wildfly/build.xml" target="deploy">
            <property name="basedir" value="${release.dir}/extra/restcomm-ss7/restcomm-jss7-${restcomm-jss7.version}/ss7-wildfly" />
        </ant>

        <echo>Copy Diameter</echo>
        <copy todir="${release.dir}/extra/restcomm-diam" failonerror="true">
            <fileset dir="${checkout.restcomm-diam.dir}">
                <include name="**" />
            </fileset>
        </copy>
        <ant antfile="${release.dir}/extra/restcomm-diam/build.xml" target="deploy">
            <property name="basedir" value="${release.dir}/extra/restcomm-diam" />
        </ant>

        <echo>Copy HTTP Servlet</echo>
        <ant antfile="${release.dir}/extra/restcomm-http/build.xml" target="deploy">
            <property name="basedir" value="${release.dir}/extra/restcomm-http" />
        </ant>

        <echo>Copy GMLC extensions</echo>
        <mkdir dir="${release.dir}/extra/gmlc" />
        <copy todir="${release.dir}/extra/gmlc/module" failonerror="true">
            <fileset dir="${checkout.restcomm-gmlc.dir}/core/bootstrap-wildfly/target/module">
                <include name="**" />
            </fileset>
        </copy>
        <copy file="${checkout.restcomm-gmlc.dir}/release-wildfly/extensions-build.xml" todir="${release.dir}/extra/gmlc" failonerror="true" />
        <copy file="${checkout.restcomm-gmlc.dir}/release-wildfly/wildfly-gmlc-subsystem.txt" todir="${release.dir}/extra/gmlc" failonerror="true" />
        <copy file="${checkout.restcomm-gmlc.dir}/release-wildfly/gmlc-logging.txt" todir="${release.dir}/extra/gmlc" failonerror="true" />
        <copy file="${checkout.restcomm-gmlc.dir}/release-wildfly/wildfly-jss7-subsystem.txt" todir="${release.dir}/extra/gmlc" failonerror="true" />
        <copy file="${checkout.restcomm-gmlc.dir}/release-wildfly/xmltask.jar" todir="${release.dir}/extra/gmlc" failonerror="true" />
        <ant antfile="${release.dir}/extra/gmlc/extensions-build.xml" target="deploy">
            <property name="basedir" value="${release.dir}/extra/gmlc" />
        </ant>

        <echo>Copy RestComm MAP RA DU</echo>
        <copy todir="${deploy.dir}" failonerror="true">
            <fileset dir="${release.dir}/resources/map">
                <include name="**/*.jar" />
            </fileset>
        </copy>

        <echo>Copy RestComm http-servlet RA</echo>
        <copy todir="${deploy.dir}" failonerror="true">
            <fileset dir="${release.dir}/resources/http-servlet">
                <include name="**/*.war" />
                <include name="**/*.jar" />
            </fileset>
        </copy>

        <echo>Copy Diameter RAs</echo>
        <copy todir="${release.dir}/resources/ocs" failonerror="true">
            <fileset dir="${checkout.restcomm-gmlc.dir}/core/bootstrap/src/main/config/ocs">
                <include name="**" />
            </fileset>
        </copy>
        <copy file="${release.dir}/resources/diameter-base/${diam.base.ra.jar}"
              todir="${deploy.dir}" failonerror="true" />
        <copy file="${release.dir}/resources/diameter-slg/${diam.slg.ra.jar}"
              todir="${deploy.dir}" failonerror="true" />
        <copy file="${release.dir}/resources/diameter-slh/${diam.slh.ra.jar}"
              todir="${deploy.dir}" failonerror="true" />
        <copy file="${release.dir}/resources/diameter-sh-client/${diam.sh-client.ra.jar}"
              todir="${deploy.dir}" failonerror="true" />
        <copy file="${release.dir}/resources/diameter-sh-server/${diam.sh-server.ra.jar}"
              todir="${deploy.dir}" failonerror="true" />

        <echo>Copy GMLC server</echo>

        <!--default-->
        <copy file="${checkout.restcomm-gmlc.dir}/core/slee/services/du/target/gmlc-services-du-${restcomm.gmlc.release.version}.jar" todir="${deploy.dir}" failonerror="true" />

        <!--dtd-->
        <!-- This should be a temporary hack -->
        <!--echo>Copy MLP DTD files</echo>
        <copy todir="${jboss.home}/bin" failonerror="true">
            <fileset dir="${checkout.restcomm-gmlc.dir}/core/bootstrap/src/main/config/dtd">
                <include name="**" />
            </fileset>
        </copy-->

        <!--tools-->
        <copy todir="${release.dir}/tools/restcomm-jss7-simulator" failonerror="true">
            <fileset dir="${checkout.restcomm-jss7.dir}/restcomm-jss7-${restcomm-jss7.version}/ss7/restcomm-ss7-simulator">
                <include name="**" />
            </fileset>
        </copy>

        <!--CLI-->
        <copy file="${checkout.restcomm-gmlc.dir}/core/oam/cli/target/gmlc-cli-${restcomm.gmlc.release.version}.jar" todir="${jboss.home}/lib" failonerror="true" />
        <copy todir="${jboss.home}/" failonerror="true">
            <fileset dir="${checkout.restcomm-jss7.dir}/restcomm-jss7-${restcomm-jss7.version}/ss7/shell">
                <include name="**/*" />
            </fileset>
        </copy>

        <!-- restcomm Management HQ is not needed
        <echo>restcomm Management Hq</echo>
        <copy file="${checkout.restcomm-management-hq.dir}/restcomm-management.war" todir="${release.dir}/jboss-5.1.0.GA/server/default/deploy" failonerror="true" />
        <copy file="${checkout.restcomm-management-hq.dir}/restcomm-management.war" todir="${release.dir}/jboss-5.1.0.GA/server/simulator/deploy" failonerror="true" />
        -->

        <!-- jss7 config-->
        <copy file="${checkout.restcomm-gmlc.dir}/core/bootstrap/src/main/config/ss7-simulator/main_simulator2.xml" todir="${release.dir}/tools/restcomm-jss7-simulator/data" failonerror="true" />
        <copy file="${checkout.restcomm-gmlc.dir}/core/bootstrap/src/main/config/ss7-simulator/win_simulator2.xml" todir="${release.dir}/tools/restcomm-jss7-simulator/data" failonerror="true" />

        <copy todir="${deploy.dir}" failonerror="true">
            <fileset dir="${release.dir}/resources/sip11">
                <include name="sip11-ra-DU-**.**" />
            </fileset>
        </copy>

        <!-- simulator -->
        <mkdir dir="${jboss.home}/simulator" />
        <copy todir="${jboss.home}/simulator" failonerror="true">
            <fileset dir="${jboss.home}/standalone">
                <include name="**" />
            </fileset>
        </copy>
        <mkdir dir="${jboss.home}/simulator/data" />
        <copy todir="${jboss.home}/simulator/data" failonerror="true">
            <fileset dir="${checkout.restcomm-gmlc.dir}/core/bootstrap/src/main/config/data">
                <include name="**" />
            </fileset>
        </copy>
    </target>

    <target name="build-docs">
        <exec failonerror="false" executable="${mvn.executable}" dir="${checkout.restcomm-gmlc.dir}/docs">
            <arg line="${release.build.goals} -Pall -Dmaven.test.skip=true" />
        </exec>
    </target>

    <target name="copy-docs">
        <!--docs-->
        <delete dir="${docs.dir}/resources/map"/>

        <copy todir="${docs.dir}/resources/map/html-book" failonerror="false">
            <fileset dir="${checkout.restcomm-map-ra.dir}/generated-docs/html-book">
            </fileset>
        </copy>
        <copy todir="${docs.dir}/resources/map/pdf" failonerror="false">
            <fileset dir="${checkout.restcomm-map-ra.dir}/generated-docs/pdf">
            </fileset>
        </copy>

        <mkdir dir="${docs.dir}/jss7"/>
        <mkdir dir="${docs.dir}/gmlc"/>
        <copy todir="${docs.dir}/jss7" failonerror="false">
            <fileset dir="${checkout.restcomm-jss7.dir}/restcomm-jss7-${restcomm-jss7.version}/_docs/">
            </fileset>
        </copy>
        <copy todir="${docs.dir}/gmlc/adminguide/html-book" failonerror="false">
            <fileset dir="${checkout.restcomm-gmlc.dir}/docs/adminguide/sources-asciidoc/target/generated-docs/html-book">
            </fileset>
        </copy>
        <copy todir="${docs.dir}/gmlc/adminguide/pdf" failonerror="false">
            <fileset dir="${checkout.restcomm-gmlc.dir}/docs/adminguide/sources-asciidoc/target/generated-docs/pdf">
                <include name="*.pdf" />
            </fileset>
        </copy>
        <copy todir="${docs.dir}/gmlc/installationguide/html-book" failonerror="false">
            <fileset dir="${checkout.restcomm-gmlc.dir}/docs/installationguide/sources-asciidoc/target/generated-docs/html-book">
            </fileset>
        </copy>
        <copy todir="${docs.dir}/gmlc/installationguide/pdf" failonerror="false">
            <fileset dir="${checkout.restcomm-gmlc.dir}/docs/installationguide/sources-asciidoc/target/generated-docs/pdf">
                <include name="*.pdf" />
            </fileset>
        </copy>
    </target>


    <target name="make-final-zip" depends="set-time-stamp">
        <zip destfile="${base.dir}/Extended-GMLC-${restcomm.gmlc.release.version}.zip" filesonly="false">
            <zipfileset dir="${release.dir}" prefix="Extended-GMLC-${restcomm.gmlc.release.version}">
                <include name="**" />
            </zipfileset>
        </zip>
    </target>

    <target name="set-time-stamp" unless="skip.timestamp">
        <tstamp>
            <format property="time.stamp" pattern="yyMMddHHmm" />
        </tstamp>
    </target>

    <target name="bundle-documentation" >
        <echo>bundling documentation</echo>

        <mkdir dir="${bundle.docs.dir}"/>

        <copy toDir="${bundle.docs.dir}" overwrite="true">
            <fileset dir="${docs.dir}">
                <include name="**" />
            </fileset>
        </copy>

        <delete dir="${bundle.docs.dir}/slee/resources/http-servlet" />
        <copy todir="${bundle.docs.dir}/slee/resources/http-servlet" failonerror="false">
            <fileset dir="${release.dir}/docs/resources/http-servlet">
                <include name="**" />
            </fileset>
        </copy>

        <zip destfile="${base.dir}/Extended-GMLC-${restcomm.gmlc.release.version}-docs.zip" filesonly="false">
            <zipfileset dir="${bundle.docs.dir}" prefix="Extended-GMLC-${restcomm.gmlc.release.version}/docs">
                <include name="**/*" />
            </zipfileset>
        </zip>
    </target>

</project>

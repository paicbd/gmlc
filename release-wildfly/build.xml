<?xml version="1.0"?>
<project name="restcomm.gmlc.release" default="release" basedir=".">
    <property environment="sys"/>
    <property name="release.dir" location="${ant.file.restcomm.gmlc.release}/../target" />
    <property name="base.dir" location="${ant.file.restcomm.gmlc.release}/.." />
    <property name="docs.dir" location="${release.dir}/docs" />
    <property name="bundle.docs.dir" location="${base.dir}/docs-bundle" />
    <property name="checkout.dir" value="${base.dir}/checkout" />
    <property name="checkout.restcomm-slee.dir" value="${checkout.dir}/restcomm-slee" />
    <property name="checkout.restcomm-jss7.dir" value="${checkout.dir}/restcomm-jss7" />
    <property name="checkout.restcomm-jss7-ra.dir" value="${checkout.dir}/restcomm-jss7-ra" />
    <property name="checkout.restcomm-map-ra.dir" value="${checkout.dir}/restcomm-map-ra" />
    <property name="checkout.restcomm-gmlc.dir" value="${base.dir}/.." />
    <property name="checkout.restcomm-jss7-build.dir" value="${checkout.dir}/restcomm-jss7-build" />
    <property name="checkout.restcomm-diam.dir" value="${checkout.dir}/restcomm-diam" />
    <property name="checkout.restcomm-slee.jainslee-jss7-build.dir" value="${checkout.dir}/restcomm-jainslee-jss7-build" />
    <property name="checkout.jainslee-supl-ulp-ra.dir" value="${checkout.dir}/jainslee-supl-ulp-ra-build" />
    <!-- SMPP resource adaptor for SIF (SUPL initiation function) -->
    <property name="checkout.restcomm-smpp-ra.dir" value="${checkout.dir}/restcomm-smpp-ra" />
    <property name="restcomm-smpp-ra.version" value="7.1.0-134" />
    <property name="paic.url" value="http://45.79.17.57/PAIC_Extended" />

    <property name="restcomm.gmlc.release.version" value="5.0.0-SNAPSHOT"/>

    <!-- Options for referring to release resource versions -->
    <!-- SLEE stuff -->
    <property name="restcomm-slee.version" value="8.0.0-2" />
    <property name="wildfly_version" value="10.1.0" />

    <!-- jss7 stack and MAP RA -->
    <property name="restcomm-jss7.version" value="8.3.0-259" />
    <property name="checkout.restcomm-jss7.dir" value="${checkout.dir}/Extended-jSS7-${restcomm-jss7.version}" />

    <!-- MAP RA -->
    <property name="restcomm-map-ra.build-number" value="162" />
    <property name="restcomm-map-ra.version" value="8.0.0-${restcomm-map-ra.build-number}" />
    <property name="restcomm-map-ra.download.zip.url" value="${paic.url}/jain-slee.ss7/${restcomm-map-ra.version}/resources/map.zip" />

    <!-- Required version of smpp must include latest added events -->
    <!-- SMPP  & RA SMPP -->
    <property name="restcomm-smpp-ra.download.jar.file" value="smpp-server-ra-du-${restcomm-smpp-ra.version}.jar" />
    <property name="restcomm-smpp-ra.download.docs.file" value="smpp-ra-generated-docs.zip" />
    <property name="restcomm-smpp-ra.zip.file" value="${restcomm-smpp-ra.version}.zip" />
    <property name="restcomm-smpp-ra.zip.path" value="${checkout.dir}/${restcomm-smpp-ra.zip.file}" />
    <property name="restcomm-smpp-ra.download.url" value="${paic.url}/jain_slee_smpp/${restcomm-smpp-ra.version}/${restcomm-smpp-ra.zip.file}" />
    <property name="restcomm-smpp-ra.download.docs.url" value="${paic.url}/jain_slee_smpp/${restcomm-smpp-ra.version}/${restcomm-smpp-ra.download.docs.file}" />
    <property name="restcomm-smpp-ra.distro.jar.path" value="${checkout.dir}/${restcomm-smpp-ra.download.jar.file}" />
    <property name="restcomm-smpp-ra.distro.docs.path" value="${checkout.dir}/${restcomm-smpp-ra.download.docs.file}" />


    <!-- Diameter mux  -->
    <property name="restcomm-diam.build-number" value="198" />
    <property name="restcomm-diam.version" value="1.7.4-${restcomm-diam.build-number}" />
    <property name="restcomm-diam.zip" value="restcomm-diameter-mux-wildfly-${restcomm-diam.version}.zip"/>
    <property name="restcomm-diam.download.url" value="${paic.url}/extended_jdiameter/${restcomm-diam.version}/${restcomm-diam.zip}" />

    <!-- Diameter RAs -->
    <property name="diam.slee.ra.version" value ="7.2.1-32" />
    <property name="diam.ra.zip.files" value ="diameter-base.zip,diameter-slg.zip,diameter-slh.zip,diameter-sh-client.zip,diameter-sh-server.zip"/>
    <property name="diam.ra.zip.files.base.url" value ="${paic.url}/jain_slee_diameter/${diam.slee.ra.version}"/>
    <property name="restcomm-diam.distro.zip.path" value="${checkout.dir}/${restcomm-diam.zip}" />
    <property name="diam.base.ra.jar" value ="diameter-restcomm-slee-ra-diameter-base-ra-DU-${diam.slee.ra.version}.jar" />
    <property name="diam.slg.ra.jar" value ="diameter-restcomm-slee-ra-diameter-slg-ra-DU-${diam.slee.ra.version}.jar" />
    <property name="diam.slh.ra.jar" value ="diameter-restcomm-slee-ra-diameter-slh-ra-DU-${diam.slee.ra.version}.jar" />
    <property name="diam.sh-client.ra.jar" value ="diameter-restcomm-slee-ra-diameter-sh-client-ra-DU-${diam.slee.ra.version}.jar" />
    <property name="diam.sh-server.ra.jar" value ="diameter-restcomm-slee-ra-diameter-sh-server-ra-DU-${diam.slee.ra.version}.jar" />

    <!-- SUPL ULP RA -->
    <property name="jainslee-supl-ulp-ra.build-number" value="55" />
    <property name="jainslee-supl-ulp-ra.version" value="1.0.0-${jainslee-supl-ulp-ra.build-number}" />
    <property name="jainslee-supl-ulp-ra.download.zip.url" value="${paic.url}/jain-slee.supl/${jainslee-supl-ulp-ra.version}/ulp.zip" />
    <property name="jainslee-supl-ulp-ra.zip.files" value ="ulp.zip"/>
    <property name="jainslee-supl-ulp-ra.jar" value ="jain-slee-ra-ulp-DU-${jainslee-supl-ulp-ra.version}.jar" />

    <!--GET restcomm-slee & restcomm-jss7 & restcomm-diameter - properties-->
    <property name="restcomm-slee.download.distro.file" value="restcomm-slee-${restcomm-slee.version}-wildfly-${wildfly_version}.Final" />
    <property name="restcomm-slee.download.url" value="${paic.url}/jain_slee/${restcomm-slee.download.distro.file}.zip" />
    <property name="restcomm-slee.distro.zip.path" value="${checkout.dir}/${restcomm-slee.download.distro.file}.zip" />
    <property name="restcomm-jss7.download.distro.file" value="Extended-jSS7-${restcomm-jss7.version}.zip" />
    <property name="restcomm-jss7.download.url" value="${paic.url}/jss7/${restcomm-jss7.download.distro.file}" />
    <property name="restcomm-jss7.distro.zip.path" value="${checkout.dir}/${restcomm-jss7.download.distro.file}" />
    <property name="restcomm-map-ra.download.docs.file" value="RA_docs.zip" />
    <property name="restcomm-map-ra.download.docs.url" value="${paic.url}/docs/${restcomm-map-ra.download.docs.file}" />
    <property name="restcomm-map-ra.distro.docs.path" value="${checkout.dir}/${restcomm-map-ra.download.docs.file}" />

    <property name="release.build.goals" value="clean install dependency:tree -Dmaven.test.skip=true"/>
    <property name="release.ts.deploy.goals.local" value="clean deploy -DaltDeploymentRepository=local-output::default::file:///tmp/output"/>

    <property name="wildfly.home.relative.path" value="wildfly-10.1.0.Final"/>
    <property name="jboss.home" value ="${release.dir}/${wildfly.home.relative.path}/"/>
    <property name="deploy.dir" value="${jboss.home}/standalone/deployments" />

    <property name="mongodb-url" value="${paic.url}/mongodb/mongodb.zip" />
    <property name="redis-url" value="${paic.url}/redis/redis.zip" />
    <property name="cloudhopper_url" value="${paic.url}/smpp_utils/cloudhopper.zip" />
    <property name="restcomm-slee.http.version" value="7.2.0-161" />

    <property name="download_restcomm-slee.http.zip" value="${paic.url}/jain_slee_http/${restcomm-slee.http.version}/extra/restcomm-http.zip" />

    <condition property="mvn.executable" value="${sys.M2_HOME}\bin\mvn.bat" else="mvn">
        <os family="windows"/>
    </condition>

    <taskdef onerror="fail" resource="net/sf/antcontrib/antlib.xml">
        <classpath>
            <pathelement location="${ant.file.restcomm.gmlc.release}/../ant-contrib-1.0b3.jar" />
        </classpath>
    </taskdef>

    <target name="clean">
        <delete dir="${release.dir}" failonerror="false"/>
        <delete dir="${base.dir}/checkout" failonerror="false"/>
        <delete dir="${bundle.docs.dir}" failonerror="false"/>
        <delete includeemptydirs="true" failonerror="false">
            <fileset dir="${checkout.dir}" defaultexcludes="false">
                <exclude name="*.zip" />
                <exclude name="*.jar" />
            </fileset>
        </delete>
        <delete>
            <fileset dir="${base.dir}">
                <include name="Extended-GMLC-*.*" />
                <include name="mongodb.zip" />
                <include name="redis.zip" />
                <include name="cloudhopper.zip" />
            </fileset>
        </delete>
    </target>

    <target name="release" depends="clean,get-deps,extract-deps,clean-up-restcomm-slee,build-gmlc,copy-gmlc,build-docs,copy-docs,diameter-ss7-dependency,make-final-zip,bundle-documentation" />

    <target name="release-no-docs" depends="clean,get-deps,extract-deps,clean-up-restcomm-slee,build-gmlc,copy-gmlc,make-final-zip" />

    <target name="deploy">
        <ant antfile="${ant.file.restcomm.gmlc.release}" target="release">
            <property name="release.build.goals" value="${release.ts.deploy.goals}" />
        </ant>
    </target>

    <target name="deploy-local">
        <ant antfile="${ant.file.restcomm.gmlc.release}" target="release">
            <property name="release.build.goals" value="${release.ts.deploy.goals.local}" />
        </ant>
    </target>

    <target name="get-diameter-slee-files" description="Download and extract the jar files from the given parameters">
        <for delimiter="," param="zipfile" list="${diam.ra.zip.files}">
            <sequential>
                <echo>Downloading Diameter-RA-file: @{zip-file}</echo>
                <exec failonerror="true" executable="wget">
                    <arg value="${diam.ra.zip.files.base.url}/@{zipfile}" />
                    <arg value="--output-document=@{zipfile}" />
                </exec>
                <unzip src="@{zipfile}" dest="${release.dir}" />
                <delete file="@{zipfile}" failonerror="false" />
            </sequential>
        </for>
    </target>

    <!-- get-diam-base-ra,get-diam-ro-ra, -->
    <target name="get-deps" depends="get-restcomm-slee,
            get-diameter-slee-files,
            get-restcomm-http,
            get-restcomm-jss7,
            get-restcomm-map-ra-docs,
            get-map-ra,
            get-restcomm-smpp-ra,
            get-restcomm-smpp-ra-docs,
            get-mongodb,
            get-redis,
            get-restcomm-diam,
            get-cloudhopper,
            get-ulp-ra" />
    <target name="extract-deps" depends="extract-restcomm-slee,extract-restcomm-jss7,build-smpp-ra-copy,extract-restcomm-map-ra-docs,extract-restcomm-smpp-ra-docs,extract-restcomm-diam" />
    <!--target name="extract-deps" depends="extract-restcomm-slee,extract-restcomm-jss7,extract-restcomm-map-ra-docs" /-->

    <target name="get-mongodb">
       <echo>Downloading mongodb from ${paic.url}/mongodb/mongodb.zip</echo>
        <exec failonerror="true" executable="wget">
           <arg value="${mongodb-url}" />
           <arg value="--output-document=mongodb.zip" />
        </exec>
    </target>

    <target name="get-redis">
        <echo>Downloading Redis from ${paic.url}/redis/redis.zip</echo>
        <exec failonerror="true" executable="wget">
            <arg value="${redis-url}" />
            <arg value="--output-document=redis.zip" />
        </exec>
    </target>

    <target name="get-cloudhopper">
        <echo>Downloading Cloudhopper from ${cloudhopper_url}</echo>
        <exec failonerror="true" executable="wget">
            <arg value="${cloudhopper_url}" />
            <arg value="--output-document=cloudhopper.zip" />
        </exec>
    </target>

    <target name="get-restcomm-http">
        <echo>Downloading Restcomm HTTP resource version: ${restcomm-slee.http.version}</echo>
        <exec failonerror="true" executable="wget">
            <arg value="${download_restcomm-slee.http.zip}" />
            <arg value="--output-document=restcomm-http.zip" />
            <arg value="--no-check-certificate" />
        </exec>
        <move file="restcomm-http.zip" todir="${checkout.dir}" />
    </target>

    <target name="get-map-ra">
        <echo>Downloading MAP RA zip. URL ${restcomm-map-ra.download.zip.url}</echo>
        <exec failonerror="true" executable="wget">
            <arg value="${restcomm-map-ra.download.zip.url}" />
            <arg value="--output-document=map.zip" />
        </exec>
        <mkdir dir="${release.dir}/resources" />
        <unzip src="map.zip" dest="${release.dir}/resources" />
        <delete file="map.zip" failonerror="false" />
    </target>

    <!-- SMPP RA -->
    <available file="${restcomm-smpp-ra.zip.path}" property="got.restcomm-smpp-ra" />
    <target name="get-restcomm-smpp-ra" unless="got.restcomm-smpp-ra">
        <echo>Downloading RestComm SMPP RA: ${restcomm-smpp-ra.version}</echo>
        <echo>Download URL = ${restcomm-smpp-ra.download.url} </echo>
        <exec failonerror="true" executable="wget">
            <arg value="${restcomm-smpp-ra.download.url}" />
            <arg value="--output-document=${restcomm-smpp-ra.zip.file}" />
            <arg value="--no-check-certificate" />
        </exec>
        <unzip src="${restcomm-smpp-ra.zip.file}" dest="${checkout.dir}" />
        <delete file="${restcomm-smpp-ra.zip.file}" failonerror="false" />
    </target>

    <available file="${restcomm-smpp-ra.distro.docs.path}" property="got.restcomm-smpp-ra-docs" />
    <target name="get-restcomm-smpp-ra-docs" unless="got.restcomm-smpp-ra-docs">
        <echo>Downloading RestComm SMPP RA docs version: ${restcomm-smpp-ra.version}</echo>
        <echo>Download URL = ${restcomm-smpp-ra.download.docs.url} </echo>
        <exec failonerror="true" executable="wget">
            <arg value="${restcomm-smpp-ra.download.docs.url}" />
            <arg value="--output-document=${restcomm-smpp-ra.download.docs.file}" />
            <arg value="--no-check-certificate" />
        </exec>
        <move file="${base.dir}/${restcomm-smpp-ra.download.docs.file}" todir="${checkout.dir}"/>
    </target>

    <target name="extract-restcomm-smpp-ra-docs" depends="get-restcomm-smpp-ra-docs">
        <delete dir="${checkout.restcomm-smpp-ra.dir}" failonerror="false" />
        <unzip src="${restcomm-smpp-ra.distro.docs.path}" dest="${checkout.restcomm-smpp-ra.dir}"/>
    </target>

    <target name="get-ulp-ra">
        <echo>Downloading SUPL UL RA. URL ${jainslee-supl-ulp-ra.download.zip.url}</echo>
        <exec failonerror="true" executable="wget">
            <arg value="${jainslee-supl-ulp-ra.download.zip.url}" />
            <arg value="--output-document=ulp.zip" />
        </exec>
        <mkdir dir="${release.dir}" />
        <unzip src="ulp.zip" dest="${release.dir}" />
        <delete file="ulp.zip" failonerror="false" />
    </target>

    <available file="${restcomm-slee.distro.zip.path}" property="got.restcomm-slee" />
    <target name="get-restcomm-slee" unless="got.restcomm-slee">
        <echo>Downloading RestComm Slee version: ${restcomm-slee.version}</echo>
        <exec failonerror="true" executable="wget">
            <arg value="${restcomm-slee.download.url}" />
            <arg value="--output-document=${restcomm-slee.download.distro.file}.zip" />
        </exec>
        <move file="${base.dir}/${restcomm-slee.download.distro.file}.zip" todir="${checkout.dir}"/>
    </target>

    <target name="extract-restcomm-slee" depends="get-restcomm-slee">
        <delete dir="${checkout.restcomm-slee.dir}" failonerror="false" />
        <unzip src="${restcomm-slee.distro.zip.path}" dest="${release.dir}"/>
        <copy todir="${release.dir}" failonerror="true">
            <fileset dir="${release.dir}/${restcomm-slee.download.distro.file}">
                <include name="**/*" />
            </fileset>
        </copy>
        <delete dir="${release.dir}/${restcomm-slee.download.distro.file}" includeemptydirs="true" failonerror="false" verbose="false"/>
    </target>

    <available file="${restcomm-jss7.distro.zip.path}" property="got.restcomm-jss7" />
    <target name="get-restcomm-jss7" unless="got.restcomm-jss7">
        <echo>Downloading RestComm JSS7 version: ${restcomm-jss7.version}</echo>
        <exec failonerror="true" executable="wget">
            <arg value="${restcomm-jss7.download.url}" />
            <arg value="--output-document=${restcomm-jss7.download.distro.file}" />
        </exec>
        <move file="${base.dir}/${restcomm-jss7.download.distro.file}" todir="${checkout.dir}"/>
    </target>

    <target name="extract-restcomm-jss7" depends="get-restcomm-jss7">
        <delete dir="${checkout.restcomm-jss7.dir}" failonerror="false" />
        <unzip src="${restcomm-jss7.distro.zip.path}" dest="${checkout.restcomm-jss7.dir}"/>
        <!--move file="${checkout.restcomm-jss7.dir}/restcomm-jss7-${restcomm-jss7.version}" tofile="${checkout.restcomm-jss7.dir}/restcomm-jss7-${restcomm-jss7.version}" failonerror="false"/-->
    </target>

    <available file="${restcomm-map-ra.distro.docs.path}" property="got.restcomm-map-ra-docs" />
    <target name="get-restcomm-map-ra-docs" unless="got.restcomm-map-ra-docs">
        <echo>Downloading RestComm MAP RA docs version: ${restcomm-map-ra.version}</echo>
        <exec failonerror="true" executable="wget">
            <arg value="${restcomm-map-ra.download.docs.url}" />
            <arg value="--output-document=${restcomm-map-ra.download.docs.file}" />
        </exec>
        <move file="${base.dir}/${restcomm-map-ra.download.docs.file}" todir="${checkout.dir}"/>
    </target>

    <target name="extract-restcomm-map-ra-docs" depends="get-restcomm-map-ra-docs">
        <delete dir="${checkout.restcomm-jss7-ra.dir}" failonerror="false" />
        <delete dir="${checkout.restcomm-map-ra.dir}" failonerror="false" />
        <unzip src="${restcomm-map-ra.distro.docs.path}" dest="${checkout.restcomm-jss7-ra.dir}"/>
        <unzip src="${checkout.restcomm-jss7-ra.dir}/RA_docs/MAP/generated-docs.zip" dest="${checkout.restcomm-map-ra.dir}"/>
    </target>

    <available file="${restcomm-diam.distro.zip.path}" property="got.restcomm-diam" />
    <target name="get-restcomm-diam" unless="got.restcomm-diam">
        <echo>Downloading RestComm Diameter version: ${restcomm-diam.version}</echo>
        <exec failonerror="true" executable="wget">
            <arg value="${restcomm-diam.download.url}" />
        </exec>
        <move file="${base.dir}/${restcomm-diam.zip}" todir="${checkout.dir}"/>
    </target>

    <target name="extract-restcomm-diam" depends="get-restcomm-diam">
        <delete dir="${checkout.restcomm-diam.dir}" failonerror="false" />
        <unzip src="${checkout.dir}/${restcomm-diam.zip}" dest="${checkout.restcomm-diam.dir}"/>
    </target>

    <target name="clean-up-restcomm-slee">
        <delete includeemptydirs="true" failonerror="false">
            <fileset dir="${release.dir}/docs/resources" erroronmissingdir="false">
                <include name="**" />
                <exclude name="**/map/**" />
                <exclude name="**/sip11/**" />
                <exclude name="**/diameter-base/**" />
                <exclude name="**/http-servlet/**" />
            </fileset>
        </delete>
        <delete dir="${release.dir}/docs/enablers" includeemptydirs="true" failonerror="true" />
        <delete dir="${release.dir}/docs/examples" includeemptydirs="true" failonerror="true" />
        <delete includeemptydirs="true" failonerror="false">
            <fileset dir="${release.dir}/resources" erroronmissingdir="false">
                <include name="**" />
                <exclude name="**/map/**" />
                <exclude name="**/smpp/**" />
                <exclude name="**/sip11/**" />
                <exclude name="**/diameter-base/**" />
                <exclude name="**/diameter-sh-client/**" />
                <exclude name="**/diameter-sh-server/**" />
                <exclude name="**/diameter-slg/**" />
                <exclude name="**/diameter-slh/**" />
                <exclude name="**/http-servlet/**" />
                <exclude name="**/ulp/**" />
            </fileset>
        </delete>
        <delete includeemptydirs="true" failonerror="false">
            <fileset dir="${release.dir}/extra" erroronmissingdir="false">
                <include name="**" />
                <exclude name="**/restcomm-http/**"/>
            </fileset>
        </delete>
        <delete includeemptydirs="true" failonerror="false">
            <fileset dir="${deploy.dir}">
                <include name="*.jar" />
            </fileset>
        </delete>
        <delete dir="${release.dir}/enablers" includeemptydirs="true" failonerror="false" />
        <delete dir="${release.dir}/examples" includeemptydirs="true" failonerror="false" />
        <delete file="${release.dir}/readme.txt" failonerror="false" />
        <delete file="${release.dir}/sources.zip" failonerror="false" />
    </target>

    <target name="build-smpp-ra-copy">
        <delete dir="${release.dir}/resources/smpp" />
        <mkdir dir="${release.dir}/resources/smpp" />
        <move file="${checkout.dir}/${restcomm-smpp-ra.version}/resources/smpp/smpp-server-ra-du-${restcomm-smpp-ra.version}.jar" todir="${release.dir}/resources/smpp" failonerror="true" />
        <move file="${checkout.dir}/${restcomm-smpp-ra.version}/resources/smpp/build.xml" todir="${release.dir}/resources/smpp" failonerror="true" />
    </target>

    <target name="build-map-ra">
        <exec failonerror="true" executable="${mvn.executable}" dir="${checkout.restcomm-slee.jainslee-jss7-build.dir}/resources/map/">
            <arg line="clean install" />
        </exec>
        <move file="${checkout.restcomm-slee.jainslee-jss7-build.dir}/resources/map/du/target" tofile="${base.dir}/map-ra/target/map-du" failonerror="false"/>
    </target>

    <target name="build-ulp-ra">
        <exec failonerror="false" executable="${mvn.executable}" dir="${checkout.jainslee-supl-ulp-ra.dir}/resources/ulp/">
            <arg line="clean install" />
        </exec>
        <move file="${checkout.jainslee-supl-ulp-ra.dir}/resources/ulp/du/target" tofile="${base.dir}/ulp/target/ulp-du" failonerror="true"/>
    </target>

    <target name="build-gmlc">
        <exec failonerror="true" executable="${mvn.executable}" dir="${checkout.restcomm-gmlc.dir}">
            <arg line="${release.build.goals} -Dmaven.test.skip=true -Passembly" />
        </exec>
    </target>


    <target name="copy-gmlc">

        <mkdir dir="${release.dir}/extra" />

        <!-- deploy: ss7, diameter, http, gmlc -->
        <echo>Copy SS7</echo>
        <copy todir="${release.dir}/extra/restcomm-ss7" failonerror="true">
            <fileset dir="${checkout.restcomm-jss7.dir}/Extended-jSS7-${restcomm-jss7.version}">
                <include name="**" />
            </fileset>
        </copy>
        <ant antfile="${release.dir}/extra/restcomm-ss7/ss7-wildfly/build.xml" target="deploy">
            <property name="basedir" value="${release.dir}/extra/restcomm-ss7/ss7-wildfly" />
        </ant>

        <echo>Copy Diameter</echo>
        <copy todir="${release.dir}/extra/restcomm-diam" failonerror="true">
            <fileset dir="${checkout.restcomm-diam.dir}">
                <include name="**" />
            </fileset>
        </copy>
        <ant antfile="${release.dir}/extra/restcomm-diam/build.xml" target="deploy">
            <property name="basedir" value="${release.dir}/extra/restcomm-diam" />
        </ant>

        <echo>Copy HTTP Servlet</echo>
        <unzip src="${checkout.dir}/restcomm-http.zip" dest="${release.dir}/extra" />
        <delete file="${checkout.dir}/restcomm-http.zip" failonerror="false" />
        <ant antfile="${release.dir}/extra/restcomm-http/build.xml" target="deploy">
            <property name="basedir" value="${release.dir}/extra/restcomm-http" />
        </ant>

        <echo>Copy GMLC extensions</echo>
        <mkdir dir="${release.dir}/extra/gmlc" />
        <copy todir="${release.dir}/extra/gmlc/module" failonerror="true">
            <fileset dir="${checkout.restcomm-gmlc.dir}/core/bootstrap-wildfly/target/module">
                <include name="**" />
            </fileset>
        </copy>
        <copy file="${checkout.restcomm-gmlc.dir}/release-wildfly/extensions-build.xml" todir="${release.dir}/extra/gmlc" failonerror="true" />
        <copy file="${checkout.restcomm-gmlc.dir}/release-wildfly/wildfly-gmlc-subsystem.txt" todir="${release.dir}/extra/gmlc" failonerror="true" />
        <copy file="${checkout.restcomm-gmlc.dir}/release-wildfly/gmlc-logging.txt" todir="${release.dir}/extra/gmlc" failonerror="true" />
        <copy file="${checkout.restcomm-gmlc.dir}/release-wildfly/wildfly-jss7-subsystem.txt" todir="${release.dir}/extra/gmlc" failonerror="true" />
        <copy file="${checkout.restcomm-gmlc.dir}/release-wildfly/xmltask.jar" todir="${release.dir}/extra/gmlc" failonerror="true" />
        <ant antfile="${release.dir}/extra/gmlc/extensions-build.xml" target="deploy">
            <property name="basedir" value="${release.dir}/extra/gmlc" />
        </ant>

        <echo>Copy RestComm MAP RA DU</echo>
        <copy file="${release.dir}/resources/map/restcomm-slee-ra-map-du-${restcomm-map-ra.version}.jar" todir="${deploy.dir}"
              failonerror="true"/>
        <echo>Copy RestComm SMPP RA</echo>
        <copy file="${release.dir}/resources/smpp/${restcomm-smpp-ra.download.jar.file}" todir="${jboss.home}/standalone/deployments" failonerror="true" />
        <echo>Copy RestComm http-servlet RA</echo>
        <copy todir="${deploy.dir}" failonerror="true">
            <fileset dir="${release.dir}/resources/http-servlet">
                <include name="**/*.war" />
                <include name="**/*.jar" />
            </fileset>
        </copy>

        <echo>Copy Diameter RAs</echo>
        <copy todir="${release.dir}/resources/diameter" failonerror="true">
            <fileset dir="${checkout.restcomm-gmlc.dir}/core/bootstrap/src/main/config/diameter">
                <include name="**" />
            </fileset>
        </copy>
        <copy file="${release.dir}/resources/diameter-base/${diam.base.ra.jar}"
              todir="${deploy.dir}" failonerror="true" />
        <copy file="${release.dir}/resources/diameter-slg/${diam.slg.ra.jar}"
              todir="${deploy.dir}" failonerror="true" />
        <copy file="${release.dir}/resources/diameter-slh/${diam.slh.ra.jar}"
              todir="${deploy.dir}" failonerror="true" />
        <copy file="${release.dir}/resources/diameter-sh-client/${diam.sh-client.ra.jar}"
              todir="${deploy.dir}" failonerror="true" />
        <copy file="${release.dir}/resources/diameter-sh-server/${diam.sh-server.ra.jar}"
              todir="${deploy.dir}" failonerror="true" />

        <echo>Copy SUPL UL RA</echo>
        <copy file="${release.dir}/resources/ulp/${jainslee-supl-ulp-ra.jar}" todir="${deploy.dir}"
              failonerror="true"/>

        <echo>Copy GMLC server</echo>

        <!--default-->
        <copy file="${checkout.restcomm-gmlc.dir}/core/slee/services/du/target/gmlc-services-du-${restcomm.gmlc.release.version}.jar" todir="${deploy.dir}" failonerror="true" />

        <!--tools-->
        <copy todir="${release.dir}/tools/restcomm-jss7-simulator" failonerror="true">
            <fileset dir="${checkout.restcomm-jss7.dir}/Extended-jSS7-${restcomm-jss7.version}/ss7/restcomm-ss7-simulator">
                <include name="**" />
            </fileset>
        </copy>

        <!--CLI-->
        <copy file="${checkout.restcomm-gmlc.dir}/core/oam/cli/target/gmlc-cli-${restcomm.gmlc.release.version}.jar" todir="${jboss.home}/lib" failonerror="true" />
        <copy todir="${jboss.home}/" failonerror="true">
            <fileset dir="${checkout.restcomm-jss7.dir}/Extended-jSS7-${restcomm-jss7.version}/ss7/shell">
                <include name="**/*" />
            </fileset>
        </copy>

        <!-- jss7 config-->
        <copy file="${checkout.restcomm-gmlc.dir}/core/bootstrap/src/main/config/ss7-simulator/main_simulator2.xml" todir="${release.dir}/tools/restcomm-jss7-simulator/data" failonerror="true" />
        <copy file="${checkout.restcomm-gmlc.dir}/core/bootstrap/src/main/config/ss7-simulator/win_simulator2.xml" todir="${release.dir}/tools/restcomm-jss7-simulator/data" failonerror="true" />

        <copy todir="${deploy.dir}" failonerror="true">
            <fileset dir="${release.dir}/resources/sip11">
                <include name="sip11-ra-DU-**.**" />
            </fileset>
        </copy>

        <!-- simulator -->
        <mkdir dir="${jboss.home}/simulator" />
        <copy todir="${jboss.home}/simulator" failonerror="true">
            <fileset dir="${jboss.home}/standalone">
                <include name="**" />
            </fileset>
        </copy>
        <mkdir dir="${jboss.home}/simulator/data" />
        <copy todir="${jboss.home}/simulator/data" failonerror="true">
            <fileset dir="${checkout.restcomm-gmlc.dir}/core/bootstrap/src/main/config/data">
                <include name="**" />
            </fileset>
        </copy>
        <!-- manually add the mongodb folder -->
        <unzip src="mongodb.zip" dest="${jboss.home}/modules/system/layers/base/org" />
        <!-- manually add the redis folder -->
        <unzip src="redis.zip" dest="${jboss.home}/modules/system/layers/base" />
        <!-- manually add the cloudhopper folder -->
        <unzip src="cloudhopper.zip" dest="${jboss.home}/modules/system/layers/base/com" />
    </target>

    <target name="build-docs">
        <exec failonerror="false" executable="${mvn.executable}" dir="${checkout.restcomm-gmlc.dir}/docs">
            <arg line="${release.build.goals} -Pall -Dmaven.test.skip=true" />
        </exec>
    </target>

    <target name="diameter-ss7-dependency">
        <replace file="${jboss.home}/modules/system/layers/base/org/restcomm/diameter/lib/main/module.xml">
            <replacetoken><![CDATA[<module name="javax.annotation.api" export="true"/>]]></replacetoken>
            <replacevalue><![CDATA[<module name="javax.annotation.api" export="true"/>
    <module name="org.restcomm.ss7.modules"/>]]></replacevalue>
        </replace>
    </target>

    <target name="copy-docs">
        <!--docs-->
        <delete dir="${docs.dir}/resources/map"/>

        <copy todir="${docs.dir}/resources/map/html-book" failonerror="false">
            <fileset dir="${checkout.restcomm-map-ra.dir}/generated-docs/html-book">
            </fileset>
        </copy>
        <copy todir="${docs.dir}/resources/map/pdf" failonerror="false">
            <fileset dir="${checkout.restcomm-map-ra.dir}/generated-docs/pdf">
            </fileset>
        </copy>
        <copy todir="${docs.dir}/resources/smpp/html-book" failonerror="true">
            <fileset dir="${checkout.restcomm-smpp-ra.dir}/generated-docs/html-book">
            </fileset>
        </copy>
        <copy todir="${docs.dir}/resources/smpp/pdf" failonerror="true">
            <fileset dir="${checkout.restcomm-smpp-ra.dir}/generated-docs/pdf">
            </fileset>
        </copy>

        <mkdir dir="${docs.dir}/jss7"/>
        <mkdir dir="${docs.dir}/gmlc"/>
        <copy todir="${docs.dir}/jss7" failonerror="false">
            <fileset dir="${checkout.restcomm-jss7.dir}/Extended-jSS7-${restcomm-jss7.version}/_docs/">
            </fileset>
        </copy>
        <copy todir="${docs.dir}/gmlc/adminguide/html-book" failonerror="false">
            <fileset dir="${checkout.restcomm-gmlc.dir}/docs/adminguide/sources-asciidoc/target/generated-docs/html-book">
            </fileset>
        </copy>
        <copy todir="${docs.dir}/gmlc/adminguide/pdf" failonerror="false">
            <fileset dir="${checkout.restcomm-gmlc.dir}/docs/adminguide/sources-asciidoc/target/generated-docs/pdf">
                <include name="*.pdf" />
            </fileset>
        </copy>
        <copy todir="${docs.dir}/gmlc/installationguide/html-book" failonerror="false">
            <fileset dir="${checkout.restcomm-gmlc.dir}/docs/installationguide/sources-asciidoc/target/generated-docs/html-book">
            </fileset>
        </copy>
        <copy todir="${docs.dir}/gmlc/installationguide/pdf" failonerror="false">
            <fileset dir="${checkout.restcomm-gmlc.dir}/docs/installationguide/sources-asciidoc/target/generated-docs/pdf">
                <include name="*.pdf" />
            </fileset>
        </copy>
    </target>


    <target name="make-final-zip" depends="set-time-stamp">
        <zip destfile="${base.dir}/Extended-GMLC-${restcomm.gmlc.release.version}.zip" filesonly="false">
            <zipfileset dir="${release.dir}" prefix="Extended-GMLC-${restcomm.gmlc.release.version}">
                <include name="**" />
            </zipfileset>
        </zip>
    </target>

    <target name="set-time-stamp" unless="skip.timestamp">
        <tstamp>
            <format property="time.stamp" pattern="yyMMddHHmm" />
        </tstamp>
    </target>

    <target name="bundle-documentation" >
        <echo>bundling documentation</echo>

        <mkdir dir="${bundle.docs.dir}"/>

        <copy toDir="${bundle.docs.dir}" overwrite="true">
            <fileset dir="${docs.dir}">
                <include name="**" />
            </fileset>
        </copy>

        <delete dir="${bundle.docs.dir}/slee/resources/http-servlet" />
        <copy todir="${bundle.docs.dir}/slee/resources/http-servlet" failonerror="false">
            <fileset dir="${release.dir}/docs/resources/http-servlet">
                <include name="**" />
            </fileset>
        </copy>

        <zip destfile="${base.dir}/Extended-GMLC-${restcomm.gmlc.release.version}-docs.zip" filesonly="false">
            <zipfileset dir="${bundle.docs.dir}" prefix="Extended-GMLC-${restcomm.gmlc.release.version}/docs">
                <include name="**/*" />
            </zipfileset>
        </zip>
    </target>

</project>
